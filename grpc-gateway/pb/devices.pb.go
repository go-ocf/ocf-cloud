// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: github.com/plgd-dev/cloud/grpc-gateway/pb/devices.proto

package pb

import (
	commands "github.com/plgd-dev/cloud/resource-aggregate/commands"
	events "github.com/plgd-dev/cloud/resource-aggregate/events"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDevicesRequest_Status int32

const (
	GetDevicesRequest_ONLINE  GetDevicesRequest_Status = 0
	GetDevicesRequest_OFFLINE GetDevicesRequest_Status = 1
)

// Enum value maps for GetDevicesRequest_Status.
var (
	GetDevicesRequest_Status_name = map[int32]string{
		0: "ONLINE",
		1: "OFFLINE",
	}
	GetDevicesRequest_Status_value = map[string]int32{
		"ONLINE":  0,
		"OFFLINE": 1,
	}
)

func (x GetDevicesRequest_Status) Enum() *GetDevicesRequest_Status {
	p := new(GetDevicesRequest_Status)
	*p = x
	return p
}

func (x GetDevicesRequest_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetDevicesRequest_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_enumTypes[0].Descriptor()
}

func (GetDevicesRequest_Status) Type() protoreflect.EnumType {
	return &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_enumTypes[0]
}

func (x GetDevicesRequest_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetDevicesRequest_Status.Descriptor instead.
func (GetDevicesRequest_Status) EnumDescriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{0, 0}
}

type SubscribeToEvents_CreateSubscription_Event int32

const (
	SubscribeToEvents_CreateSubscription_REGISTERED                     SubscribeToEvents_CreateSubscription_Event = 0
	SubscribeToEvents_CreateSubscription_UNREGISTERED                   SubscribeToEvents_CreateSubscription_Event = 1
	SubscribeToEvents_CreateSubscription_DEVICE_METADATA_UPDATED        SubscribeToEvents_CreateSubscription_Event = 4
	SubscribeToEvents_CreateSubscription_DEVICE_METADATA_UPDATE_PENDING SubscribeToEvents_CreateSubscription_Event = 5
	SubscribeToEvents_CreateSubscription_RESOURCE_PUBLISHED             SubscribeToEvents_CreateSubscription_Event = 6
	SubscribeToEvents_CreateSubscription_RESOURCE_UNPUBLISHED           SubscribeToEvents_CreateSubscription_Event = 7
	SubscribeToEvents_CreateSubscription_RESOURCE_UPDATE_PENDING        SubscribeToEvents_CreateSubscription_Event = 8
	SubscribeToEvents_CreateSubscription_RESOURCE_UPDATED               SubscribeToEvents_CreateSubscription_Event = 9
	SubscribeToEvents_CreateSubscription_RESOURCE_RETRIEVE_PENDING      SubscribeToEvents_CreateSubscription_Event = 10
	SubscribeToEvents_CreateSubscription_RESOURCE_RETRIEVED             SubscribeToEvents_CreateSubscription_Event = 11
	SubscribeToEvents_CreateSubscription_RESOURCE_DELETE_PENDING        SubscribeToEvents_CreateSubscription_Event = 12
	SubscribeToEvents_CreateSubscription_RESOURCE_DELETED               SubscribeToEvents_CreateSubscription_Event = 13
	SubscribeToEvents_CreateSubscription_RESOURCE_CREATE_PENDING        SubscribeToEvents_CreateSubscription_Event = 14
	SubscribeToEvents_CreateSubscription_RESOURCE_CREATED               SubscribeToEvents_CreateSubscription_Event = 15
	SubscribeToEvents_CreateSubscription_RESOURCE_CHANGED               SubscribeToEvents_CreateSubscription_Event = 16
)

// Enum value maps for SubscribeToEvents_CreateSubscription_Event.
var (
	SubscribeToEvents_CreateSubscription_Event_name = map[int32]string{
		0:  "REGISTERED",
		1:  "UNREGISTERED",
		4:  "DEVICE_METADATA_UPDATED",
		5:  "DEVICE_METADATA_UPDATE_PENDING",
		6:  "RESOURCE_PUBLISHED",
		7:  "RESOURCE_UNPUBLISHED",
		8:  "RESOURCE_UPDATE_PENDING",
		9:  "RESOURCE_UPDATED",
		10: "RESOURCE_RETRIEVE_PENDING",
		11: "RESOURCE_RETRIEVED",
		12: "RESOURCE_DELETE_PENDING",
		13: "RESOURCE_DELETED",
		14: "RESOURCE_CREATE_PENDING",
		15: "RESOURCE_CREATED",
		16: "RESOURCE_CHANGED",
	}
	SubscribeToEvents_CreateSubscription_Event_value = map[string]int32{
		"REGISTERED":                     0,
		"UNREGISTERED":                   1,
		"DEVICE_METADATA_UPDATED":        4,
		"DEVICE_METADATA_UPDATE_PENDING": 5,
		"RESOURCE_PUBLISHED":             6,
		"RESOURCE_UNPUBLISHED":           7,
		"RESOURCE_UPDATE_PENDING":        8,
		"RESOURCE_UPDATED":               9,
		"RESOURCE_RETRIEVE_PENDING":      10,
		"RESOURCE_RETRIEVED":             11,
		"RESOURCE_DELETE_PENDING":        12,
		"RESOURCE_DELETED":               13,
		"RESOURCE_CREATE_PENDING":        14,
		"RESOURCE_CREATED":               15,
		"RESOURCE_CHANGED":               16,
	}
)

func (x SubscribeToEvents_CreateSubscription_Event) Enum() *SubscribeToEvents_CreateSubscription_Event {
	p := new(SubscribeToEvents_CreateSubscription_Event)
	*p = x
	return p
}

func (x SubscribeToEvents_CreateSubscription_Event) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscribeToEvents_CreateSubscription_Event) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_enumTypes[1].Descriptor()
}

func (SubscribeToEvents_CreateSubscription_Event) Type() protoreflect.EnumType {
	return &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_enumTypes[1]
}

func (x SubscribeToEvents_CreateSubscription_Event) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscribeToEvents_CreateSubscription_Event.Descriptor instead.
func (SubscribeToEvents_CreateSubscription_Event) EnumDescriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{8, 0, 0}
}

type Event_OperationProcessed_ErrorStatus_Code int32

const (
	Event_OperationProcessed_ErrorStatus_OK        Event_OperationProcessed_ErrorStatus_Code = 0
	Event_OperationProcessed_ErrorStatus_ERROR     Event_OperationProcessed_ErrorStatus_Code = 1
	Event_OperationProcessed_ErrorStatus_NOT_FOUND Event_OperationProcessed_ErrorStatus_Code = 2
)

// Enum value maps for Event_OperationProcessed_ErrorStatus_Code.
var (
	Event_OperationProcessed_ErrorStatus_Code_name = map[int32]string{
		0: "OK",
		1: "ERROR",
		2: "NOT_FOUND",
	}
	Event_OperationProcessed_ErrorStatus_Code_value = map[string]int32{
		"OK":        0,
		"ERROR":     1,
		"NOT_FOUND": 2,
	}
)

func (x Event_OperationProcessed_ErrorStatus_Code) Enum() *Event_OperationProcessed_ErrorStatus_Code {
	p := new(Event_OperationProcessed_ErrorStatus_Code)
	*p = x
	return p
}

func (x Event_OperationProcessed_ErrorStatus_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Event_OperationProcessed_ErrorStatus_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_enumTypes[2].Descriptor()
}

func (Event_OperationProcessed_ErrorStatus_Code) Type() protoreflect.EnumType {
	return &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_enumTypes[2]
}

func (x Event_OperationProcessed_ErrorStatus_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Event_OperationProcessed_ErrorStatus_Code.Descriptor instead.
func (Event_OperationProcessed_ErrorStatus_Code) EnumDescriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{9, 2, 0, 0}
}

type GetDevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeFilter     []string                   `protobuf:"bytes,1,rep,name=type_filter,json=typeFilter,proto3" json:"type_filter,omitempty"`
	StatusFilter   []GetDevicesRequest_Status `protobuf:"varint,2,rep,packed,name=status_filter,json=statusFilter,proto3,enum=ocf.cloud.grpcgateway.pb.GetDevicesRequest_Status" json:"status_filter,omitempty"`
	DeviceIdFilter []string                   `protobuf:"bytes,3,rep,name=device_id_filter,json=deviceIdFilter,proto3" json:"device_id_filter,omitempty"`
}

func (x *GetDevicesRequest) Reset() {
	*x = GetDevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesRequest) ProtoMessage() {}

func (x *GetDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesRequest.ProtoReflect.Descriptor instead.
func (*GetDevicesRequest) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{0}
}

func (x *GetDevicesRequest) GetTypeFilter() []string {
	if x != nil {
		return x.TypeFilter
	}
	return nil
}

func (x *GetDevicesRequest) GetStatusFilter() []GetDevicesRequest_Status {
	if x != nil {
		return x.StatusFilter
	}
	return nil
}

func (x *GetDevicesRequest) GetDeviceIdFilter() []string {
	if x != nil {
		return x.DeviceIdFilter
	}
	return nil
}

type GetResourceLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeFilter     []string `protobuf:"bytes,1,rep,name=type_filter,json=typeFilter,proto3" json:"type_filter,omitempty"`
	DeviceIdFilter []string `protobuf:"bytes,2,rep,name=device_id_filter,json=deviceIdFilter,proto3" json:"device_id_filter,omitempty"`
}

func (x *GetResourceLinksRequest) Reset() {
	*x = GetResourceLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceLinksRequest) ProtoMessage() {}

func (x *GetResourceLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceLinksRequest.ProtoReflect.Descriptor instead.
func (*GetResourceLinksRequest) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{1}
}

func (x *GetResourceLinksRequest) GetTypeFilter() []string {
	if x != nil {
		return x.TypeFilter
	}
	return nil
}

func (x *GetResourceLinksRequest) GetDeviceIdFilter() []string {
	if x != nil {
		return x.DeviceIdFilter
	}
	return nil
}

type GetResourceFromDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId        *commands.ResourceId `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceInterface string               `protobuf:"bytes,2,opt,name=resource_interface,json=resourceInterface,proto3" json:"resource_interface,omitempty"`
}

func (x *GetResourceFromDeviceRequest) Reset() {
	*x = GetResourceFromDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceFromDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceFromDeviceRequest) ProtoMessage() {}

func (x *GetResourceFromDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceFromDeviceRequest.ProtoReflect.Descriptor instead.
func (*GetResourceFromDeviceRequest) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{2}
}

func (x *GetResourceFromDeviceRequest) GetResourceId() *commands.ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *GetResourceFromDeviceRequest) GetResourceInterface() string {
	if x != nil {
		return x.ResourceInterface
	}
	return ""
}

type GetResourceFromDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *events.ResourceRetrieved `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetResourceFromDeviceResponse) Reset() {
	*x = GetResourceFromDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourceFromDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceFromDeviceResponse) ProtoMessage() {}

func (x *GetResourceFromDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceFromDeviceResponse.ProtoReflect.Descriptor instead.
func (*GetResourceFromDeviceResponse) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{3}
}

func (x *GetResourceFromDeviceResponse) GetData() *events.ResourceRetrieved {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// format {deviceID}{href}. eg "ae424c58-e517-4494-6de7-583536c48213/oic/d"
	ResourceIdFilter []string `protobuf:"bytes,1,rep,name=resource_id_filter,json=resourceIdFilter,proto3" json:"resource_id_filter,omitempty"`
	DeviceIdFilter   []string `protobuf:"bytes,2,rep,name=device_id_filter,json=deviceIdFilter,proto3" json:"device_id_filter,omitempty"`
	TypeFilter       []string `protobuf:"bytes,3,rep,name=type_filter,json=typeFilter,proto3" json:"type_filter,omitempty"`
}

func (x *GetResourcesRequest) Reset() {
	*x = GetResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesRequest) ProtoMessage() {}

func (x *GetResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesRequest.ProtoReflect.Descriptor instead.
func (*GetResourcesRequest) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{4}
}

func (x *GetResourcesRequest) GetResourceIdFilter() []string {
	if x != nil {
		return x.ResourceIdFilter
	}
	return nil
}

func (x *GetResourcesRequest) GetDeviceIdFilter() []string {
	if x != nil {
		return x.DeviceIdFilter
	}
	return nil
}

func (x *GetResourcesRequest) GetTypeFilter() []string {
	if x != nil {
		return x.TypeFilter
	}
	return nil
}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types []string                `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	Data  *events.ResourceChanged `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{5}
}

func (x *Resource) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *Resource) GetData() *events.ResourceChanged {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId        *commands.ResourceId `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Content           *Content             `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	ResourceInterface string               `protobuf:"bytes,3,opt,name=resource_interface,json=resourceInterface,proto3" json:"resource_interface,omitempty"`
}

func (x *UpdateResourceRequest) Reset() {
	*x = UpdateResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResourceRequest) ProtoMessage() {}

func (x *UpdateResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResourceRequest.ProtoReflect.Descriptor instead.
func (*UpdateResourceRequest) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateResourceRequest) GetResourceId() *commands.ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *UpdateResourceRequest) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *UpdateResourceRequest) GetResourceInterface() string {
	if x != nil {
		return x.ResourceInterface
	}
	return ""
}

type UpdateResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *events.ResourceUpdated `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateResourceResponse) Reset() {
	*x = UpdateResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResourceResponse) ProtoMessage() {}

func (x *UpdateResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResourceResponse.ProtoReflect.Descriptor instead.
func (*UpdateResourceResponse) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateResourceResponse) GetData() *events.ResourceUpdated {
	if x != nil {
		return x.Data
	}
	return nil
}

type SubscribeToEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*SubscribeToEvents_CreateSubscription_
	//	*SubscribeToEvents_CancelSubscription_
	Action        isSubscribeToEvents_Action `protobuf_oneof:"action"`
	CorrelationId string                     `protobuf:"bytes,101,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"` // for pairing request SubscribeToEvents with Event.OperationProcessed
}

func (x *SubscribeToEvents) Reset() {
	*x = SubscribeToEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToEvents) ProtoMessage() {}

func (x *SubscribeToEvents) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToEvents.ProtoReflect.Descriptor instead.
func (*SubscribeToEvents) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{8}
}

func (m *SubscribeToEvents) GetAction() isSubscribeToEvents_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *SubscribeToEvents) GetCreateSubscription() *SubscribeToEvents_CreateSubscription {
	if x, ok := x.GetAction().(*SubscribeToEvents_CreateSubscription_); ok {
		return x.CreateSubscription
	}
	return nil
}

func (x *SubscribeToEvents) GetCancelSubscription() *SubscribeToEvents_CancelSubscription {
	if x, ok := x.GetAction().(*SubscribeToEvents_CancelSubscription_); ok {
		return x.CancelSubscription
	}
	return nil
}

func (x *SubscribeToEvents) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

type isSubscribeToEvents_Action interface {
	isSubscribeToEvents_Action()
}

type SubscribeToEvents_CreateSubscription_ struct {
	CreateSubscription *SubscribeToEvents_CreateSubscription `protobuf:"bytes,1,opt,name=create_subscription,json=createSubscription,proto3,oneof"`
}

type SubscribeToEvents_CancelSubscription_ struct {
	CancelSubscription *SubscribeToEvents_CancelSubscription `protobuf:"bytes,2,opt,name=cancel_subscription,json=cancelSubscription,proto3,oneof"`
}

func (*SubscribeToEvents_CreateSubscription_) isSubscribeToEvents_Action() {}

func (*SubscribeToEvents_CancelSubscription_) isSubscribeToEvents_Action() {}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"` // subscription id provided by grpc
	CorrelationId  string `protobuf:"bytes,2,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	// Types that are assignable to Type:
	//	*Event_DeviceRegistered_
	//	*Event_DeviceUnregistered_
	//	*Event_ResourcePublished
	//	*Event_ResourceUnpublished
	//	*Event_ResourceChanged
	//	*Event_OperationProcessed_
	//	*Event_SubscriptionCanceled_
	//	*Event_ResourceUpdatePending
	//	*Event_ResourceUpdated
	//	*Event_ResourceRetrievePending
	//	*Event_ResourceRetrieved
	//	*Event_ResourceDeletePending
	//	*Event_ResourceDeleted
	//	*Event_ResourceCreatePending
	//	*Event_ResourceCreated
	//	*Event_DeviceMetadataUpdatePending
	//	*Event_DeviceMetadataUpdated
	Type isEvent_Type `protobuf_oneof:"type"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{9}
}

func (x *Event) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *Event) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (m *Event) GetType() isEvent_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Event) GetDeviceRegistered() *Event_DeviceRegistered {
	if x, ok := x.GetType().(*Event_DeviceRegistered_); ok {
		return x.DeviceRegistered
	}
	return nil
}

func (x *Event) GetDeviceUnregistered() *Event_DeviceUnregistered {
	if x, ok := x.GetType().(*Event_DeviceUnregistered_); ok {
		return x.DeviceUnregistered
	}
	return nil
}

func (x *Event) GetResourcePublished() *events.ResourceLinksPublished {
	if x, ok := x.GetType().(*Event_ResourcePublished); ok {
		return x.ResourcePublished
	}
	return nil
}

func (x *Event) GetResourceUnpublished() *events.ResourceLinksUnpublished {
	if x, ok := x.GetType().(*Event_ResourceUnpublished); ok {
		return x.ResourceUnpublished
	}
	return nil
}

func (x *Event) GetResourceChanged() *events.ResourceChanged {
	if x, ok := x.GetType().(*Event_ResourceChanged); ok {
		return x.ResourceChanged
	}
	return nil
}

func (x *Event) GetOperationProcessed() *Event_OperationProcessed {
	if x, ok := x.GetType().(*Event_OperationProcessed_); ok {
		return x.OperationProcessed
	}
	return nil
}

func (x *Event) GetSubscriptionCanceled() *Event_SubscriptionCanceled {
	if x, ok := x.GetType().(*Event_SubscriptionCanceled_); ok {
		return x.SubscriptionCanceled
	}
	return nil
}

func (x *Event) GetResourceUpdatePending() *events.ResourceUpdatePending {
	if x, ok := x.GetType().(*Event_ResourceUpdatePending); ok {
		return x.ResourceUpdatePending
	}
	return nil
}

func (x *Event) GetResourceUpdated() *events.ResourceUpdated {
	if x, ok := x.GetType().(*Event_ResourceUpdated); ok {
		return x.ResourceUpdated
	}
	return nil
}

func (x *Event) GetResourceRetrievePending() *events.ResourceRetrievePending {
	if x, ok := x.GetType().(*Event_ResourceRetrievePending); ok {
		return x.ResourceRetrievePending
	}
	return nil
}

func (x *Event) GetResourceRetrieved() *events.ResourceRetrieved {
	if x, ok := x.GetType().(*Event_ResourceRetrieved); ok {
		return x.ResourceRetrieved
	}
	return nil
}

func (x *Event) GetResourceDeletePending() *events.ResourceDeletePending {
	if x, ok := x.GetType().(*Event_ResourceDeletePending); ok {
		return x.ResourceDeletePending
	}
	return nil
}

func (x *Event) GetResourceDeleted() *events.ResourceDeleted {
	if x, ok := x.GetType().(*Event_ResourceDeleted); ok {
		return x.ResourceDeleted
	}
	return nil
}

func (x *Event) GetResourceCreatePending() *events.ResourceCreatePending {
	if x, ok := x.GetType().(*Event_ResourceCreatePending); ok {
		return x.ResourceCreatePending
	}
	return nil
}

func (x *Event) GetResourceCreated() *events.ResourceCreated {
	if x, ok := x.GetType().(*Event_ResourceCreated); ok {
		return x.ResourceCreated
	}
	return nil
}

func (x *Event) GetDeviceMetadataUpdatePending() *events.DeviceMetadataUpdatePending {
	if x, ok := x.GetType().(*Event_DeviceMetadataUpdatePending); ok {
		return x.DeviceMetadataUpdatePending
	}
	return nil
}

func (x *Event) GetDeviceMetadataUpdated() *events.DeviceMetadataUpdated {
	if x, ok := x.GetType().(*Event_DeviceMetadataUpdated); ok {
		return x.DeviceMetadataUpdated
	}
	return nil
}

type isEvent_Type interface {
	isEvent_Type()
}

type Event_DeviceRegistered_ struct {
	DeviceRegistered *Event_DeviceRegistered `protobuf:"bytes,3,opt,name=device_registered,json=deviceRegistered,proto3,oneof"`
}

type Event_DeviceUnregistered_ struct {
	DeviceUnregistered *Event_DeviceUnregistered `protobuf:"bytes,4,opt,name=device_unregistered,json=deviceUnregistered,proto3,oneof"`
}

type Event_ResourcePublished struct {
	ResourcePublished *events.ResourceLinksPublished `protobuf:"bytes,7,opt,name=resource_published,json=resourcePublished,proto3,oneof"`
}

type Event_ResourceUnpublished struct {
	ResourceUnpublished *events.ResourceLinksUnpublished `protobuf:"bytes,8,opt,name=resource_unpublished,json=resourceUnpublished,proto3,oneof"`
}

type Event_ResourceChanged struct {
	ResourceChanged *events.ResourceChanged `protobuf:"bytes,9,opt,name=resource_changed,json=resourceChanged,proto3,oneof"`
}

type Event_OperationProcessed_ struct {
	OperationProcessed *Event_OperationProcessed `protobuf:"bytes,10,opt,name=operation_processed,json=operationProcessed,proto3,oneof"`
}

type Event_SubscriptionCanceled_ struct {
	SubscriptionCanceled *Event_SubscriptionCanceled `protobuf:"bytes,11,opt,name=subscription_canceled,json=subscriptionCanceled,proto3,oneof"`
}

type Event_ResourceUpdatePending struct {
	ResourceUpdatePending *events.ResourceUpdatePending `protobuf:"bytes,12,opt,name=resource_update_pending,json=resourceUpdatePending,proto3,oneof"`
}

type Event_ResourceUpdated struct {
	ResourceUpdated *events.ResourceUpdated `protobuf:"bytes,13,opt,name=resource_updated,json=resourceUpdated,proto3,oneof"`
}

type Event_ResourceRetrievePending struct {
	ResourceRetrievePending *events.ResourceRetrievePending `protobuf:"bytes,14,opt,name=resource_retrieve_pending,json=resourceRetrievePending,proto3,oneof"`
}

type Event_ResourceRetrieved struct {
	ResourceRetrieved *events.ResourceRetrieved `protobuf:"bytes,15,opt,name=resource_retrieved,json=resourceRetrieved,proto3,oneof"`
}

type Event_ResourceDeletePending struct {
	ResourceDeletePending *events.ResourceDeletePending `protobuf:"bytes,16,opt,name=resource_delete_pending,json=resourceDeletePending,proto3,oneof"`
}

type Event_ResourceDeleted struct {
	ResourceDeleted *events.ResourceDeleted `protobuf:"bytes,17,opt,name=resource_deleted,json=resourceDeleted,proto3,oneof"`
}

type Event_ResourceCreatePending struct {
	ResourceCreatePending *events.ResourceCreatePending `protobuf:"bytes,18,opt,name=resource_create_pending,json=resourceCreatePending,proto3,oneof"`
}

type Event_ResourceCreated struct {
	ResourceCreated *events.ResourceCreated `protobuf:"bytes,19,opt,name=resource_created,json=resourceCreated,proto3,oneof"`
}

type Event_DeviceMetadataUpdatePending struct {
	DeviceMetadataUpdatePending *events.DeviceMetadataUpdatePending `protobuf:"bytes,20,opt,name=device_metadata_update_pending,json=deviceMetadataUpdatePending,proto3,oneof"`
}

type Event_DeviceMetadataUpdated struct {
	DeviceMetadataUpdated *events.DeviceMetadataUpdated `protobuf:"bytes,21,opt,name=device_metadata_updated,json=deviceMetadataUpdated,proto3,oneof"`
}

func (*Event_DeviceRegistered_) isEvent_Type() {}

func (*Event_DeviceUnregistered_) isEvent_Type() {}

func (*Event_ResourcePublished) isEvent_Type() {}

func (*Event_ResourceUnpublished) isEvent_Type() {}

func (*Event_ResourceChanged) isEvent_Type() {}

func (*Event_OperationProcessed_) isEvent_Type() {}

func (*Event_SubscriptionCanceled_) isEvent_Type() {}

func (*Event_ResourceUpdatePending) isEvent_Type() {}

func (*Event_ResourceUpdated) isEvent_Type() {}

func (*Event_ResourceRetrievePending) isEvent_Type() {}

func (*Event_ResourceRetrieved) isEvent_Type() {}

func (*Event_ResourceDeletePending) isEvent_Type() {}

func (*Event_ResourceDeleted) isEvent_Type() {}

func (*Event_ResourceCreatePending) isEvent_Type() {}

func (*Event_ResourceCreated) isEvent_Type() {}

func (*Event_DeviceMetadataUpdatePending) isEvent_Type() {}

func (*Event_DeviceMetadataUpdated) isEvent_Type() {}

type LocalizedString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *LocalizedString) Reset() {
	*x = LocalizedString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalizedString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalizedString) ProtoMessage() {}

func (x *LocalizedString) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalizedString.ProtoReflect.Descriptor instead.
func (*LocalizedString) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{10}
}

func (x *LocalizedString) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *LocalizedString) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Types                 []string           `protobuf:"bytes,2,rep,name=types,proto3" json:"types,omitempty"`
	Name                  string             `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Metadata              *Device_Metadata   `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	ManufacturerName      []*LocalizedString `protobuf:"bytes,5,rep,name=manufacturer_name,json=manufacturerName,proto3" json:"manufacturer_name,omitempty"`
	ModelNumber           string             `protobuf:"bytes,6,opt,name=model_number,json=modelNumber,proto3" json:"model_number,omitempty"`
	Interfaces            []string           `protobuf:"bytes,7,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	ProtocolIndependentId string             `protobuf:"bytes,8,opt,name=protocol_independent_id,json=protocolIndependentId,proto3" json:"protocol_independent_id,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{11}
}

func (x *Device) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Device) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetMetadata() *Device_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Device) GetManufacturerName() []*LocalizedString {
	if x != nil {
		return x.ManufacturerName
	}
	return nil
}

func (x *Device) GetModelNumber() string {
	if x != nil {
		return x.ModelNumber
	}
	return ""
}

func (x *Device) GetInterfaces() []string {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *Device) GetProtocolIndependentId() string {
	if x != nil {
		return x.ProtocolIndependentId
	}
	return ""
}

type Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentType string `protobuf:"bytes,1,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Data        []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Content) Reset() {
	*x = Content{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{12}
}

func (x *Content) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *Content) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId *commands.ResourceId `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *DeleteResourceRequest) Reset() {
	*x = DeleteResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResourceRequest) ProtoMessage() {}

func (x *DeleteResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteResourceRequest) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteResourceRequest) GetResourceId() *commands.ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

type DeleteResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *events.ResourceDeleted `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteResourceResponse) Reset() {
	*x = DeleteResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResourceResponse) ProtoMessage() {}

func (x *DeleteResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResourceResponse.ProtoReflect.Descriptor instead.
func (*DeleteResourceResponse) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteResourceResponse) GetData() *events.ResourceDeleted {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId *commands.ResourceId `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Content    *Content             `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *CreateResourceRequest) Reset() {
	*x = CreateResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResourceRequest) ProtoMessage() {}

func (x *CreateResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResourceRequest.ProtoReflect.Descriptor instead.
func (*CreateResourceRequest) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{15}
}

func (x *CreateResourceRequest) GetResourceId() *commands.ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *CreateResourceRequest) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

type CreateResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *events.ResourceCreated `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateResourceResponse) Reset() {
	*x = CreateResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResourceResponse) ProtoMessage() {}

func (x *CreateResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResourceResponse.ProtoReflect.Descriptor instead.
func (*CreateResourceResponse) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{16}
}

func (x *CreateResourceResponse) GetData() *events.ResourceCreated {
	if x != nil {
		return x.Data
	}
	return nil
}

type SubscribeToEvents_CreateSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventFilter      []SubscribeToEvents_CreateSubscription_Event `protobuf:"varint,1,rep,packed,name=event_filter,json=eventFilter,proto3,enum=ocf.cloud.grpcgateway.pb.SubscribeToEvents_CreateSubscription_Event" json:"event_filter,omitempty"`
	DeviceIdFilter   []string                                     `protobuf:"bytes,2,rep,name=device_id_filter,json=deviceIdFilter,proto3" json:"device_id_filter,omitempty"`
	ResourceIdFilter []string                                     `protobuf:"bytes,3,rep,name=resource_id_filter,json=resourceIdFilter,proto3" json:"resource_id_filter,omitempty"`
}

func (x *SubscribeToEvents_CreateSubscription) Reset() {
	*x = SubscribeToEvents_CreateSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToEvents_CreateSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToEvents_CreateSubscription) ProtoMessage() {}

func (x *SubscribeToEvents_CreateSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToEvents_CreateSubscription.ProtoReflect.Descriptor instead.
func (*SubscribeToEvents_CreateSubscription) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{8, 0}
}

func (x *SubscribeToEvents_CreateSubscription) GetEventFilter() []SubscribeToEvents_CreateSubscription_Event {
	if x != nil {
		return x.EventFilter
	}
	return nil
}

func (x *SubscribeToEvents_CreateSubscription) GetDeviceIdFilter() []string {
	if x != nil {
		return x.DeviceIdFilter
	}
	return nil
}

func (x *SubscribeToEvents_CreateSubscription) GetResourceIdFilter() []string {
	if x != nil {
		return x.ResourceIdFilter
	}
	return nil
}

type SubscribeToEvents_CancelSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *SubscribeToEvents_CancelSubscription) Reset() {
	*x = SubscribeToEvents_CancelSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToEvents_CancelSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToEvents_CancelSubscription) ProtoMessage() {}

func (x *SubscribeToEvents_CancelSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToEvents_CancelSubscription.ProtoReflect.Descriptor instead.
func (*SubscribeToEvents_CancelSubscription) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{8, 1}
}

func (x *SubscribeToEvents_CancelSubscription) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type Event_DeviceRegistered struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceIds []string `protobuf:"bytes,1,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
}

func (x *Event_DeviceRegistered) Reset() {
	*x = Event_DeviceRegistered{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_DeviceRegistered) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_DeviceRegistered) ProtoMessage() {}

func (x *Event_DeviceRegistered) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_DeviceRegistered.ProtoReflect.Descriptor instead.
func (*Event_DeviceRegistered) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Event_DeviceRegistered) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

type Event_DeviceUnregistered struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceIds []string `protobuf:"bytes,1,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
}

func (x *Event_DeviceUnregistered) Reset() {
	*x = Event_DeviceUnregistered{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_DeviceUnregistered) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_DeviceUnregistered) ProtoMessage() {}

func (x *Event_DeviceUnregistered) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_DeviceUnregistered.ProtoReflect.Descriptor instead.
func (*Event_DeviceUnregistered) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{9, 1}
}

func (x *Event_DeviceUnregistered) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

type Event_OperationProcessed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorStatus *Event_OperationProcessed_ErrorStatus `protobuf:"bytes,2,opt,name=error_status,json=errorStatus,proto3" json:"error_status,omitempty"`
}

func (x *Event_OperationProcessed) Reset() {
	*x = Event_OperationProcessed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_OperationProcessed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_OperationProcessed) ProtoMessage() {}

func (x *Event_OperationProcessed) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_OperationProcessed.ProtoReflect.Descriptor instead.
func (*Event_OperationProcessed) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{9, 2}
}

func (x *Event_OperationProcessed) GetErrorStatus() *Event_OperationProcessed_ErrorStatus {
	if x != nil {
		return x.ErrorStatus
	}
	return nil
}

type Event_SubscriptionCanceled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *Event_SubscriptionCanceled) Reset() {
	*x = Event_SubscriptionCanceled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_SubscriptionCanceled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_SubscriptionCanceled) ProtoMessage() {}

func (x *Event_SubscriptionCanceled) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_SubscriptionCanceled.ProtoReflect.Descriptor instead.
func (*Event_SubscriptionCanceled) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{9, 3}
}

func (x *Event_SubscriptionCanceled) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type Event_OperationProcessed_ErrorStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Event_OperationProcessed_ErrorStatus_Code `protobuf:"varint,1,opt,name=code,proto3,enum=ocf.cloud.grpcgateway.pb.Event_OperationProcessed_ErrorStatus_Code" json:"code,omitempty"`
	Message string                                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Event_OperationProcessed_ErrorStatus) Reset() {
	*x = Event_OperationProcessed_ErrorStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_OperationProcessed_ErrorStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_OperationProcessed_ErrorStatus) ProtoMessage() {}

func (x *Event_OperationProcessed_ErrorStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_OperationProcessed_ErrorStatus.ProtoReflect.Descriptor instead.
func (*Event_OperationProcessed_ErrorStatus) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{9, 2, 0}
}

func (x *Event_OperationProcessed_ErrorStatus) GetCode() Event_OperationProcessed_ErrorStatus_Code {
	if x != nil {
		return x.Code
	}
	return Event_OperationProcessed_ErrorStatus_OK
}

func (x *Event_OperationProcessed_ErrorStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Device_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                *commands.ConnectionStatus     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ShadowSynchronization commands.ShadowSynchronization `protobuf:"varint,2,opt,name=shadow_synchronization,json=shadowSynchronization,proto3,enum=ocf.cloud.resourceaggregate.pb.ShadowSynchronization" json:"shadow_synchronization,omitempty"`
}

func (x *Device_Metadata) Reset() {
	*x = Device_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device_Metadata) ProtoMessage() {}

func (x *Device_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device_Metadata.ProtoReflect.Descriptor instead.
func (*Device_Metadata) Descriptor() ([]byte, []int) {
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP(), []int{11, 0}
}

func (x *Device_Metadata) GetStatus() *commands.ConnectionStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Device_Metadata) GetShadowSynchronization() commands.ShadowSynchronization {
	if x != nil {
		return x.ShadowSynchronization
	}
	return commands.ShadowSynchronization(0)
}

var File_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto protoreflect.FileDescriptor

var file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDesc = []byte{
	0x0a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6c, 0x67,
	0x64, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x70, 0x62, 0x2f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x6f, 0x63, 0x66, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x70, 0x62, 0x1a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x70, 0x6c, 0x67, 0x64, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x70, 0x6c, 0x67, 0x64, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x2f, 0x70, 0x62, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xda, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x79,
	0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x57, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x32, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x21, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x22, 0x64,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0x9a, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x63, 0x66,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x22, 0x66, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8e, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x28, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x65, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x63, 0x66,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xd0, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x63, 0x66, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x22, 0x5d, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f,
	0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xc6, 0x07, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x54, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x71, 0x0a, 0x13, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x71, 0x0a, 0x13,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6f, 0x63, 0x66, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0xda, 0x04, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x67, 0x0a,
	0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x82,
	0x03, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x47, 0x49,
	0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x52, 0x45,
	0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x45,
	0x56, 0x49, 0x43, 0x45, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x22, 0x0a, 0x1e, 0x44, 0x45, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45,
	0x44, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x55, 0x4e, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x07, 0x12, 0x1b, 0x0a,
	0x17, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x09,
	0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x54,
	0x52, 0x49, 0x45, 0x56, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x0a, 0x12,
	0x16, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x54, 0x52,
	0x49, 0x45, 0x56, 0x45, 0x44, 0x10, 0x0b, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x0c, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x0d, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x0e, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x0f, 0x12, 0x14, 0x0a,
	0x10, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45,
	0x44, 0x10, 0x10, 0x1a, 0x3d, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xae, 0x12, 0x0a,
	0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x5f, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x48, 0x00, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x65, 0x0a, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x75, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x62, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x67,
	0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6f, 0x63, 0x66,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x6d, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x73, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x6e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x5c, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x12, 0x65, 0x0a, 0x13, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x6b, 0x0a, 0x15, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6f, 0x63, 0x66,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x12, 0x6f, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6f, 0x63, 0x66, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x15, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x5c, 0x0a, 0x10, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x75, 0x0a, 0x19, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x5f, 0x70, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6f, 0x63, 0x66,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x17, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x62,
	0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x63, 0x66,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x64, 0x12, 0x6f, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x15, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x5c, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x6f, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x15, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x5c, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f,
	0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x82, 0x01, 0x0a, 0x1e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6f, 0x63, 0x66, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x1b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x6f, 0x0a, 0x17, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x15, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x31, 0x0a, 0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x1a, 0x33, 0x0a, 0x12, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x1a, 0xa4,
	0x02, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x61, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6f, 0x63,
	0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xaa, 0x01, 0x0a, 0x0b, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x57, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x28, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f,
	0x55, 0x4e, 0x44, 0x10, 0x02, 0x1a, 0x2e, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x43, 0x0a,
	0x0f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xa1, 0x04, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x63, 0x66, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x56,
	0x0a, 0x11, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x63, 0x66, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x10, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x1a, 0xc2, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x48,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6c, 0x0a, 0x16, 0x73, 0x68, 0x61, 0x64,
	0x6f, 0x77, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77,
	0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x15, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x64, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4b, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x5d,
	0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa1, 0x01,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f,
	0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x63, 0x66, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x5d, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x63, 0x66, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x6c, 0x67, 0x64, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescOnce sync.Once
	file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescData = file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDesc
)

func file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescGZIP() []byte {
	file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescOnce.Do(func() {
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescData)
	})
	return file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDescData
}

var file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_goTypes = []interface{}{
	(GetDevicesRequest_Status)(0),                   // 0: ocf.cloud.grpcgateway.pb.GetDevicesRequest.Status
	(SubscribeToEvents_CreateSubscription_Event)(0), // 1: ocf.cloud.grpcgateway.pb.SubscribeToEvents.CreateSubscription.Event
	(Event_OperationProcessed_ErrorStatus_Code)(0),  // 2: ocf.cloud.grpcgateway.pb.Event.OperationProcessed.ErrorStatus.Code
	(*GetDevicesRequest)(nil),                       // 3: ocf.cloud.grpcgateway.pb.GetDevicesRequest
	(*GetResourceLinksRequest)(nil),                 // 4: ocf.cloud.grpcgateway.pb.GetResourceLinksRequest
	(*GetResourceFromDeviceRequest)(nil),            // 5: ocf.cloud.grpcgateway.pb.GetResourceFromDeviceRequest
	(*GetResourceFromDeviceResponse)(nil),           // 6: ocf.cloud.grpcgateway.pb.GetResourceFromDeviceResponse
	(*GetResourcesRequest)(nil),                     // 7: ocf.cloud.grpcgateway.pb.GetResourcesRequest
	(*Resource)(nil),                                // 8: ocf.cloud.grpcgateway.pb.Resource
	(*UpdateResourceRequest)(nil),                   // 9: ocf.cloud.grpcgateway.pb.UpdateResourceRequest
	(*UpdateResourceResponse)(nil),                  // 10: ocf.cloud.grpcgateway.pb.UpdateResourceResponse
	(*SubscribeToEvents)(nil),                       // 11: ocf.cloud.grpcgateway.pb.SubscribeToEvents
	(*Event)(nil),                                   // 12: ocf.cloud.grpcgateway.pb.Event
	(*LocalizedString)(nil),                         // 13: ocf.cloud.grpcgateway.pb.LocalizedString
	(*Device)(nil),                                  // 14: ocf.cloud.grpcgateway.pb.Device
	(*Content)(nil),                                 // 15: ocf.cloud.grpcgateway.pb.Content
	(*DeleteResourceRequest)(nil),                   // 16: ocf.cloud.grpcgateway.pb.DeleteResourceRequest
	(*DeleteResourceResponse)(nil),                  // 17: ocf.cloud.grpcgateway.pb.DeleteResourceResponse
	(*CreateResourceRequest)(nil),                   // 18: ocf.cloud.grpcgateway.pb.CreateResourceRequest
	(*CreateResourceResponse)(nil),                  // 19: ocf.cloud.grpcgateway.pb.CreateResourceResponse
	(*SubscribeToEvents_CreateSubscription)(nil),    // 20: ocf.cloud.grpcgateway.pb.SubscribeToEvents.CreateSubscription
	(*SubscribeToEvents_CancelSubscription)(nil),    // 21: ocf.cloud.grpcgateway.pb.SubscribeToEvents.CancelSubscription
	(*Event_DeviceRegistered)(nil),                  // 22: ocf.cloud.grpcgateway.pb.Event.DeviceRegistered
	(*Event_DeviceUnregistered)(nil),                // 23: ocf.cloud.grpcgateway.pb.Event.DeviceUnregistered
	(*Event_OperationProcessed)(nil),                // 24: ocf.cloud.grpcgateway.pb.Event.OperationProcessed
	(*Event_SubscriptionCanceled)(nil),              // 25: ocf.cloud.grpcgateway.pb.Event.SubscriptionCanceled
	(*Event_OperationProcessed_ErrorStatus)(nil),    // 26: ocf.cloud.grpcgateway.pb.Event.OperationProcessed.ErrorStatus
	(*Device_Metadata)(nil),                         // 27: ocf.cloud.grpcgateway.pb.Device.Metadata
	(*commands.ResourceId)(nil),                     // 28: ocf.cloud.resourceaggregate.pb.ResourceId
	(*events.ResourceRetrieved)(nil),                // 29: ocf.cloud.resourceaggregate.pb.ResourceRetrieved
	(*events.ResourceChanged)(nil),                  // 30: ocf.cloud.resourceaggregate.pb.ResourceChanged
	(*events.ResourceUpdated)(nil),                  // 31: ocf.cloud.resourceaggregate.pb.ResourceUpdated
	(*events.ResourceLinksPublished)(nil),           // 32: ocf.cloud.resourceaggregate.pb.ResourceLinksPublished
	(*events.ResourceLinksUnpublished)(nil),         // 33: ocf.cloud.resourceaggregate.pb.ResourceLinksUnpublished
	(*events.ResourceUpdatePending)(nil),            // 34: ocf.cloud.resourceaggregate.pb.ResourceUpdatePending
	(*events.ResourceRetrievePending)(nil),          // 35: ocf.cloud.resourceaggregate.pb.ResourceRetrievePending
	(*events.ResourceDeletePending)(nil),            // 36: ocf.cloud.resourceaggregate.pb.ResourceDeletePending
	(*events.ResourceDeleted)(nil),                  // 37: ocf.cloud.resourceaggregate.pb.ResourceDeleted
	(*events.ResourceCreatePending)(nil),            // 38: ocf.cloud.resourceaggregate.pb.ResourceCreatePending
	(*events.ResourceCreated)(nil),                  // 39: ocf.cloud.resourceaggregate.pb.ResourceCreated
	(*events.DeviceMetadataUpdatePending)(nil),      // 40: ocf.cloud.resourceaggregate.pb.DeviceMetadataUpdatePending
	(*events.DeviceMetadataUpdated)(nil),            // 41: ocf.cloud.resourceaggregate.pb.DeviceMetadataUpdated
	(*commands.ConnectionStatus)(nil),               // 42: ocf.cloud.resourceaggregate.pb.ConnectionStatus
	(commands.ShadowSynchronization)(0),             // 43: ocf.cloud.resourceaggregate.pb.ShadowSynchronization
}
var file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_depIdxs = []int32{
	0,  // 0: ocf.cloud.grpcgateway.pb.GetDevicesRequest.status_filter:type_name -> ocf.cloud.grpcgateway.pb.GetDevicesRequest.Status
	28, // 1: ocf.cloud.grpcgateway.pb.GetResourceFromDeviceRequest.resource_id:type_name -> ocf.cloud.resourceaggregate.pb.ResourceId
	29, // 2: ocf.cloud.grpcgateway.pb.GetResourceFromDeviceResponse.data:type_name -> ocf.cloud.resourceaggregate.pb.ResourceRetrieved
	30, // 3: ocf.cloud.grpcgateway.pb.Resource.data:type_name -> ocf.cloud.resourceaggregate.pb.ResourceChanged
	28, // 4: ocf.cloud.grpcgateway.pb.UpdateResourceRequest.resource_id:type_name -> ocf.cloud.resourceaggregate.pb.ResourceId
	15, // 5: ocf.cloud.grpcgateway.pb.UpdateResourceRequest.content:type_name -> ocf.cloud.grpcgateway.pb.Content
	31, // 6: ocf.cloud.grpcgateway.pb.UpdateResourceResponse.data:type_name -> ocf.cloud.resourceaggregate.pb.ResourceUpdated
	20, // 7: ocf.cloud.grpcgateway.pb.SubscribeToEvents.create_subscription:type_name -> ocf.cloud.grpcgateway.pb.SubscribeToEvents.CreateSubscription
	21, // 8: ocf.cloud.grpcgateway.pb.SubscribeToEvents.cancel_subscription:type_name -> ocf.cloud.grpcgateway.pb.SubscribeToEvents.CancelSubscription
	22, // 9: ocf.cloud.grpcgateway.pb.Event.device_registered:type_name -> ocf.cloud.grpcgateway.pb.Event.DeviceRegistered
	23, // 10: ocf.cloud.grpcgateway.pb.Event.device_unregistered:type_name -> ocf.cloud.grpcgateway.pb.Event.DeviceUnregistered
	32, // 11: ocf.cloud.grpcgateway.pb.Event.resource_published:type_name -> ocf.cloud.resourceaggregate.pb.ResourceLinksPublished
	33, // 12: ocf.cloud.grpcgateway.pb.Event.resource_unpublished:type_name -> ocf.cloud.resourceaggregate.pb.ResourceLinksUnpublished
	30, // 13: ocf.cloud.grpcgateway.pb.Event.resource_changed:type_name -> ocf.cloud.resourceaggregate.pb.ResourceChanged
	24, // 14: ocf.cloud.grpcgateway.pb.Event.operation_processed:type_name -> ocf.cloud.grpcgateway.pb.Event.OperationProcessed
	25, // 15: ocf.cloud.grpcgateway.pb.Event.subscription_canceled:type_name -> ocf.cloud.grpcgateway.pb.Event.SubscriptionCanceled
	34, // 16: ocf.cloud.grpcgateway.pb.Event.resource_update_pending:type_name -> ocf.cloud.resourceaggregate.pb.ResourceUpdatePending
	31, // 17: ocf.cloud.grpcgateway.pb.Event.resource_updated:type_name -> ocf.cloud.resourceaggregate.pb.ResourceUpdated
	35, // 18: ocf.cloud.grpcgateway.pb.Event.resource_retrieve_pending:type_name -> ocf.cloud.resourceaggregate.pb.ResourceRetrievePending
	29, // 19: ocf.cloud.grpcgateway.pb.Event.resource_retrieved:type_name -> ocf.cloud.resourceaggregate.pb.ResourceRetrieved
	36, // 20: ocf.cloud.grpcgateway.pb.Event.resource_delete_pending:type_name -> ocf.cloud.resourceaggregate.pb.ResourceDeletePending
	37, // 21: ocf.cloud.grpcgateway.pb.Event.resource_deleted:type_name -> ocf.cloud.resourceaggregate.pb.ResourceDeleted
	38, // 22: ocf.cloud.grpcgateway.pb.Event.resource_create_pending:type_name -> ocf.cloud.resourceaggregate.pb.ResourceCreatePending
	39, // 23: ocf.cloud.grpcgateway.pb.Event.resource_created:type_name -> ocf.cloud.resourceaggregate.pb.ResourceCreated
	40, // 24: ocf.cloud.grpcgateway.pb.Event.device_metadata_update_pending:type_name -> ocf.cloud.resourceaggregate.pb.DeviceMetadataUpdatePending
	41, // 25: ocf.cloud.grpcgateway.pb.Event.device_metadata_updated:type_name -> ocf.cloud.resourceaggregate.pb.DeviceMetadataUpdated
	27, // 26: ocf.cloud.grpcgateway.pb.Device.metadata:type_name -> ocf.cloud.grpcgateway.pb.Device.Metadata
	13, // 27: ocf.cloud.grpcgateway.pb.Device.manufacturer_name:type_name -> ocf.cloud.grpcgateway.pb.LocalizedString
	28, // 28: ocf.cloud.grpcgateway.pb.DeleteResourceRequest.resource_id:type_name -> ocf.cloud.resourceaggregate.pb.ResourceId
	37, // 29: ocf.cloud.grpcgateway.pb.DeleteResourceResponse.data:type_name -> ocf.cloud.resourceaggregate.pb.ResourceDeleted
	28, // 30: ocf.cloud.grpcgateway.pb.CreateResourceRequest.resource_id:type_name -> ocf.cloud.resourceaggregate.pb.ResourceId
	15, // 31: ocf.cloud.grpcgateway.pb.CreateResourceRequest.content:type_name -> ocf.cloud.grpcgateway.pb.Content
	39, // 32: ocf.cloud.grpcgateway.pb.CreateResourceResponse.data:type_name -> ocf.cloud.resourceaggregate.pb.ResourceCreated
	1,  // 33: ocf.cloud.grpcgateway.pb.SubscribeToEvents.CreateSubscription.event_filter:type_name -> ocf.cloud.grpcgateway.pb.SubscribeToEvents.CreateSubscription.Event
	26, // 34: ocf.cloud.grpcgateway.pb.Event.OperationProcessed.error_status:type_name -> ocf.cloud.grpcgateway.pb.Event.OperationProcessed.ErrorStatus
	2,  // 35: ocf.cloud.grpcgateway.pb.Event.OperationProcessed.ErrorStatus.code:type_name -> ocf.cloud.grpcgateway.pb.Event.OperationProcessed.ErrorStatus.Code
	42, // 36: ocf.cloud.grpcgateway.pb.Device.Metadata.status:type_name -> ocf.cloud.resourceaggregate.pb.ConnectionStatus
	43, // 37: ocf.cloud.grpcgateway.pb.Device.Metadata.shadow_synchronization:type_name -> ocf.cloud.resourceaggregate.pb.ShadowSynchronization
	38, // [38:38] is the sub-list for method output_type
	38, // [38:38] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_init() }
func file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_init() {
	if File_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceFromDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourceFromDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalizedString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToEvents_CreateSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToEvents_CancelSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_DeviceRegistered); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_DeviceUnregistered); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_OperationProcessed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_SubscriptionCanceled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_OperationProcessed_ErrorStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*SubscribeToEvents_CreateSubscription_)(nil),
		(*SubscribeToEvents_CancelSubscription_)(nil),
	}
	file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*Event_DeviceRegistered_)(nil),
		(*Event_DeviceUnregistered_)(nil),
		(*Event_ResourcePublished)(nil),
		(*Event_ResourceUnpublished)(nil),
		(*Event_ResourceChanged)(nil),
		(*Event_OperationProcessed_)(nil),
		(*Event_SubscriptionCanceled_)(nil),
		(*Event_ResourceUpdatePending)(nil),
		(*Event_ResourceUpdated)(nil),
		(*Event_ResourceRetrievePending)(nil),
		(*Event_ResourceRetrieved)(nil),
		(*Event_ResourceDeletePending)(nil),
		(*Event_ResourceDeleted)(nil),
		(*Event_ResourceCreatePending)(nil),
		(*Event_ResourceCreated)(nil),
		(*Event_DeviceMetadataUpdatePending)(nil),
		(*Event_DeviceMetadataUpdated)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_goTypes,
		DependencyIndexes: file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_depIdxs,
		EnumInfos:         file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_enumTypes,
		MessageInfos:      file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_msgTypes,
	}.Build()
	File_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto = out.File
	file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_rawDesc = nil
	file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_goTypes = nil
	file_github_com_plgd_dev_cloud_grpc_gateway_pb_devices_proto_depIdxs = nil
}
