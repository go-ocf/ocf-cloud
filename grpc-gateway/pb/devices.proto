syntax = "proto3";

package grpcgateway.pb;

import "resource-aggregate/pb/commands.proto";
import "resource-aggregate/pb/events.proto";
import "resource-aggregate/pb/resources.proto";

option go_package = "github.com/plgd-dev/hub/v2/grpc-gateway/pb;pb";

message GetDevicesRequest {
  enum Status {
    ONLINE = 0;
    OFFLINE = 1;
  }

  repeated string type_filter = 1;
  repeated Status status_filter = 2;
  repeated string device_id_filter = 3;
}

message DeleteDevicesRequest {
  repeated string device_id_filter = 1;
}

message DeleteDevicesResponse {
  repeated string device_ids = 1;
}

message GetResourceLinksRequest {
  repeated string type_filter = 1;
  repeated string device_id_filter = 2;
}

message GetResourceFromDeviceRequest {
  resourceaggregate.pb.ResourceId resource_id = 1;
  string resource_interface = 2;
  int64 time_to_live = 3;  // command validity in nanoseconds. 0 means forever and minimal value is 100000000 (100ms).
}

message GetResourceFromDeviceResponse {
  resourceaggregate.pb.ResourceRetrieved data = 1;
}

message GetResourcesRequest {
  repeated string resource_id_filter = 1; // format {deviceID}{href}. eg "ae424c58-e517-4494-6de7-583536c48213/oic/d"
  repeated string device_id_filter = 2;
  repeated string type_filter = 3;
}

message Resource {
  repeated string types = 1;
  resourceaggregate.pb.ResourceChanged data = 2;
}

message UpdateResourceRequest {
  resourceaggregate.pb.ResourceId resource_id = 1;
  string resource_interface = 3;
  int64 time_to_live = 4;  // command validity in nanoseconds. 0 means forever and minimal value is 100000000 (100ms).
  Content content = 2;
}

message UpdateResourceResponse {
  resourceaggregate.pb.ResourceUpdated data = 1;
}


message SubscribeToEvents {
  message CreateSubscription {
    enum Event {
      REGISTERED = 0;
      UNREGISTERED = 1;
      DEVICE_METADATA_UPDATED = 4;
      DEVICE_METADATA_UPDATE_PENDING = 5;
      RESOURCE_PUBLISHED = 6;
      RESOURCE_UNPUBLISHED = 7;
      RESOURCE_UPDATE_PENDING = 8;
      RESOURCE_UPDATED = 9;
      RESOURCE_RETRIEVE_PENDING = 10;
      RESOURCE_RETRIEVED = 11;
      RESOURCE_DELETE_PENDING = 12;
      RESOURCE_DELETED = 13;
      RESOURCE_CREATE_PENDING = 14;
      RESOURCE_CREATED = 15;
      RESOURCE_CHANGED = 16;
    }
    repeated Event event_filter = 1;
    repeated string device_id_filter = 2;
    repeated string resource_id_filter = 3; // format {deviceID}{href}. eg "ae424c58-e517-4494-6de7-583536c48213/oic/d"
  }
  message CancelSubscription {
    string subscription_id = 1;
  }
  oneof action {
    CreateSubscription create_subscription = 1;
    CancelSubscription cancel_subscription = 2;
  }
  string correlation_id = 101; // for pairing request SubscribeToEvents with Event.OperationProcessed
}

message Event {
  message DeviceRegistered {
    repeated string device_ids = 1;

     // Open telemetry data propagated to asynchronous events
     map<string,string> open_telemetry_carrier = 100;
  }
  message DeviceUnregistered {
    repeated string device_ids = 1;

    // Open telemetry data propagated to asynchronous events
    map<string,string> open_telemetry_carrier = 100;
  }
  message OperationProcessed {
    message ErrorStatus {
      enum Code {
        OK = 0;
        ERROR = 1;
        NOT_FOUND = 2;
      }
      Code code  = 1;
      string message = 2;
    }
    ErrorStatus error_status = 2;
  }
  message SubscriptionCanceled {
    string reason = 2;
  }

  string subscription_id = 1; // subscription id provided by grpc
  string correlation_id = 2;
  oneof type {
    DeviceRegistered device_registered = 3;
    DeviceUnregistered device_unregistered = 4;
    resourceaggregate.pb.ResourceLinksPublished resource_published = 7;
    resourceaggregate.pb.ResourceLinksUnpublished resource_unpublished = 8;
    resourceaggregate.pb.ResourceChanged resource_changed = 9;
    OperationProcessed operation_processed = 10;
    SubscriptionCanceled subscription_canceled = 11;
    resourceaggregate.pb.ResourceUpdatePending resource_update_pending = 12;
    resourceaggregate.pb.ResourceUpdated resource_updated = 13;
    resourceaggregate.pb.ResourceRetrievePending resource_retrieve_pending = 14;
    resourceaggregate.pb.ResourceRetrieved resource_retrieved = 15;
    resourceaggregate.pb.ResourceDeletePending resource_delete_pending = 16;
    resourceaggregate.pb.ResourceDeleted resource_deleted = 17;
    resourceaggregate.pb.ResourceCreatePending resource_create_pending = 18;
    resourceaggregate.pb.ResourceCreated resource_created = 19;
    resourceaggregate.pb.DeviceMetadataUpdatePending device_metadata_update_pending = 20;
    resourceaggregate.pb.DeviceMetadataUpdated device_metadata_updated = 21;
  }

}

message LocalizedString {
	string language = 1;
	string value = 2;
}

message Device {
  enum OwnershipStatus {
    // cannot determine ownership status
    UNKNOWN = 0;
    // device is ready to be owned the user
    UNOWNED = 1;
    // device is owned by the user. to determine who own the device you need to get ownership resource /oic/sec/doxm
    OWNED = 2;
    // set when device is not secured. (iotivity-lite was built without security)
    UNSUPPORTED = 3;
  }
  message Metadata {
    resourceaggregate.pb.ConnectionStatus status = 1;
    resourceaggregate.pb.ShadowSynchronization shadow_synchronization = 2;
  }
  string id = 1;
  repeated string types = 2;
  string name = 3;
  Metadata metadata = 4;
  repeated LocalizedString manufacturer_name = 5;
  string model_number = 6;
  repeated string interfaces = 7;
  string protocol_independent_id = 8;
  resourceaggregate.pb.ResourceChanged data = 9;
  // ownership status of the device
  OwnershipStatus ownership_status = 10;
  // endpoints with schemas which are hosted by the device
  repeated string endpoints = 11;
}

message Content {
  string content_type = 1;
  bytes data = 2;
}

message DeleteResourceRequest {
  resourceaggregate.pb.ResourceId resource_id = 1;
  int64 time_to_live = 2;  // command validity in nanoseconds. 0 means forever and minimal value is 100000000 (100ms).
}

message DeleteResourceResponse {
  resourceaggregate.pb.ResourceDeleted data = 1;
}

message CreateResourceRequest {
  resourceaggregate.pb.ResourceId resource_id = 1;
  Content content = 2;
  int64 time_to_live = 3;  // command validity in nanoseconds. 0 means forever and minimal value is 100000000 (100ms).
}

message CreateResourceResponse {
  resourceaggregate.pb.ResourceCreated data = 1;
}

