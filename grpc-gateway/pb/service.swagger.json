{
  "swagger": "2.0",
  "info": {
    "title": "plgd hub - HTTP Gateway API",
    "version": "1.0",
    "contact": {
      "name": "plgd.dev",
      "url": "https://github.com/plgd-dev/hub",
      "email": "info@plgd.dev"
    },
    "license": {
      "name": "Apache License 2.0",
      "url": "https://github.com/plgd-dev/hub/blob/v2/LICENSE"
    }
  },
  "tags": [
    {
      "name": "GrpcGateway"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "application/protojson"
  ],
  "produces": [
    "application/json",
    "application/protojson"
  ],
  "paths": {
    "/.well-known/configuration": {
      "get": {
        "summary": "Get cloud configuration",
        "operationId": "GrpcGateway_GetHubConfiguration2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbHubConfigurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Cloud"
        ]
      }
    },
    "/.well-known/hub-configuration": {
      "get": {
        "summary": "Get cloud configuration",
        "operationId": "GrpcGateway_GetHubConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbHubConfigurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Cloud"
        ]
      }
    },
    "/api/v1/devices": {
      "get": {
        "summary": "Get all devices",
        "operationId": "GrpcGateway_GetDevices",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/pbDevice"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of pbDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "typeFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ONLINE",
                "OFFLINE"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "deviceIdFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Cloud"
        ]
      },
      "delete": {
        "summary": "Delete selected devices.",
        "operationId": "GrpcGateway_DeleteDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/grpcgatewaypbDeleteDevicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "deviceIdFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Cloud"
        ]
      }
    },
    "/api/v1/devices-metadata": {
      "get": {
        "summary": "Gets metadata of the devices. Is contains online/offline or shadown synchronization status.",
        "operationId": "GrpcGateway_GetDevicesMetadata",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/pbDeviceMetadataUpdated"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of pbDeviceMetadataUpdated"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "deviceIdFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "typeFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Cloud"
        ]
      }
    },
    "/api/v1/devices/{deviceId}/metadata": {
      "put": {
        "summary": "Enables/disables shadow synchronization for device.",
        "operationId": "GrpcGateway_UpdateDeviceMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/grpcgatewaypbUpdateDeviceMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "twinEnabled": {
                  "type": "boolean"
                },
                "twinForceSynchronization": {
                  "type": "boolean",
                  "description": "force synchronization IoT hub with the device resources and set twin_enabled to true. Use to address potential synchronization issues and prevent operational discrepancies."
                },
                "timeToLive": {
                  "type": "string",
                  "format": "int64",
                  "description": "command validity in nanoseconds. 0 means forever and minimal value is 100000000 (100ms)."
                }
              }
            }
          }
        ],
        "tags": [
          "Device"
        ]
      }
    },
    "/api/v1/devices/{deviceId}/pending-metadata-updates": {
      "delete": {
        "summary": "Cancels device metadata updates.",
        "operationId": "GrpcGateway_CancelPendingMetadataUpdates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/grpcgatewaypbCancelPendingCommandsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "correlationIdFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Resource Directory"
        ]
      }
    },
    "/api/v1/devices/{resourceId.deviceId}/resource-links/{resourceId.href}": {
      "delete": {
        "summary": "Delete resource at the device.",
        "operationId": "GrpcGateway_DeleteResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/grpcgatewaypbDeleteResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resourceId.deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceId.href",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "timeToLive",
            "description": "command validity in nanoseconds. 0 means forever and minimal value is 100000000 (100ms).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Device"
        ]
      },
      "post": {
        "summary": "Create resource at the device.",
        "operationId": "GrpcGateway_CreateResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/grpcgatewaypbCreateResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resourceId.deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceId.href",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/grpcgatewaypbContent"
            }
          },
          {
            "name": "timeToLive",
            "description": "command validity in nanoseconds. 0 means forever and minimal value is 100000000 (100ms).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Device"
        ]
      }
    },
    "/api/v1/devices/{resourceId.deviceId}/resources/{resourceId.href}": {
      "get": {
        "summary": "Get resource from the device.",
        "operationId": "GrpcGateway_GetResourceFromDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetResourceFromDeviceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resourceId.deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceId.href",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "resourceInterface",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeToLive",
            "description": "command validity in nanoseconds. 0 means forever and minimal value is 100000000 (100ms).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Device"
        ]
      },
      "put": {
        "summary": "Update resource at the device.",
        "operationId": "GrpcGateway_UpdateResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/grpcgatewaypbUpdateResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resourceId.deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceId.href",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/grpcgatewaypbContent"
            }
          },
          {
            "name": "resourceInterface",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeToLive",
            "description": "command validity in nanoseconds. 0 means forever and minimal value is 100000000 (100ms).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Device"
        ]
      }
    },
    "/api/v1/events": {
      "get": {
        "summary": "Get events for given combination of device id, resource id and timestamp",
        "operationId": "GrpcGateway_GetEvents",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/pbGetEventsResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of pbGetEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "deviceIdFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceIdFilter",
            "description": "format {deviceID}{href}. eg \"ae424c58-e517-4494-6de7-583536c48213/oic/d\"",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "timestampFilter",
            "description": "filter events with timestamp \u003e than given value",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Cloud"
        ]
      }
    },
    "/api/v1/pending-commands": {
      "get": {
        "summary": "Gets pending commands for devices .",
        "operationId": "GrpcGateway_GetPendingCommands",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/pbPendingCommand"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of pbPendingCommand"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "commandFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "RESOURCE_CREATE",
                "RESOURCE_RETRIEVE",
                "RESOURCE_UPDATE",
                "RESOURCE_DELETE",
                "DEVICE_METADATA_UPDATE"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceIdFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "deviceIdFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "typeFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Cloud"
        ]
      },
      "delete": {
        "summary": "Cancels resource commands.",
        "operationId": "GrpcGateway_CancelPendingCommands",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/grpcgatewaypbCancelPendingCommandsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resourceId.deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceId.href",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "correlationIdFilter",
            "description": "empty array means all.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Resource Directory"
        ]
      }
    },
    "/api/v1/resource-links": {
      "get": {
        "summary": "Get resource links of devices.",
        "operationId": "GrpcGateway_GetResourceLinks",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/pbResourceLinksPublished"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of pbResourceLinksPublished"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "typeFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "deviceIdFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Cloud"
        ]
      }
    },
    "/api/v1/resources": {
      "get": {
        "summary": "Get resources from the resource shadow.",
        "operationId": "GrpcGateway_GetResources",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/grpcgatewaypbResource"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of grpcgatewaypbResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resourceIdFilter",
            "description": "format {deviceID}{href}. eg \"ae424c58-e517-4494-6de7-583536c48213/oic/d\"",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "deviceIdFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "typeFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Cloud"
        ]
      }
    },
    "/api/v1/ws/events": {
      "post": {
        "summary": "When the client creates a subscription.\nSubscription doesn't guarantee that all events will be sent to the client. The client is responsible for synchronize events.",
        "operationId": "GrpcGateway_SubscribeToEvents",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/grpcgatewaypbEvent"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of grpcgatewaypbEvent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " (streaming inputs)",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbSubscribeToEvents"
            }
          }
        ],
        "tags": [
          "Cloud"
        ]
      }
    }
  },
  "definitions": {
    "ConnectionProtocol": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "COAP",
        "COAPS",
        "COAP_TCP",
        "COAPS_TCP",
        "C2C"
      ],
      "default": "UNKNOWN"
    },
    "ConnectionService": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "generated unique id during start the service"
        }
      }
    },
    "DeviceMetadata": {
      "type": "object",
      "properties": {
        "connection": {
          "$ref": "#/definitions/pbConnection"
        },
        "twinSynchronization": {
          "$ref": "#/definitions/pbTwinSynchronization"
        },
        "twinEnabled": {
          "type": "boolean"
        }
      }
    },
    "DeviceOwnershipStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "UNOWNED",
        "OWNED",
        "UNSUPPORTED"
      ],
      "default": "UNKNOWN",
      "title": "- UNKNOWN: cannot determine ownership status\n - UNOWNED: device is ready to be owned the user\n - OWNED: device is owned by the user. to determine who own the device you need to get ownership resource /oic/sec/doxm\n - UNSUPPORTED: set when device is not secured. (iotivity-lite was built without security)"
    },
    "ErrorStatusCode": {
      "type": "string",
      "enum": [
        "OK",
        "ERROR",
        "NOT_FOUND"
      ],
      "default": "OK"
    },
    "EventDeviceRegistered": {
      "type": "object",
      "properties": {
        "deviceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "eventMetadata": {
          "$ref": "#/definitions/identitystorepbEventMetadata",
          "title": "provides metadata of event"
        },
        "openTelemetryCarrier": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Open telemetry data propagated to asynchronous events"
        }
      }
    },
    "EventDeviceUnregistered": {
      "type": "object",
      "properties": {
        "deviceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "eventMetadata": {
          "$ref": "#/definitions/identitystorepbEventMetadata",
          "title": "provides metadata of event"
        },
        "openTelemetryCarrier": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Open telemetry data propagated to asynchronous events"
        }
      }
    },
    "EventOperationProcessed": {
      "type": "object",
      "properties": {
        "errorStatus": {
          "$ref": "#/definitions/OperationProcessedErrorStatus"
        }
      }
    },
    "EventSubscriptionCanceled": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        }
      }
    },
    "GetPendingCommandsRequestCommand": {
      "type": "string",
      "enum": [
        "RESOURCE_CREATE",
        "RESOURCE_RETRIEVE",
        "RESOURCE_UPDATE",
        "RESOURCE_DELETE",
        "DEVICE_METADATA_UPDATE"
      ],
      "default": "RESOURCE_CREATE"
    },
    "OperationProcessedErrorStatus": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/ErrorStatusCode"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "SubscribeToEventsCancelSubscription": {
      "type": "object",
      "properties": {
        "subscriptionId": {
          "type": "string"
        }
      }
    },
    "SubscribeToEventsCreateSubscription": {
      "type": "object",
      "properties": {
        "eventFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscribeToEventsCreateSubscriptionEvent"
          },
          "title": "array of events. eg: [ REGISTERED, UNREGISTERED  ]"
        },
        "deviceIdFilter": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "array of format {deviceID}. eg [ \"ae424c58-e517-4494-6de7-583536c48213\" ]"
        },
        "resourceIdFilter": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "array of format {deviceID}{href}. eg [ \"ae424c58-e517-4494-6de7-583536c48213/oic/d\", \"ae424c58-e517-4494-6de7-583536c48213/oic/p\" ]"
        },
        "hrefFilter": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "array of format {href}. eg [ \"/oic/d\", \"/oic/p\" ]"
        }
      },
      "description": "If you want to subscribe to all events, leave the filter unset.\nUse the event_filter in conjunction with other filters to filter events by type. If event_filter is set, only events with the specified type will be received.\nTo filter devices, use the device_id_filter. It follows the format {deviceID[0]+\"/\"+\"*\", deviceID[1]+\"/\"+\"*\", ...}.\nTo filter resources, use the href_filter. It follows the format {\"*\"+href[0], \"*\"+href[1], ...}.\nWhen both device_id_filter and href_filter are set, the href_filter is applied to each device. {deviceID[0]+href[0], ..., deviceID[1]+href[0], ...}.\nTo filter resources of specific devices, use the resource_id_filter.\nYou can use either device_id_filter or resource_id_filter or both. In this case, the result is the union of both filters.\nCertain filters perform a logical \"or\" operation among the elements of the filter."
    },
    "SubscribeToEventsCreateSubscriptionEvent": {
      "type": "string",
      "enum": [
        "REGISTERED",
        "UNREGISTERED",
        "DEVICE_METADATA_UPDATED",
        "DEVICE_METADATA_UPDATE_PENDING",
        "RESOURCE_PUBLISHED",
        "RESOURCE_UNPUBLISHED",
        "RESOURCE_UPDATE_PENDING",
        "RESOURCE_UPDATED",
        "RESOURCE_RETRIEVE_PENDING",
        "RESOURCE_RETRIEVED",
        "RESOURCE_DELETE_PENDING",
        "RESOURCE_DELETED",
        "RESOURCE_CREATE_PENDING",
        "RESOURCE_CREATED",
        "RESOURCE_CHANGED"
      ],
      "default": "REGISTERED"
    },
    "TwinSynchronizationState": {
      "type": "string",
      "enum": [
        "OUT_OF_SYNC",
        "DISABLED",
        "SYNCING",
        "IN_SYNC"
      ],
      "default": "OUT_OF_SYNC",
      "description": " - OUT_OF_SYNC: As soon as it connects after it was offline or when it goes errorless offline or when twin enabled has been changed to true.\n - DISABLED: As soon as twin enabled is set to false.\n - SYNCING: As soon as device connects, successfully signs in and batch observe is called on device from the cloud.\n - IN_SYNC: As soon as current device resources values are received and applied to twin database. Twin was successfully reconciled after device reconnect and is kept up to date using an active subscription to device resource changes."
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "grpcgatewaypbCancelPendingCommandsResponse": {
      "type": "object",
      "properties": {
        "correlationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "grpcgatewaypbContent": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "grpcgatewaypbCreateResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbResourceCreated"
        }
      }
    },
    "grpcgatewaypbDeleteDevicesResponse": {
      "type": "object",
      "properties": {
        "deviceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "grpcgatewaypbDeleteResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbResourceDeleted"
        }
      }
    },
    "grpcgatewaypbEvent": {
      "type": "object",
      "properties": {
        "subscriptionId": {
          "type": "string",
          "title": "subscription id provided by grpc"
        },
        "correlationId": {
          "type": "string"
        },
        "deviceRegistered": {
          "$ref": "#/definitions/EventDeviceRegistered"
        },
        "deviceUnregistered": {
          "$ref": "#/definitions/EventDeviceUnregistered"
        },
        "resourcePublished": {
          "$ref": "#/definitions/pbResourceLinksPublished"
        },
        "resourceUnpublished": {
          "$ref": "#/definitions/pbResourceLinksUnpublished"
        },
        "resourceChanged": {
          "$ref": "#/definitions/pbResourceChanged"
        },
        "operationProcessed": {
          "$ref": "#/definitions/EventOperationProcessed"
        },
        "subscriptionCanceled": {
          "$ref": "#/definitions/EventSubscriptionCanceled"
        },
        "resourceUpdatePending": {
          "$ref": "#/definitions/pbResourceUpdatePending"
        },
        "resourceUpdated": {
          "$ref": "#/definitions/pbResourceUpdated"
        },
        "resourceRetrievePending": {
          "$ref": "#/definitions/pbResourceRetrievePending"
        },
        "resourceRetrieved": {
          "$ref": "#/definitions/pbResourceRetrieved"
        },
        "resourceDeletePending": {
          "$ref": "#/definitions/pbResourceDeletePending"
        },
        "resourceDeleted": {
          "$ref": "#/definitions/pbResourceDeleted"
        },
        "resourceCreatePending": {
          "$ref": "#/definitions/pbResourceCreatePending"
        },
        "resourceCreated": {
          "$ref": "#/definitions/pbResourceCreated"
        },
        "deviceMetadataUpdatePending": {
          "$ref": "#/definitions/pbDeviceMetadataUpdatePending"
        },
        "deviceMetadataUpdated": {
          "$ref": "#/definitions/pbDeviceMetadataUpdated"
        }
      }
    },
    "grpcgatewaypbResource": {
      "type": "object",
      "properties": {
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "data": {
          "$ref": "#/definitions/pbResourceChanged"
        }
      }
    },
    "grpcgatewaypbUpdateDeviceMetadataResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbDeviceMetadataUpdated"
        }
      }
    },
    "grpcgatewaypbUpdateResourceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbResourceUpdated"
        }
      }
    },
    "identitystorepbEventMetadata": {
      "type": "object",
      "properties": {
        "hubId": {
          "type": "string",
          "title": "the hub which sent the event"
        }
      }
    },
    "pbBuildInfo": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "title": "version of the service"
        },
        "buildDate": {
          "type": "string",
          "title": "build date of the service"
        },
        "commitHash": {
          "type": "string",
          "title": "commit hash of the service"
        },
        "commitDate": {
          "type": "string",
          "title": "commit date of the service"
        },
        "releaseUrl": {
          "type": "string",
          "title": "release url of the service"
        }
      }
    },
    "pbCommandMetadata": {
      "type": "object",
      "properties": {
        "connectionId": {
          "type": "string"
        },
        "sequence": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "pbConnection": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/pbConnectionStatus"
        },
        "onlineValidUntil": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "description": "when status is ONLINE, this field contains the connection id. To update state offline, this field must be same as the one in the previous message."
        },
        "connectedAt": {
          "type": "string",
          "format": "int64",
          "title": "timestamp when the device was connected"
        },
        "protocol": {
          "$ref": "#/definitions/ConnectionProtocol",
          "description": "application protocol. It need to be set when the status is ONLINE."
        },
        "service": {
          "$ref": "#/definitions/ConnectionService",
          "description": "The service.ID, which identify the device being served, must be set when the status is ONLINE. However, during an OFFLINE event, they will be sed to empty values."
        }
      }
    },
    "pbConnectionStatus": {
      "type": "string",
      "enum": [
        "OFFLINE",
        "ONLINE"
      ],
      "default": "OFFLINE"
    },
    "pbDevice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/DeviceMetadata"
        },
        "manufacturerName": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbLocalizedString"
          }
        },
        "modelNumber": {
          "type": "string"
        },
        "interfaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "protocolIndependentId": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/pbResourceChanged"
        },
        "ownershipStatus": {
          "$ref": "#/definitions/DeviceOwnershipStatus",
          "title": "ownership status of the device"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "endpoints with schemas which are hosted by the device"
        }
      }
    },
    "pbDeviceMetadataSnapshotTaken": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "deviceMetadataUpdated": {
          "$ref": "#/definitions/pbDeviceMetadataUpdated"
        },
        "updatePendings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbDeviceMetadataUpdatePending"
          },
          "description": "expired events will be removed by creating a new snapshot."
        },
        "eventMetadata": {
          "$ref": "#/definitions/resourceaggregatepbEventMetadata"
        }
      }
    },
    "pbDeviceMetadataUpdatePending": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "twinEnabled": {
          "type": "boolean"
        },
        "twinForceSynchronization": {
          "type": "boolean"
        },
        "auditContext": {
          "$ref": "#/definitions/resourceaggregatepbAuditContext"
        },
        "eventMetadata": {
          "$ref": "#/definitions/resourceaggregatepbEventMetadata"
        },
        "validUntil": {
          "type": "string",
          "format": "int64",
          "description": "unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when pending event is considered as expired. 0 means forever."
        },
        "openTelemetryCarrier": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Open telemetry data propagated to asynchronous events"
        }
      }
    },
    "pbDeviceMetadataUpdated": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "connection": {
          "$ref": "#/definitions/pbConnection"
        },
        "twinSynchronization": {
          "$ref": "#/definitions/pbTwinSynchronization"
        },
        "twinEnabled": {
          "type": "boolean"
        },
        "auditContext": {
          "$ref": "#/definitions/resourceaggregatepbAuditContext"
        },
        "eventMetadata": {
          "$ref": "#/definitions/resourceaggregatepbEventMetadata"
        },
        "canceled": {
          "type": "boolean",
          "description": "it true then the command with audit_context.correlation_id was canceled."
        },
        "openTelemetryCarrier": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Open telemetry data propagated to asynchronous events"
        }
      }
    },
    "pbDeviceOAuthClient": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "title": "@gotags: yaml:\"clientID\""
        },
        "audience": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "providerName": {
          "type": "string",
          "title": "@gotags: yaml:\"providerName\""
        }
      }
    },
    "pbEndpointInformation": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "priority": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "pbGetDevicesRequestStatus": {
      "type": "string",
      "enum": [
        "ONLINE",
        "OFFLINE"
      ],
      "default": "ONLINE"
    },
    "pbGetEventsResponse": {
      "type": "object",
      "properties": {
        "resourceLinksPublished": {
          "$ref": "#/definitions/pbResourceLinksPublished"
        },
        "resourceLinksUnpublished": {
          "$ref": "#/definitions/pbResourceLinksUnpublished"
        },
        "resourceLinksSnapshotTaken": {
          "$ref": "#/definitions/pbResourceLinksSnapshotTaken"
        },
        "resourceChanged": {
          "$ref": "#/definitions/pbResourceChanged"
        },
        "resourceUpdatePending": {
          "$ref": "#/definitions/pbResourceUpdatePending"
        },
        "resourceUpdated": {
          "$ref": "#/definitions/pbResourceUpdated"
        },
        "resourceRetrievePending": {
          "$ref": "#/definitions/pbResourceRetrievePending"
        },
        "resourceRetrieved": {
          "$ref": "#/definitions/pbResourceRetrieved"
        },
        "resourceDeletePending": {
          "$ref": "#/definitions/pbResourceDeletePending"
        },
        "resourceDeleted": {
          "$ref": "#/definitions/pbResourceDeleted"
        },
        "resourceCreatePending": {
          "$ref": "#/definitions/pbResourceCreatePending"
        },
        "resourceCreated": {
          "$ref": "#/definitions/pbResourceCreated"
        },
        "resourceStateSnapshotTaken": {
          "$ref": "#/definitions/pbResourceStateSnapshotTaken"
        },
        "deviceMetadataUpdatePending": {
          "$ref": "#/definitions/pbDeviceMetadataUpdatePending"
        },
        "deviceMetadataUpdated": {
          "$ref": "#/definitions/pbDeviceMetadataUpdated"
        },
        "deviceMetadataSnapshotTaken": {
          "$ref": "#/definitions/pbDeviceMetadataSnapshotTaken"
        }
      }
    },
    "pbGetResourceFromDeviceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbResourceRetrieved"
        }
      }
    },
    "pbHubConfigurationResponse": {
      "type": "object",
      "properties": {
        "currentTime": {
          "type": "string",
          "format": "int64",
          "description": "provides a current time of server in nanoseconds."
        },
        "jwtOwnerClaim": {
          "type": "string"
        },
        "jwtDeviceIdClaim": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "coapGateway": {
          "type": "string"
        },
        "certificateAuthorities": {
          "type": "string"
        },
        "authority": {
          "type": "string"
        },
        "defaultCommandTimeToLive": {
          "type": "string",
          "format": "int64",
          "description": "exposes default command time to live in nanoseconds for CreateResource, RetrieveResource, UpdateResource, DeleteResource, and UpdateDeviceMetadata commands when it is not set in the request. 0 - means forever."
        },
        "certificateAuthority": {
          "type": "string",
          "title": "certificate_authority in format https://host:port"
        },
        "httpGatewayAddress": {
          "type": "string",
          "title": "cfg for UI http-gateway"
        },
        "webOauthClient": {
          "$ref": "#/definitions/pbWebOAuthClient"
        },
        "deviceOauthClient": {
          "$ref": "#/definitions/pbDeviceOAuthClient"
        },
        "buildInfo": {
          "$ref": "#/definitions/pbBuildInfo",
          "title": "build info"
        }
      }
    },
    "pbLocalizedString": {
      "type": "object",
      "properties": {
        "language": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "pbPendingCommand": {
      "type": "object",
      "properties": {
        "resourceCreatePending": {
          "$ref": "#/definitions/pbResourceCreatePending"
        },
        "resourceRetrievePending": {
          "$ref": "#/definitions/pbResourceRetrievePending"
        },
        "resourceUpdatePending": {
          "$ref": "#/definitions/pbResourceUpdatePending"
        },
        "resourceDeletePending": {
          "$ref": "#/definitions/pbResourceDeletePending"
        },
        "deviceMetadataUpdatePending": {
          "$ref": "#/definitions/pbDeviceMetadataUpdatePending"
        }
      }
    },
    "pbPolicy": {
      "type": "object",
      "properties": {
        "bitFlags": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbResourceChanged": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/pbResourceId"
        },
        "content": {
          "$ref": "#/definitions/resourceaggregatepbContent"
        },
        "status": {
          "$ref": "#/definitions/resourceaggregatepbStatus"
        },
        "auditContext": {
          "$ref": "#/definitions/resourceaggregatepbAuditContext"
        },
        "eventMetadata": {
          "$ref": "#/definitions/resourceaggregatepbEventMetadata"
        },
        "etag": {
          "type": "string",
          "format": "byte",
          "title": "etag of the resource used by twin synchronization"
        },
        "openTelemetryCarrier": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Open telemetry data propagated to asynchronous events"
        }
      }
    },
    "pbResourceCreatePending": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/pbResourceId"
        },
        "content": {
          "$ref": "#/definitions/resourceaggregatepbContent"
        },
        "auditContext": {
          "$ref": "#/definitions/resourceaggregatepbAuditContext"
        },
        "eventMetadata": {
          "$ref": "#/definitions/resourceaggregatepbEventMetadata"
        },
        "validUntil": {
          "type": "string",
          "format": "int64",
          "description": "unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when pending event is considered as expired. 0 means forever."
        },
        "openTelemetryCarrier": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Open telemetry data propagated to asynchronous events"
        }
      }
    },
    "pbResourceCreated": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/pbResourceId"
        },
        "status": {
          "$ref": "#/definitions/resourceaggregatepbStatus"
        },
        "content": {
          "$ref": "#/definitions/resourceaggregatepbContent"
        },
        "auditContext": {
          "$ref": "#/definitions/resourceaggregatepbAuditContext"
        },
        "eventMetadata": {
          "$ref": "#/definitions/resourceaggregatepbEventMetadata"
        },
        "openTelemetryCarrier": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Open telemetry data propagated to asynchronous events"
        }
      }
    },
    "pbResourceDeletePending": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/pbResourceId"
        },
        "auditContext": {
          "$ref": "#/definitions/resourceaggregatepbAuditContext"
        },
        "eventMetadata": {
          "$ref": "#/definitions/resourceaggregatepbEventMetadata"
        },
        "validUntil": {
          "type": "string",
          "format": "int64",
          "description": "unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when pending event is considered as expired. 0 means forever."
        },
        "openTelemetryCarrier": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Open telemetry data propagated to asynchronous events"
        }
      }
    },
    "pbResourceDeleted": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/pbResourceId"
        },
        "status": {
          "$ref": "#/definitions/resourceaggregatepbStatus"
        },
        "content": {
          "$ref": "#/definitions/resourceaggregatepbContent"
        },
        "auditContext": {
          "$ref": "#/definitions/resourceaggregatepbAuditContext"
        },
        "eventMetadata": {
          "$ref": "#/definitions/resourceaggregatepbEventMetadata"
        },
        "openTelemetryCarrier": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Open telemetry data propagated to asynchronous events"
        }
      }
    },
    "pbResourceId": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "href": {
          "type": "string"
        }
      }
    },
    "pbResourceLinksPublished": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/resourceaggregatepbResource"
          }
        },
        "auditContext": {
          "$ref": "#/definitions/resourceaggregatepbAuditContext"
        },
        "eventMetadata": {
          "$ref": "#/definitions/resourceaggregatepbEventMetadata"
        },
        "openTelemetryCarrier": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Open telemetry data propagated to asynchronous events"
        }
      },
      "title": "https://github.com/openconnectivityfoundation/cloud-services/blob/master/swagger2.0/oic.wk.rd.swagger.json#L173"
    },
    "pbResourceLinksSnapshotTaken": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/resourceaggregatepbResource"
          }
        },
        "eventMetadata": {
          "$ref": "#/definitions/resourceaggregatepbEventMetadata"
        },
        "auditContext": {
          "$ref": "#/definitions/resourceaggregatepbAuditContext"
        }
      }
    },
    "pbResourceLinksUnpublished": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "hrefs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auditContext": {
          "$ref": "#/definitions/resourceaggregatepbAuditContext"
        },
        "eventMetadata": {
          "$ref": "#/definitions/resourceaggregatepbEventMetadata"
        },
        "openTelemetryCarrier": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Open telemetry data propagated to asynchronous events"
        }
      },
      "title": "https://github.com/openconnectivityfoundation/cloud-services/blob/master/swagger2.0/oic.wk.rd.swagger.json #Specification CR needed"
    },
    "pbResourceRetrievePending": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/pbResourceId"
        },
        "resourceInterface": {
          "type": "string"
        },
        "auditContext": {
          "$ref": "#/definitions/resourceaggregatepbAuditContext"
        },
        "eventMetadata": {
          "$ref": "#/definitions/resourceaggregatepbEventMetadata"
        },
        "validUntil": {
          "type": "string",
          "format": "int64",
          "description": "unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when pending event is considered as expired. 0 means forever."
        },
        "etag": {
          "type": "string",
          "format": "byte"
        },
        "openTelemetryCarrier": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Open telemetry data propagated to asynchronous events"
        }
      }
    },
    "pbResourceRetrieved": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/pbResourceId"
        },
        "status": {
          "$ref": "#/definitions/resourceaggregatepbStatus"
        },
        "content": {
          "$ref": "#/definitions/resourceaggregatepbContent"
        },
        "auditContext": {
          "$ref": "#/definitions/resourceaggregatepbAuditContext"
        },
        "eventMetadata": {
          "$ref": "#/definitions/resourceaggregatepbEventMetadata"
        },
        "etag": {
          "type": "string",
          "format": "byte"
        },
        "openTelemetryCarrier": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Open telemetry data propagated to asynchronous events"
        }
      }
    },
    "pbResourceStateSnapshotTaken": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/pbResourceId"
        },
        "latestResourceChange": {
          "$ref": "#/definitions/pbResourceChanged"
        },
        "resourceCreatePendings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbResourceCreatePending"
          },
          "description": "expired events will be removed by creating a new snapshot."
        },
        "resourceRetrievePendings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbResourceRetrievePending"
          },
          "description": "expired events will be removed by creating a new snapshot."
        },
        "resourceUpdatePendings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbResourceUpdatePending"
          },
          "description": "expired events will be removed by creating a new snapshot."
        },
        "resourceDeletePendings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbResourceDeletePending"
          },
          "description": "expired events will be removed by creating a new snapshot."
        },
        "auditContext": {
          "$ref": "#/definitions/resourceaggregatepbAuditContext"
        },
        "eventMetadata": {
          "$ref": "#/definitions/resourceaggregatepbEventMetadata"
        }
      }
    },
    "pbResourceUpdatePending": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/pbResourceId"
        },
        "resourceInterface": {
          "type": "string"
        },
        "content": {
          "$ref": "#/definitions/resourceaggregatepbContent"
        },
        "auditContext": {
          "$ref": "#/definitions/resourceaggregatepbAuditContext"
        },
        "eventMetadata": {
          "$ref": "#/definitions/resourceaggregatepbEventMetadata"
        },
        "validUntil": {
          "type": "string",
          "format": "int64",
          "description": "unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when pending event is considered as expired. 0 means forever."
        },
        "openTelemetryCarrier": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Open telemetry data propagated to asynchronous events"
        }
      }
    },
    "pbResourceUpdated": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/pbResourceId"
        },
        "status": {
          "$ref": "#/definitions/resourceaggregatepbStatus"
        },
        "content": {
          "$ref": "#/definitions/resourceaggregatepbContent"
        },
        "auditContext": {
          "$ref": "#/definitions/resourceaggregatepbAuditContext"
        },
        "eventMetadata": {
          "$ref": "#/definitions/resourceaggregatepbEventMetadata"
        },
        "openTelemetryCarrier": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Open telemetry data propagated to asynchronous events"
        }
      }
    },
    "pbSubscribeToEvents": {
      "type": "object",
      "properties": {
        "createSubscription": {
          "$ref": "#/definitions/SubscribeToEventsCreateSubscription"
        },
        "cancelSubscription": {
          "$ref": "#/definitions/SubscribeToEventsCancelSubscription"
        },
        "correlationId": {
          "type": "string",
          "title": "for pairing request SubscribeToEvents with Event.OperationProcessed"
        }
      }
    },
    "pbTwinSynchronization": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/TwinSynchronizationState"
        },
        "syncingAt": {
          "type": "string",
          "format": "int64",
          "description": "unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when synchronization started."
        },
        "inSyncAt": {
          "type": "string",
          "format": "int64",
          "description": "unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when synchronization finished."
        },
        "commandMetadata": {
          "$ref": "#/definitions/pbCommandMetadata",
          "description": "when status is SYNCING, this field contains the connection id. To update state to IN_SYNC, this field must be same as the one in the previous message."
        },
        "forceSynchronizationAt": {
          "type": "string",
          "format": "int64",
          "description": "unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when the force synchronization has been started. 0 means force synchronization has never started."
        }
      }
    },
    "pbWebOAuthClient": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "title": "@gotags: yaml:\"clientID\""
        },
        "audience": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "resourceaggregatepbAuditContext": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        }
      }
    },
    "resourceaggregatepbContent": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        },
        "contentType": {
          "type": "string"
        },
        "coapContentFormat": {
          "type": "integer",
          "format": "int32",
          "title": "-1 means content-format was not provided"
        }
      }
    },
    "resourceaggregatepbEventMetadata": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "uint64"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        },
        "connectionId": {
          "type": "string"
        },
        "sequence": {
          "type": "string",
          "format": "uint64",
          "title": "sequence number within the same connection_id; the ResourceChanged event uses the value to skip old events, other event types might not fill the value"
        },
        "hubId": {
          "type": "string",
          "title": "the hub which sent the event"
        }
      }
    },
    "resourceaggregatepbResource": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "interfaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "anchor": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "supportedContentTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "validUntil": {
          "type": "string",
          "format": "int64"
        },
        "policy": {
          "$ref": "#/definitions/pbPolicy"
        },
        "endpointInformations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbEndpointInformation"
          }
        }
      },
      "title": "https://github.com/openconnectivityfoundation/core/blob/master/schemas/oic.links.properties.core-schema.json"
    },
    "resourceaggregatepbStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "OK",
        "BAD_REQUEST",
        "UNAUTHORIZED",
        "FORBIDDEN",
        "NOT_FOUND",
        "UNAVAILABLE",
        "NOT_IMPLEMENTED",
        "ACCEPTED",
        "ERROR",
        "METHOD_NOT_ALLOWED",
        "CREATED",
        "CANCELED"
      ],
      "default": "UNKNOWN",
      "description": " - CANCELED: Canceled indicates the operation was canceled (typically by the user)."
    }
  }
}
