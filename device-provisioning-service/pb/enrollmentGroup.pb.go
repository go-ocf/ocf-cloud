// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: device-provisioning-service/pb/enrollmentGroup.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type X509Configuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// chain certficates authorities: ..<-intermediateCA1<-intermediateCA<-RootCA which is used to match enrollment group. Supported formats: </path/to/cert.pem>,<data:;base64,{PEM in BASE64}>
	CertificateChain string `protobuf:"bytes,1,opt,name=certificate_chain,json=certificateChain,proto3" json:"certificate_chain,omitempty" bson:"certificateChain"` // @gotags: bson:"certificateChain"
	// the certificate name must be one from certificate_chain, it is used to match enrollment group. If empty, the first certificate from certificate_chain is used
	LeadCertificateName string `protobuf:"bytes,2,opt,name=lead_certificate_name,json=leadCertificateName,proto3" json:"lead_certificate_name,omitempty" bson:"leadCertificateName"` // @gotags: bson:"leadCertificateName"
	// dont validate time during certificate verification
	ExpiredCertificateEnabled bool `protobuf:"varint,3,opt,name=expired_certificate_enabled,json=expiredCertificateEnabled,proto3" json:"expired_certificate_enabled,omitempty" bson:"expiredCertificateEnabled"` // @gotags: bson:"expiredCertificateEnabled"
}

func (x *X509Configuration) Reset() {
	*x = X509Configuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *X509Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*X509Configuration) ProtoMessage() {}

func (x *X509Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use X509Configuration.ProtoReflect.Descriptor instead.
func (*X509Configuration) Descriptor() ([]byte, []int) {
	return file_device_provisioning_service_pb_enrollmentGroup_proto_rawDescGZIP(), []int{0}
}

func (x *X509Configuration) GetCertificateChain() string {
	if x != nil {
		return x.CertificateChain
	}
	return ""
}

func (x *X509Configuration) GetLeadCertificateName() string {
	if x != nil {
		return x.LeadCertificateName
	}
	return ""
}

func (x *X509Configuration) GetExpiredCertificateEnabled() bool {
	if x != nil {
		return x.ExpiredCertificateEnabled
	}
	return false
}

type AttestationMechanism struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// X509 attestation
	X509 *X509Configuration `protobuf:"bytes,1,opt,name=x509,proto3" json:"x509,omitempty" bson:"x509"` // @gotags: bson:"x509"
}

func (x *AttestationMechanism) Reset() {
	*x = AttestationMechanism{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationMechanism) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationMechanism) ProtoMessage() {}

func (x *AttestationMechanism) ProtoReflect() protoreflect.Message {
	mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationMechanism.ProtoReflect.Descriptor instead.
func (*AttestationMechanism) Descriptor() ([]byte, []int) {
	return file_device_provisioning_service_pb_enrollmentGroup_proto_rawDescGZIP(), []int{1}
}

func (x *AttestationMechanism) GetX509() *X509Configuration {
	if x != nil {
		return x.X509
	}
	return nil
}

type EnrollmentGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Enrollment group ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"` // @gotags: bson:"_id"
	// HUB owner of device - used for hub authorization.
	Owner string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty" bson:"owner"` // @gotags: bson:"owner"
	// Attestation mechanism
	AttestationMechanism *AttestationMechanism `protobuf:"bytes,3,opt,name=attestation_mechanism,json=attestationMechanism,proto3" json:"attestation_mechanism,omitempty" bson:"attestationMechanism"` // @gotags: bson:"attestationMechanism"
	// Hub configuration to configure device.
	HubIds []string `protobuf:"bytes,7,rep,name=hub_ids,json=hubIds,proto3" json:"hub_ids,omitempty" bson:"hubIds"` // @gotags: bson:"hubIds"
	// Pre shared key for devices in enrollment group. It can be used for maintenance operations by d2d client. Supported formats: </path/to/psk>,<data:;base64,{PSK in BASE64}>
	PreSharedKey string `protobuf:"bytes,5,opt,name=pre_shared_key,json=preSharedKey,proto3" json:"pre_shared_key,omitempty" bson:"preSharedKey"` // @gotags: bson:"preSharedKey"
	// name of enrollment group
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty" bson:"name"` // @gotags: bson:"name"
}

func (x *EnrollmentGroup) Reset() {
	*x = EnrollmentGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollmentGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollmentGroup) ProtoMessage() {}

func (x *EnrollmentGroup) ProtoReflect() protoreflect.Message {
	mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollmentGroup.ProtoReflect.Descriptor instead.
func (*EnrollmentGroup) Descriptor() ([]byte, []int) {
	return file_device_provisioning_service_pb_enrollmentGroup_proto_rawDescGZIP(), []int{2}
}

func (x *EnrollmentGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EnrollmentGroup) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *EnrollmentGroup) GetAttestationMechanism() *AttestationMechanism {
	if x != nil {
		return x.AttestationMechanism
	}
	return nil
}

func (x *EnrollmentGroup) GetHubIds() []string {
	if x != nil {
		return x.HubIds
	}
	return nil
}

func (x *EnrollmentGroup) GetPreSharedKey() string {
	if x != nil {
		return x.PreSharedKey
	}
	return ""
}

func (x *EnrollmentGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateEnrollmentGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Attestation mechanism
	AttestationMechanism *AttestationMechanism `protobuf:"bytes,2,opt,name=attestation_mechanism,json=attestationMechanism,proto3" json:"attestation_mechanism,omitempty"`
	// Hub configuration to configure device.
	HubIds []string `protobuf:"bytes,6,rep,name=hub_ids,json=hubIds,proto3" json:"hub_ids,omitempty"`
	// Pre shared key for devices in enrollment group. It can be used for maintenance operations by d2d client. Supported formats: </path/to/psk>,<data:;base64,{PSK in BASE64}>
	PreSharedKey string `protobuf:"bytes,4,opt,name=pre_shared_key,json=preSharedKey,proto3" json:"pre_shared_key,omitempty"`
	// name of enrollment group
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateEnrollmentGroupRequest) Reset() {
	*x = CreateEnrollmentGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEnrollmentGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnrollmentGroupRequest) ProtoMessage() {}

func (x *CreateEnrollmentGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnrollmentGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateEnrollmentGroupRequest) Descriptor() ([]byte, []int) {
	return file_device_provisioning_service_pb_enrollmentGroup_proto_rawDescGZIP(), []int{3}
}

func (x *CreateEnrollmentGroupRequest) GetAttestationMechanism() *AttestationMechanism {
	if x != nil {
		return x.AttestationMechanism
	}
	return nil
}

func (x *CreateEnrollmentGroupRequest) GetHubIds() []string {
	if x != nil {
		return x.HubIds
	}
	return nil
}

func (x *CreateEnrollmentGroupRequest) GetPreSharedKey() string {
	if x != nil {
		return x.PreSharedKey
	}
	return ""
}

func (x *CreateEnrollmentGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetEnrollmentGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter by id.
	IdFilter []string `protobuf:"bytes,1,rep,name=id_filter,json=idFilter,proto3" json:"id_filter,omitempty"`
	// Filter by certificates comman names in x509 attestation mechanism
	AttestationMechanismX509CertificateNames []string `protobuf:"bytes,2,rep,name=attestation_mechanism_x509_certificate_names,json=attestationMechanismX509CertificateNames,proto3" json:"attestation_mechanism_x509_certificate_names,omitempty"`
	// Filter by hubId.
	HubIdFilter []string `protobuf:"bytes,3,rep,name=hub_id_filter,json=hubIdFilter,proto3" json:"hub_id_filter,omitempty"`
}

func (x *GetEnrollmentGroupsRequest) Reset() {
	*x = GetEnrollmentGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnrollmentGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnrollmentGroupsRequest) ProtoMessage() {}

func (x *GetEnrollmentGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnrollmentGroupsRequest.ProtoReflect.Descriptor instead.
func (*GetEnrollmentGroupsRequest) Descriptor() ([]byte, []int) {
	return file_device_provisioning_service_pb_enrollmentGroup_proto_rawDescGZIP(), []int{4}
}

func (x *GetEnrollmentGroupsRequest) GetIdFilter() []string {
	if x != nil {
		return x.IdFilter
	}
	return nil
}

func (x *GetEnrollmentGroupsRequest) GetAttestationMechanismX509CertificateNames() []string {
	if x != nil {
		return x.AttestationMechanismX509CertificateNames
	}
	return nil
}

func (x *GetEnrollmentGroupsRequest) GetHubIdFilter() []string {
	if x != nil {
		return x.HubIdFilter
	}
	return nil
}

type UpdateEnrollmentGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Attestation mechanism
	AttestationMechanism *AttestationMechanism `protobuf:"bytes,2,opt,name=attestation_mechanism,json=attestationMechanism,proto3" json:"attestation_mechanism,omitempty"`
	// Hub configuration to configure device.
	HubIds []string `protobuf:"bytes,6,rep,name=hub_ids,json=hubIds,proto3" json:"hub_ids,omitempty"`
	// Pre shared key for devices in enrollment group. It can be used for maintenance operations by d2d client. Supported formats: </path/to/psk>,<data:;base64,{PSK in BASE64}>
	PreSharedKey string `protobuf:"bytes,4,opt,name=pre_shared_key,json=preSharedKey,proto3" json:"pre_shared_key,omitempty"`
	// name of enrollment group
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty" bson:"name"` // @gotags: bson:"name"
}

func (x *UpdateEnrollmentGroup) Reset() {
	*x = UpdateEnrollmentGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEnrollmentGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnrollmentGroup) ProtoMessage() {}

func (x *UpdateEnrollmentGroup) ProtoReflect() protoreflect.Message {
	mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEnrollmentGroup.ProtoReflect.Descriptor instead.
func (*UpdateEnrollmentGroup) Descriptor() ([]byte, []int) {
	return file_device_provisioning_service_pb_enrollmentGroup_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateEnrollmentGroup) GetAttestationMechanism() *AttestationMechanism {
	if x != nil {
		return x.AttestationMechanism
	}
	return nil
}

func (x *UpdateEnrollmentGroup) GetHubIds() []string {
	if x != nil {
		return x.HubIds
	}
	return nil
}

func (x *UpdateEnrollmentGroup) GetPreSharedKey() string {
	if x != nil {
		return x.PreSharedKey
	}
	return ""
}

func (x *UpdateEnrollmentGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateEnrollmentGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Enrollment group ID.
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EnrollmentGroup *UpdateEnrollmentGroup `protobuf:"bytes,2,opt,name=enrollment_group,json=enrollmentGroup,proto3" json:"enrollment_group,omitempty"`
}

func (x *UpdateEnrollmentGroupRequest) Reset() {
	*x = UpdateEnrollmentGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEnrollmentGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnrollmentGroupRequest) ProtoMessage() {}

func (x *UpdateEnrollmentGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEnrollmentGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateEnrollmentGroupRequest) Descriptor() ([]byte, []int) {
	return file_device_provisioning_service_pb_enrollmentGroup_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateEnrollmentGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEnrollmentGroupRequest) GetEnrollmentGroup() *UpdateEnrollmentGroup {
	if x != nil {
		return x.EnrollmentGroup
	}
	return nil
}

type DeleteEnrollmentGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Enrollment group ID.
	IdFilter []string `protobuf:"bytes,1,rep,name=id_filter,json=idFilter,proto3" json:"id_filter,omitempty"`
}

func (x *DeleteEnrollmentGroupsRequest) Reset() {
	*x = DeleteEnrollmentGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEnrollmentGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEnrollmentGroupsRequest) ProtoMessage() {}

func (x *DeleteEnrollmentGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEnrollmentGroupsRequest.ProtoReflect.Descriptor instead.
func (*DeleteEnrollmentGroupsRequest) Descriptor() ([]byte, []int) {
	return file_device_provisioning_service_pb_enrollmentGroup_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteEnrollmentGroupsRequest) GetIdFilter() []string {
	if x != nil {
		return x.IdFilter
	}
	return nil
}

type DeleteEnrollmentGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of deleted records.
	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DeleteEnrollmentGroupsResponse) Reset() {
	*x = DeleteEnrollmentGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEnrollmentGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEnrollmentGroupsResponse) ProtoMessage() {}

func (x *DeleteEnrollmentGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEnrollmentGroupsResponse.ProtoReflect.Descriptor instead.
func (*DeleteEnrollmentGroupsResponse) Descriptor() ([]byte, []int) {
	return file_device_provisioning_service_pb_enrollmentGroup_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteEnrollmentGroupsResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_device_provisioning_service_pb_enrollmentGroup_proto protoreflect.FileDescriptor

var file_device_provisioning_service_pb_enrollmentGroup_proto_rawDesc = []byte{
	0x0a, 0x34, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x62,
	0x2f, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x62, 0x22, 0xb4, 0x01, 0x0a, 0x11, 0x58, 0x35, 0x30, 0x39, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x65, 0x61, 0x64, 0x5f,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6c, 0x65, 0x61, 0x64, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x1b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x19, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x5b, 0x0a, 0x14, 0x41,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e,
	0x69, 0x73, 0x6d, 0x12, 0x43, 0x0a, 0x04, 0x78, 0x35, 0x30, 0x39, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x62,
	0x2e, 0x58, 0x35, 0x30, 0x39, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x04, 0x78, 0x35, 0x30, 0x39, 0x22, 0x81, 0x02, 0x0a, 0x0f, 0x45, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x67, 0x0a, 0x15, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x63, 0x68,
	0x61, 0x6e, 0x69, 0x73, 0x6d, 0x52, 0x14, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x68,
	0x75, 0x62, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x68, 0x75,
	0x62, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72,
	0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x4a, 0x04,
	0x08, 0x04, 0x10, 0x05, 0x52, 0x06, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x22, 0xf5, 0x01, 0x0a,
	0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x67, 0x0a,
	0x15, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x63,
	0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e,
	0x67, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d,
	0x52, 0x14, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x63,
	0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x68, 0x75, 0x62, 0x49, 0x64, 0x73, 0x12,
	0x24, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a,
	0x04, 0x08, 0x03, 0x10, 0x04, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x06, 0x68, 0x75,
	0x62, 0x5f, 0x69, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x5e, 0x0a, 0x2c, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x5f, 0x78, 0x35, 0x30, 0x39, 0x5f, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x28, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x58, 0x35, 0x30, 0x39,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x22, 0x0a, 0x0d, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x75, 0x62, 0x49, 0x64, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0xee, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x67,
	0x0a, 0x15, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65,
	0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69,
	0x6e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73,
	0x6d, 0x52, 0x14, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x75, 0x62, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x68, 0x75, 0x62, 0x49, 0x64, 0x73,
	0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02,
	0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x52, 0x06, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x8e, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x5e, 0x0a, 0x10, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0f, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x3c, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0x36, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e,
	0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x3e, 0x5a, 0x3c,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6c, 0x67, 0x64, 0x2d,
	0x64, 0x65, 0x76, 0x2f, 0x68, 0x75, 0x62, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_device_provisioning_service_pb_enrollmentGroup_proto_rawDescOnce sync.Once
	file_device_provisioning_service_pb_enrollmentGroup_proto_rawDescData = file_device_provisioning_service_pb_enrollmentGroup_proto_rawDesc
)

func file_device_provisioning_service_pb_enrollmentGroup_proto_rawDescGZIP() []byte {
	file_device_provisioning_service_pb_enrollmentGroup_proto_rawDescOnce.Do(func() {
		file_device_provisioning_service_pb_enrollmentGroup_proto_rawDescData = protoimpl.X.CompressGZIP(file_device_provisioning_service_pb_enrollmentGroup_proto_rawDescData)
	})
	return file_device_provisioning_service_pb_enrollmentGroup_proto_rawDescData
}

var file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_device_provisioning_service_pb_enrollmentGroup_proto_goTypes = []any{
	(*X509Configuration)(nil),              // 0: deviceprovisioningservice.pb.X509Configuration
	(*AttestationMechanism)(nil),           // 1: deviceprovisioningservice.pb.AttestationMechanism
	(*EnrollmentGroup)(nil),                // 2: deviceprovisioningservice.pb.EnrollmentGroup
	(*CreateEnrollmentGroupRequest)(nil),   // 3: deviceprovisioningservice.pb.CreateEnrollmentGroupRequest
	(*GetEnrollmentGroupsRequest)(nil),     // 4: deviceprovisioningservice.pb.GetEnrollmentGroupsRequest
	(*UpdateEnrollmentGroup)(nil),          // 5: deviceprovisioningservice.pb.UpdateEnrollmentGroup
	(*UpdateEnrollmentGroupRequest)(nil),   // 6: deviceprovisioningservice.pb.UpdateEnrollmentGroupRequest
	(*DeleteEnrollmentGroupsRequest)(nil),  // 7: deviceprovisioningservice.pb.DeleteEnrollmentGroupsRequest
	(*DeleteEnrollmentGroupsResponse)(nil), // 8: deviceprovisioningservice.pb.DeleteEnrollmentGroupsResponse
}
var file_device_provisioning_service_pb_enrollmentGroup_proto_depIdxs = []int32{
	0, // 0: deviceprovisioningservice.pb.AttestationMechanism.x509:type_name -> deviceprovisioningservice.pb.X509Configuration
	1, // 1: deviceprovisioningservice.pb.EnrollmentGroup.attestation_mechanism:type_name -> deviceprovisioningservice.pb.AttestationMechanism
	1, // 2: deviceprovisioningservice.pb.CreateEnrollmentGroupRequest.attestation_mechanism:type_name -> deviceprovisioningservice.pb.AttestationMechanism
	1, // 3: deviceprovisioningservice.pb.UpdateEnrollmentGroup.attestation_mechanism:type_name -> deviceprovisioningservice.pb.AttestationMechanism
	5, // 4: deviceprovisioningservice.pb.UpdateEnrollmentGroupRequest.enrollment_group:type_name -> deviceprovisioningservice.pb.UpdateEnrollmentGroup
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_device_provisioning_service_pb_enrollmentGroup_proto_init() }
func file_device_provisioning_service_pb_enrollmentGroup_proto_init() {
	if File_device_provisioning_service_pb_enrollmentGroup_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*X509Configuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AttestationMechanism); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*EnrollmentGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreateEnrollmentGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetEnrollmentGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateEnrollmentGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateEnrollmentGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteEnrollmentGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteEnrollmentGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_device_provisioning_service_pb_enrollmentGroup_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_device_provisioning_service_pb_enrollmentGroup_proto_goTypes,
		DependencyIndexes: file_device_provisioning_service_pb_enrollmentGroup_proto_depIdxs,
		MessageInfos:      file_device_provisioning_service_pb_enrollmentGroup_proto_msgTypes,
	}.Build()
	File_device_provisioning_service_pb_enrollmentGroup_proto = out.File
	file_device_provisioning_service_pb_enrollmentGroup_proto_rawDesc = nil
	file_device_provisioning_service_pb_enrollmentGroup_proto_goTypes = nil
	file_device_provisioning_service_pb_enrollmentGroup_proto_depIdxs = nil
}
