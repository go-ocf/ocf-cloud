// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.3
// source: resource-aggregate/pb/commands.proto

package commands

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Connection_Status int32

const (
	Connection_OFFLINE Connection_Status = 0
	Connection_ONLINE  Connection_Status = 1
)

// Enum value maps for Connection_Status.
var (
	Connection_Status_name = map[int32]string{
		0: "OFFLINE",
		1: "ONLINE",
	}
	Connection_Status_value = map[string]int32{
		"OFFLINE": 0,
		"ONLINE":  1,
	}
)

func (x Connection_Status) Enum() *Connection_Status {
	p := new(Connection_Status)
	*p = x
	return p
}

func (x Connection_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Connection_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_aggregate_pb_commands_proto_enumTypes[0].Descriptor()
}

func (Connection_Status) Type() protoreflect.EnumType {
	return &file_resource_aggregate_pb_commands_proto_enumTypes[0]
}

func (x Connection_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Connection_Status.Descriptor instead.
func (Connection_Status) EnumDescriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{25, 0}
}

type Connection_Protocol int32

const (
	Connection_UNKNOWN   Connection_Protocol = 0
	Connection_COAP      Connection_Protocol = 1
	Connection_COAPS     Connection_Protocol = 2
	Connection_COAP_TCP  Connection_Protocol = 3
	Connection_COAPS_TCP Connection_Protocol = 4
	Connection_C2C       Connection_Protocol = 5
)

// Enum value maps for Connection_Protocol.
var (
	Connection_Protocol_name = map[int32]string{
		0: "UNKNOWN",
		1: "COAP",
		2: "COAPS",
		3: "COAP_TCP",
		4: "COAPS_TCP",
		5: "C2C",
	}
	Connection_Protocol_value = map[string]int32{
		"UNKNOWN":   0,
		"COAP":      1,
		"COAPS":     2,
		"COAP_TCP":  3,
		"COAPS_TCP": 4,
		"C2C":       5,
	}
)

func (x Connection_Protocol) Enum() *Connection_Protocol {
	p := new(Connection_Protocol)
	*p = x
	return p
}

func (x Connection_Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Connection_Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_aggregate_pb_commands_proto_enumTypes[1].Descriptor()
}

func (Connection_Protocol) Type() protoreflect.EnumType {
	return &file_resource_aggregate_pb_commands_proto_enumTypes[1]
}

func (x Connection_Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Connection_Protocol.Descriptor instead.
func (Connection_Protocol) EnumDescriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{25, 1}
}

type TwinSynchronization_State int32

const (
	TwinSynchronization_OUT_OF_SYNC TwinSynchronization_State = 0 // As soon as it connects after it was offline or when it goes errorless offline or when twin enabled has been changed to true.
	TwinSynchronization_DISABLED    TwinSynchronization_State = 1 // As soon as twin enabled is set to false.
	TwinSynchronization_SYNCING     TwinSynchronization_State = 2 // As soon as device connects, successfully signs in and batch observe is called on device from the cloud.
	TwinSynchronization_IN_SYNC     TwinSynchronization_State = 3 // As soon as current device resources values are received and applied to twin database. Twin was successfully reconciled after device reconnect and is kept up to date using an active subscription to device resource changes.
)

// Enum value maps for TwinSynchronization_State.
var (
	TwinSynchronization_State_name = map[int32]string{
		0: "OUT_OF_SYNC",
		1: "DISABLED",
		2: "SYNCING",
		3: "IN_SYNC",
	}
	TwinSynchronization_State_value = map[string]int32{
		"OUT_OF_SYNC": 0,
		"DISABLED":    1,
		"SYNCING":     2,
		"IN_SYNC":     3,
	}
)

func (x TwinSynchronization_State) Enum() *TwinSynchronization_State {
	p := new(TwinSynchronization_State)
	*p = x
	return p
}

func (x TwinSynchronization_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TwinSynchronization_State) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_aggregate_pb_commands_proto_enumTypes[2].Descriptor()
}

func (TwinSynchronization_State) Type() protoreflect.EnumType {
	return &file_resource_aggregate_pb_commands_proto_enumTypes[2]
}

func (x TwinSynchronization_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TwinSynchronization_State.Descriptor instead.
func (TwinSynchronization_State) EnumDescriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{26, 0}
}

type CommandMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Sequence     uint64 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *CommandMetadata) Reset() {
	*x = CommandMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandMetadata) ProtoMessage() {}

func (x *CommandMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandMetadata.ProtoReflect.Descriptor instead.
func (*CommandMetadata) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{0}
}

func (x *CommandMetadata) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *CommandMetadata) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

// https://github.com/openconnectivityfoundation/cloud-services/blob/master/swagger2.0/oic.wk.rd.swagger.json#L35
type PublishResourceLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources       []*Resource      `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	DeviceId        string           `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	CommandMetadata *CommandMetadata `protobuf:"bytes,3,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (x *PublishResourceLinksRequest) Reset() {
	*x = PublishResourceLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishResourceLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResourceLinksRequest) ProtoMessage() {}

func (x *PublishResourceLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResourceLinksRequest.ProtoReflect.Descriptor instead.
func (*PublishResourceLinksRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{1}
}

func (x *PublishResourceLinksRequest) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *PublishResourceLinksRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *PublishResourceLinksRequest) GetCommandMetadata() *CommandMetadata {
	if x != nil {
		return x.CommandMetadata
	}
	return nil
}

type PublishResourceLinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublishedResources []*Resource   `protobuf:"bytes,1,rep,name=published_resources,json=publishedResources,proto3" json:"published_resources,omitempty"`
	DeviceId           string        `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	AuditContext       *AuditContext `protobuf:"bytes,3,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (x *PublishResourceLinksResponse) Reset() {
	*x = PublishResourceLinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishResourceLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResourceLinksResponse) ProtoMessage() {}

func (x *PublishResourceLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResourceLinksResponse.ProtoReflect.Descriptor instead.
func (*PublishResourceLinksResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{2}
}

func (x *PublishResourceLinksResponse) GetPublishedResources() []*Resource {
	if x != nil {
		return x.PublishedResources
	}
	return nil
}

func (x *PublishResourceLinksResponse) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *PublishResourceLinksResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

// https://github.com/openconnectivityfoundation/cloud-services/blob/master/swagger2.0/oic.wk.rd.swagger.json #Specification CR needed
type UnpublishResourceLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hrefs           []string         `protobuf:"bytes,1,rep,name=hrefs,proto3" json:"hrefs,omitempty"`
	DeviceId        string           `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	CommandMetadata *CommandMetadata `protobuf:"bytes,3,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
	InstanceIds     []int64          `protobuf:"varint,4,rep,packed,name=instance_ids,json=instanceIds,proto3" json:"instance_ids,omitempty"` // used by device when sending unpublish request to RD
}

func (x *UnpublishResourceLinksRequest) Reset() {
	*x = UnpublishResourceLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishResourceLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishResourceLinksRequest) ProtoMessage() {}

func (x *UnpublishResourceLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishResourceLinksRequest.ProtoReflect.Descriptor instead.
func (*UnpublishResourceLinksRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{3}
}

func (x *UnpublishResourceLinksRequest) GetHrefs() []string {
	if x != nil {
		return x.Hrefs
	}
	return nil
}

func (x *UnpublishResourceLinksRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *UnpublishResourceLinksRequest) GetCommandMetadata() *CommandMetadata {
	if x != nil {
		return x.CommandMetadata
	}
	return nil
}

func (x *UnpublishResourceLinksRequest) GetInstanceIds() []int64 {
	if x != nil {
		return x.InstanceIds
	}
	return nil
}

type UnpublishResourceLinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnpublishedHrefs []string      `protobuf:"bytes,1,rep,name=unpublished_hrefs,json=unpublishedHrefs,proto3" json:"unpublished_hrefs,omitempty"`
	DeviceId         string        `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	AuditContext     *AuditContext `protobuf:"bytes,3,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (x *UnpublishResourceLinksResponse) Reset() {
	*x = UnpublishResourceLinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishResourceLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishResourceLinksResponse) ProtoMessage() {}

func (x *UnpublishResourceLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishResourceLinksResponse.ProtoReflect.Descriptor instead.
func (*UnpublishResourceLinksResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{4}
}

func (x *UnpublishResourceLinksResponse) GetUnpublishedHrefs() []string {
	if x != nil {
		return x.UnpublishedHrefs
	}
	return nil
}

func (x *UnpublishResourceLinksResponse) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *UnpublishResourceLinksResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

type NotifyResourceChangedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId      *ResourceId      `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Content         *Content         `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	CommandMetadata *CommandMetadata `protobuf:"bytes,3,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
	Status          Status           `protobuf:"varint,4,opt,name=status,proto3,enum=resourceaggregate.pb.Status" json:"status,omitempty"`
	Etag            []byte           `protobuf:"bytes,5,opt,name=etag,proto3" json:"etag,omitempty"`
}

func (x *NotifyResourceChangedRequest) Reset() {
	*x = NotifyResourceChangedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyResourceChangedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyResourceChangedRequest) ProtoMessage() {}

func (x *NotifyResourceChangedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyResourceChangedRequest.ProtoReflect.Descriptor instead.
func (*NotifyResourceChangedRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{5}
}

func (x *NotifyResourceChangedRequest) GetResourceId() *ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *NotifyResourceChangedRequest) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *NotifyResourceChangedRequest) GetCommandMetadata() *CommandMetadata {
	if x != nil {
		return x.CommandMetadata
	}
	return nil
}

func (x *NotifyResourceChangedRequest) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

func (x *NotifyResourceChangedRequest) GetEtag() []byte {
	if x != nil {
		return x.Etag
	}
	return nil
}

type NotifyResourceChangedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuditContext *AuditContext `protobuf:"bytes,3,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (x *NotifyResourceChangedResponse) Reset() {
	*x = NotifyResourceChangedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyResourceChangedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyResourceChangedResponse) ProtoMessage() {}

func (x *NotifyResourceChangedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyResourceChangedResponse.ProtoReflect.Descriptor instead.
func (*NotifyResourceChangedResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{6}
}

func (x *NotifyResourceChangedResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

// batch of NotifyResourceChangedRequest
type BatchNotifyResourceChangedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Batch []*NotifyResourceChangedRequest `protobuf:"bytes,1,rep,name=batch,proto3" json:"batch,omitempty"`
}

func (x *BatchNotifyResourceChangedRequest) Reset() {
	*x = BatchNotifyResourceChangedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchNotifyResourceChangedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchNotifyResourceChangedRequest) ProtoMessage() {}

func (x *BatchNotifyResourceChangedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchNotifyResourceChangedRequest.ProtoReflect.Descriptor instead.
func (*BatchNotifyResourceChangedRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{7}
}

func (x *BatchNotifyResourceChangedRequest) GetBatch() []*NotifyResourceChangedRequest {
	if x != nil {
		return x.Batch
	}
	return nil
}

type BatchNotifyResourceChangedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuditContext *AuditContext `protobuf:"bytes,1,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (x *BatchNotifyResourceChangedResponse) Reset() {
	*x = BatchNotifyResourceChangedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchNotifyResourceChangedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchNotifyResourceChangedResponse) ProtoMessage() {}

func (x *BatchNotifyResourceChangedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchNotifyResourceChangedResponse.ProtoReflect.Descriptor instead.
func (*BatchNotifyResourceChangedResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{8}
}

func (x *BatchNotifyResourceChangedResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

type UpdateResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId        *ResourceId      `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	CorrelationId     string           `protobuf:"bytes,2,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Content           *Content         `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	ResourceInterface string           `protobuf:"bytes,4,opt,name=resource_interface,json=resourceInterface,proto3" json:"resource_interface,omitempty"`
	TimeToLive        int64            `protobuf:"varint,5,opt,name=time_to_live,json=timeToLive,proto3" json:"time_to_live,omitempty"` // command validity in nanoseconds. 0 means forever and minimal value is 100000000 (100ms).
	CommandMetadata   *CommandMetadata `protobuf:"bytes,6,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (x *UpdateResourceRequest) Reset() {
	*x = UpdateResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResourceRequest) ProtoMessage() {}

func (x *UpdateResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResourceRequest.ProtoReflect.Descriptor instead.
func (*UpdateResourceRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateResourceRequest) GetResourceId() *ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *UpdateResourceRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *UpdateResourceRequest) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *UpdateResourceRequest) GetResourceInterface() string {
	if x != nil {
		return x.ResourceInterface
	}
	return ""
}

func (x *UpdateResourceRequest) GetTimeToLive() int64 {
	if x != nil {
		return x.TimeToLive
	}
	return 0
}

func (x *UpdateResourceRequest) GetCommandMetadata() *CommandMetadata {
	if x != nil {
		return x.CommandMetadata
	}
	return nil
}

type UpdateResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidUntil   int64         `protobuf:"varint,1,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"` // unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when command is considered as expired. 0 means forever.
	AuditContext *AuditContext `protobuf:"bytes,2,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (x *UpdateResourceResponse) Reset() {
	*x = UpdateResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResourceResponse) ProtoMessage() {}

func (x *UpdateResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResourceResponse.ProtoReflect.Descriptor instead.
func (*UpdateResourceResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateResourceResponse) GetValidUntil() int64 {
	if x != nil {
		return x.ValidUntil
	}
	return 0
}

func (x *UpdateResourceResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

type ConfirmResourceUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId      *ResourceId      `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	CorrelationId   string           `protobuf:"bytes,2,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Status          Status           `protobuf:"varint,3,opt,name=status,proto3,enum=resourceaggregate.pb.Status" json:"status,omitempty"`
	Content         *Content         `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CommandMetadata *CommandMetadata `protobuf:"bytes,5,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (x *ConfirmResourceUpdateRequest) Reset() {
	*x = ConfirmResourceUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmResourceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmResourceUpdateRequest) ProtoMessage() {}

func (x *ConfirmResourceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmResourceUpdateRequest.ProtoReflect.Descriptor instead.
func (*ConfirmResourceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{11}
}

func (x *ConfirmResourceUpdateRequest) GetResourceId() *ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *ConfirmResourceUpdateRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *ConfirmResourceUpdateRequest) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

func (x *ConfirmResourceUpdateRequest) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ConfirmResourceUpdateRequest) GetCommandMetadata() *CommandMetadata {
	if x != nil {
		return x.CommandMetadata
	}
	return nil
}

type ConfirmResourceUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuditContext *AuditContext `protobuf:"bytes,1,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (x *ConfirmResourceUpdateResponse) Reset() {
	*x = ConfirmResourceUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmResourceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmResourceUpdateResponse) ProtoMessage() {}

func (x *ConfirmResourceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmResourceUpdateResponse.ProtoReflect.Descriptor instead.
func (*ConfirmResourceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{12}
}

func (x *ConfirmResourceUpdateResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

type RetrieveResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId        *ResourceId      `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	CorrelationId     string           `protobuf:"bytes,2,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	ResourceInterface string           `protobuf:"bytes,3,opt,name=resource_interface,json=resourceInterface,proto3" json:"resource_interface,omitempty"`
	TimeToLive        int64            `protobuf:"varint,4,opt,name=time_to_live,json=timeToLive,proto3" json:"time_to_live,omitempty"` // command validity in nanoseconds. 0 means forever and minimal value is 100000000 (100ms).
	CommandMetadata   *CommandMetadata `protobuf:"bytes,5,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
	Etag              []byte           `protobuf:"bytes,6,opt,name=etag,proto3" json:"etag,omitempty"`
}

func (x *RetrieveResourceRequest) Reset() {
	*x = RetrieveResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveResourceRequest) ProtoMessage() {}

func (x *RetrieveResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveResourceRequest.ProtoReflect.Descriptor instead.
func (*RetrieveResourceRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{13}
}

func (x *RetrieveResourceRequest) GetResourceId() *ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *RetrieveResourceRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *RetrieveResourceRequest) GetResourceInterface() string {
	if x != nil {
		return x.ResourceInterface
	}
	return ""
}

func (x *RetrieveResourceRequest) GetTimeToLive() int64 {
	if x != nil {
		return x.TimeToLive
	}
	return 0
}

func (x *RetrieveResourceRequest) GetCommandMetadata() *CommandMetadata {
	if x != nil {
		return x.CommandMetadata
	}
	return nil
}

func (x *RetrieveResourceRequest) GetEtag() []byte {
	if x != nil {
		return x.Etag
	}
	return nil
}

type RetrieveResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidUntil   int64         `protobuf:"varint,1,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"` // unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when command is considered as expired. 0 means forever.
	AuditContext *AuditContext `protobuf:"bytes,2,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (x *RetrieveResourceResponse) Reset() {
	*x = RetrieveResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveResourceResponse) ProtoMessage() {}

func (x *RetrieveResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveResourceResponse.ProtoReflect.Descriptor instead.
func (*RetrieveResourceResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{14}
}

func (x *RetrieveResourceResponse) GetValidUntil() int64 {
	if x != nil {
		return x.ValidUntil
	}
	return 0
}

func (x *RetrieveResourceResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

type ConfirmResourceRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId      *ResourceId      `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	CorrelationId   string           `protobuf:"bytes,2,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Status          Status           `protobuf:"varint,3,opt,name=status,proto3,enum=resourceaggregate.pb.Status" json:"status,omitempty"`
	Content         *Content         `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CommandMetadata *CommandMetadata `protobuf:"bytes,5,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
	Etag            []byte           `protobuf:"bytes,6,opt,name=etag,proto3" json:"etag,omitempty"`
}

func (x *ConfirmResourceRetrieveRequest) Reset() {
	*x = ConfirmResourceRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmResourceRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmResourceRetrieveRequest) ProtoMessage() {}

func (x *ConfirmResourceRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmResourceRetrieveRequest.ProtoReflect.Descriptor instead.
func (*ConfirmResourceRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{15}
}

func (x *ConfirmResourceRetrieveRequest) GetResourceId() *ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *ConfirmResourceRetrieveRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *ConfirmResourceRetrieveRequest) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

func (x *ConfirmResourceRetrieveRequest) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ConfirmResourceRetrieveRequest) GetCommandMetadata() *CommandMetadata {
	if x != nil {
		return x.CommandMetadata
	}
	return nil
}

func (x *ConfirmResourceRetrieveRequest) GetEtag() []byte {
	if x != nil {
		return x.Etag
	}
	return nil
}

type ConfirmResourceRetrieveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuditContext *AuditContext `protobuf:"bytes,1,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (x *ConfirmResourceRetrieveResponse) Reset() {
	*x = ConfirmResourceRetrieveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmResourceRetrieveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmResourceRetrieveResponse) ProtoMessage() {}

func (x *ConfirmResourceRetrieveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmResourceRetrieveResponse.ProtoReflect.Descriptor instead.
func (*ConfirmResourceRetrieveResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{16}
}

func (x *ConfirmResourceRetrieveResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

type DeleteResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId      *ResourceId      `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	CorrelationId   string           `protobuf:"bytes,2,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	TimeToLive      int64            `protobuf:"varint,3,opt,name=time_to_live,json=timeToLive,proto3" json:"time_to_live,omitempty"` // command validity in nanoseconds. 0 means forever and minimal value is 100000000 (100ms).
	CommandMetadata *CommandMetadata `protobuf:"bytes,4,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (x *DeleteResourceRequest) Reset() {
	*x = DeleteResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResourceRequest) ProtoMessage() {}

func (x *DeleteResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteResourceRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteResourceRequest) GetResourceId() *ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *DeleteResourceRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *DeleteResourceRequest) GetTimeToLive() int64 {
	if x != nil {
		return x.TimeToLive
	}
	return 0
}

func (x *DeleteResourceRequest) GetCommandMetadata() *CommandMetadata {
	if x != nil {
		return x.CommandMetadata
	}
	return nil
}

type DeleteResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidUntil   int64         `protobuf:"varint,1,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"` // unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when command is considered as expired. 0 means forever.
	AuditContext *AuditContext `protobuf:"bytes,2,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (x *DeleteResourceResponse) Reset() {
	*x = DeleteResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResourceResponse) ProtoMessage() {}

func (x *DeleteResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResourceResponse.ProtoReflect.Descriptor instead.
func (*DeleteResourceResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteResourceResponse) GetValidUntil() int64 {
	if x != nil {
		return x.ValidUntil
	}
	return 0
}

func (x *DeleteResourceResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

type ConfirmResourceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId      *ResourceId      `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	CorrelationId   string           `protobuf:"bytes,2,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Status          Status           `protobuf:"varint,3,opt,name=status,proto3,enum=resourceaggregate.pb.Status" json:"status,omitempty"`
	Content         *Content         `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CommandMetadata *CommandMetadata `protobuf:"bytes,5,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (x *ConfirmResourceDeleteRequest) Reset() {
	*x = ConfirmResourceDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmResourceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmResourceDeleteRequest) ProtoMessage() {}

func (x *ConfirmResourceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmResourceDeleteRequest.ProtoReflect.Descriptor instead.
func (*ConfirmResourceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{19}
}

func (x *ConfirmResourceDeleteRequest) GetResourceId() *ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *ConfirmResourceDeleteRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *ConfirmResourceDeleteRequest) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

func (x *ConfirmResourceDeleteRequest) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ConfirmResourceDeleteRequest) GetCommandMetadata() *CommandMetadata {
	if x != nil {
		return x.CommandMetadata
	}
	return nil
}

type ConfirmResourceDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuditContext *AuditContext `protobuf:"bytes,1,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (x *ConfirmResourceDeleteResponse) Reset() {
	*x = ConfirmResourceDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmResourceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmResourceDeleteResponse) ProtoMessage() {}

func (x *ConfirmResourceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmResourceDeleteResponse.ProtoReflect.Descriptor instead.
func (*ConfirmResourceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{20}
}

func (x *ConfirmResourceDeleteResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

type CreateResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId      *ResourceId      `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	CorrelationId   string           `protobuf:"bytes,2,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Content         *Content         `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	TimeToLive      int64            `protobuf:"varint,4,opt,name=time_to_live,json=timeToLive,proto3" json:"time_to_live,omitempty"` // command validity in nanoseconds. 0 means forever and minimal value is 100000000 (100ms).
	CommandMetadata *CommandMetadata `protobuf:"bytes,5,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (x *CreateResourceRequest) Reset() {
	*x = CreateResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResourceRequest) ProtoMessage() {}

func (x *CreateResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResourceRequest.ProtoReflect.Descriptor instead.
func (*CreateResourceRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{21}
}

func (x *CreateResourceRequest) GetResourceId() *ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *CreateResourceRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CreateResourceRequest) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *CreateResourceRequest) GetTimeToLive() int64 {
	if x != nil {
		return x.TimeToLive
	}
	return 0
}

func (x *CreateResourceRequest) GetCommandMetadata() *CommandMetadata {
	if x != nil {
		return x.CommandMetadata
	}
	return nil
}

type CreateResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidUntil   int64         `protobuf:"varint,1,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"` // unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when command is considered as expired. 0 means forever.
	AuditContext *AuditContext `protobuf:"bytes,2,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (x *CreateResourceResponse) Reset() {
	*x = CreateResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResourceResponse) ProtoMessage() {}

func (x *CreateResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResourceResponse.ProtoReflect.Descriptor instead.
func (*CreateResourceResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{22}
}

func (x *CreateResourceResponse) GetValidUntil() int64 {
	if x != nil {
		return x.ValidUntil
	}
	return 0
}

func (x *CreateResourceResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

type ConfirmResourceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId      *ResourceId      `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	CorrelationId   string           `protobuf:"bytes,2,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Status          Status           `protobuf:"varint,3,opt,name=status,proto3,enum=resourceaggregate.pb.Status" json:"status,omitempty"`
	Content         *Content         `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CommandMetadata *CommandMetadata `protobuf:"bytes,5,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (x *ConfirmResourceCreateRequest) Reset() {
	*x = ConfirmResourceCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmResourceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmResourceCreateRequest) ProtoMessage() {}

func (x *ConfirmResourceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmResourceCreateRequest.ProtoReflect.Descriptor instead.
func (*ConfirmResourceCreateRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{23}
}

func (x *ConfirmResourceCreateRequest) GetResourceId() *ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *ConfirmResourceCreateRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *ConfirmResourceCreateRequest) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

func (x *ConfirmResourceCreateRequest) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ConfirmResourceCreateRequest) GetCommandMetadata() *CommandMetadata {
	if x != nil {
		return x.CommandMetadata
	}
	return nil
}

type ConfirmResourceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuditContext *AuditContext `protobuf:"bytes,1,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (x *ConfirmResourceCreateResponse) Reset() {
	*x = ConfirmResourceCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmResourceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmResourceCreateResponse) ProtoMessage() {}

func (x *ConfirmResourceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmResourceCreateResponse.ProtoReflect.Descriptor instead.
func (*ConfirmResourceCreateResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{24}
}

func (x *ConfirmResourceCreateResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           Connection_Status   `protobuf:"varint,1,opt,name=status,proto3,enum=resourceaggregate.pb.Connection_Status" json:"status,omitempty"`
	OnlineValidUntil int64               `protobuf:"varint,2,opt,name=online_valid_until,json=onlineValidUntil,proto3" json:"online_valid_until,omitempty"`
	Id               string              `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`                                                            // when status is ONLINE, this field contains the connection id. To update state offline, this field must be same as the one in the previous message.
	ConnectedAt      int64               `protobuf:"varint,4,opt,name=connected_at,json=connectedAt,proto3" json:"connected_at,omitempty"`                      // timestamp when the device was connected
	Protocol         Connection_Protocol `protobuf:"varint,5,opt,name=protocol,proto3,enum=resourceaggregate.pb.Connection_Protocol" json:"protocol,omitempty"` // application protocol. It need to be set when the status is ONLINE.
	ServiceId        string              `protobuf:"bytes,6,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`                             // The service.ID, which identify the device being served, must be set when the status is ONLINE. However, during an OFFLINE event, they will be sed to empty values.
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{25}
}

func (x *Connection) GetStatus() Connection_Status {
	if x != nil {
		return x.Status
	}
	return Connection_OFFLINE
}

func (x *Connection) GetOnlineValidUntil() int64 {
	if x != nil {
		return x.OnlineValidUntil
	}
	return 0
}

func (x *Connection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Connection) GetConnectedAt() int64 {
	if x != nil {
		return x.ConnectedAt
	}
	return 0
}

func (x *Connection) GetProtocol() Connection_Protocol {
	if x != nil {
		return x.Protocol
	}
	return Connection_UNKNOWN
}

func (x *Connection) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

type TwinSynchronization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State                  TwinSynchronization_State `protobuf:"varint,1,opt,name=state,proto3,enum=resourceaggregate.pb.TwinSynchronization_State" json:"state,omitempty"`
	SyncingAt              int64                     `protobuf:"varint,2,opt,name=syncing_at,json=syncingAt,proto3" json:"syncing_at,omitempty"`                                          // unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when synchronization started.
	InSyncAt               int64                     `protobuf:"varint,3,opt,name=in_sync_at,json=inSyncAt,proto3" json:"in_sync_at,omitempty"`                                           // unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when synchronization finished.
	CommandMetadata        *CommandMetadata          `protobuf:"bytes,4,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`                         // when status is SYNCING, this field contains the connection id. To update state to IN_SYNC, this field must be same as the one in the previous message.
	ForceSynchronizationAt int64                     `protobuf:"varint,5,opt,name=force_synchronization_at,json=forceSynchronizationAt,proto3" json:"force_synchronization_at,omitempty"` // unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when the force synchronization has been started. 0 means force synchronization has never started.
}

func (x *TwinSynchronization) Reset() {
	*x = TwinSynchronization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwinSynchronization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwinSynchronization) ProtoMessage() {}

func (x *TwinSynchronization) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwinSynchronization.ProtoReflect.Descriptor instead.
func (*TwinSynchronization) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{26}
}

func (x *TwinSynchronization) GetState() TwinSynchronization_State {
	if x != nil {
		return x.State
	}
	return TwinSynchronization_OUT_OF_SYNC
}

func (x *TwinSynchronization) GetSyncingAt() int64 {
	if x != nil {
		return x.SyncingAt
	}
	return 0
}

func (x *TwinSynchronization) GetInSyncAt() int64 {
	if x != nil {
		return x.InSyncAt
	}
	return 0
}

func (x *TwinSynchronization) GetCommandMetadata() *CommandMetadata {
	if x != nil {
		return x.CommandMetadata
	}
	return nil
}

func (x *TwinSynchronization) GetForceSynchronizationAt() int64 {
	if x != nil {
		return x.ForceSynchronizationAt
	}
	return 0
}

type UpdateDeviceMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId      string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	CorrelationId string `protobuf:"bytes,2,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	// Types that are assignable to Update:
	//
	//	*UpdateDeviceMetadataRequest_Connection
	//	*UpdateDeviceMetadataRequest_TwinSynchronization
	//	*UpdateDeviceMetadataRequest_TwinEnabled
	//	*UpdateDeviceMetadataRequest_TwinForceSynchronization
	Update          isUpdateDeviceMetadataRequest_Update `protobuf_oneof:"update"`
	TimeToLive      int64                                `protobuf:"varint,5,opt,name=time_to_live,json=timeToLive,proto3" json:"time_to_live,omitempty"` // command validity in nanoseconds. 0 means forever and minimal value is 100000000 (100ms).
	CommandMetadata *CommandMetadata                     `protobuf:"bytes,6,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (x *UpdateDeviceMetadataRequest) Reset() {
	*x = UpdateDeviceMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceMetadataRequest) ProtoMessage() {}

func (x *UpdateDeviceMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceMetadataRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateDeviceMetadataRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *UpdateDeviceMetadataRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (m *UpdateDeviceMetadataRequest) GetUpdate() isUpdateDeviceMetadataRequest_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *UpdateDeviceMetadataRequest) GetConnection() *Connection {
	if x, ok := x.GetUpdate().(*UpdateDeviceMetadataRequest_Connection); ok {
		return x.Connection
	}
	return nil
}

func (x *UpdateDeviceMetadataRequest) GetTwinSynchronization() *TwinSynchronization {
	if x, ok := x.GetUpdate().(*UpdateDeviceMetadataRequest_TwinSynchronization); ok {
		return x.TwinSynchronization
	}
	return nil
}

func (x *UpdateDeviceMetadataRequest) GetTwinEnabled() bool {
	if x, ok := x.GetUpdate().(*UpdateDeviceMetadataRequest_TwinEnabled); ok {
		return x.TwinEnabled
	}
	return false
}

func (x *UpdateDeviceMetadataRequest) GetTwinForceSynchronization() bool {
	if x, ok := x.GetUpdate().(*UpdateDeviceMetadataRequest_TwinForceSynchronization); ok {
		return x.TwinForceSynchronization
	}
	return false
}

func (x *UpdateDeviceMetadataRequest) GetTimeToLive() int64 {
	if x != nil {
		return x.TimeToLive
	}
	return 0
}

func (x *UpdateDeviceMetadataRequest) GetCommandMetadata() *CommandMetadata {
	if x != nil {
		return x.CommandMetadata
	}
	return nil
}

type isUpdateDeviceMetadataRequest_Update interface {
	isUpdateDeviceMetadataRequest_Update()
}

type UpdateDeviceMetadataRequest_Connection struct {
	Connection *Connection `protobuf:"bytes,3,opt,name=connection,proto3,oneof"`
}

type UpdateDeviceMetadataRequest_TwinSynchronization struct {
	TwinSynchronization *TwinSynchronization `protobuf:"bytes,7,opt,name=twin_synchronization,json=twinSynchronization,proto3,oneof"`
}

type UpdateDeviceMetadataRequest_TwinEnabled struct {
	TwinEnabled bool `protobuf:"varint,8,opt,name=twin_enabled,json=twinEnabled,proto3,oneof"` // by default true
}

type UpdateDeviceMetadataRequest_TwinForceSynchronization struct {
	TwinForceSynchronization bool `protobuf:"varint,9,opt,name=twin_force_synchronization,json=twinForceSynchronization,proto3,oneof"` // Force synchronization IoT hub with the device resources and set twin_enabled to true. Use to address potential synchronization issues and prevent operational discrepancies.
}

func (*UpdateDeviceMetadataRequest_Connection) isUpdateDeviceMetadataRequest_Update() {}

func (*UpdateDeviceMetadataRequest_TwinSynchronization) isUpdateDeviceMetadataRequest_Update() {}

func (*UpdateDeviceMetadataRequest_TwinEnabled) isUpdateDeviceMetadataRequest_Update() {}

func (*UpdateDeviceMetadataRequest_TwinForceSynchronization) isUpdateDeviceMetadataRequest_Update() {}

type UpdateDeviceMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidUntil   int64         `protobuf:"varint,1,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"` // unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when command is considered as expired. 0 means forever.
	AuditContext *AuditContext `protobuf:"bytes,2,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
	TwinEnabled  bool          `protobuf:"varint,3,opt,name=twin_enabled,json=twinEnabled,proto3" json:"twin_enabled,omitempty"`
}

func (x *UpdateDeviceMetadataResponse) Reset() {
	*x = UpdateDeviceMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceMetadataResponse) ProtoMessage() {}

func (x *UpdateDeviceMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceMetadataResponse.ProtoReflect.Descriptor instead.
func (*UpdateDeviceMetadataResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateDeviceMetadataResponse) GetValidUntil() int64 {
	if x != nil {
		return x.ValidUntil
	}
	return 0
}

func (x *UpdateDeviceMetadataResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

func (x *UpdateDeviceMetadataResponse) GetTwinEnabled() bool {
	if x != nil {
		return x.TwinEnabled
	}
	return false
}

type ConfirmDeviceMetadataUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId      string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	CorrelationId string `protobuf:"bytes,2,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Status        Status `protobuf:"varint,3,opt,name=status,proto3,enum=resourceaggregate.pb.Status" json:"status,omitempty"`
	// Types that are assignable to Confirm:
	//
	//	*ConfirmDeviceMetadataUpdateRequest_TwinEnabled
	//	*ConfirmDeviceMetadataUpdateRequest_TwinForceSynchronization
	Confirm         isConfirmDeviceMetadataUpdateRequest_Confirm `protobuf_oneof:"confirm"`
	CommandMetadata *CommandMetadata                             `protobuf:"bytes,5,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (x *ConfirmDeviceMetadataUpdateRequest) Reset() {
	*x = ConfirmDeviceMetadataUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmDeviceMetadataUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmDeviceMetadataUpdateRequest) ProtoMessage() {}

func (x *ConfirmDeviceMetadataUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmDeviceMetadataUpdateRequest.ProtoReflect.Descriptor instead.
func (*ConfirmDeviceMetadataUpdateRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{29}
}

func (x *ConfirmDeviceMetadataUpdateRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ConfirmDeviceMetadataUpdateRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *ConfirmDeviceMetadataUpdateRequest) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

func (m *ConfirmDeviceMetadataUpdateRequest) GetConfirm() isConfirmDeviceMetadataUpdateRequest_Confirm {
	if m != nil {
		return m.Confirm
	}
	return nil
}

func (x *ConfirmDeviceMetadataUpdateRequest) GetTwinEnabled() bool {
	if x, ok := x.GetConfirm().(*ConfirmDeviceMetadataUpdateRequest_TwinEnabled); ok {
		return x.TwinEnabled
	}
	return false
}

func (x *ConfirmDeviceMetadataUpdateRequest) GetTwinForceSynchronization() bool {
	if x, ok := x.GetConfirm().(*ConfirmDeviceMetadataUpdateRequest_TwinForceSynchronization); ok {
		return x.TwinForceSynchronization
	}
	return false
}

func (x *ConfirmDeviceMetadataUpdateRequest) GetCommandMetadata() *CommandMetadata {
	if x != nil {
		return x.CommandMetadata
	}
	return nil
}

type isConfirmDeviceMetadataUpdateRequest_Confirm interface {
	isConfirmDeviceMetadataUpdateRequest_Confirm()
}

type ConfirmDeviceMetadataUpdateRequest_TwinEnabled struct {
	TwinEnabled bool `protobuf:"varint,6,opt,name=twin_enabled,json=twinEnabled,proto3,oneof"` // will set twin_enabled to true and TwinSynchronization.state to OUT_OF_SYNC.
}

type ConfirmDeviceMetadataUpdateRequest_TwinForceSynchronization struct {
	TwinForceSynchronization bool `protobuf:"varint,7,opt,name=twin_force_synchronization,json=twinForceSynchronization,proto3,oneof"` // will set twin_enabled to true, set time TwinSynchronization.force_synchronization_at and TwinSynchronization.state to OUT_OF_SYNC.
}

func (*ConfirmDeviceMetadataUpdateRequest_TwinEnabled) isConfirmDeviceMetadataUpdateRequest_Confirm() {
}

func (*ConfirmDeviceMetadataUpdateRequest_TwinForceSynchronization) isConfirmDeviceMetadataUpdateRequest_Confirm() {
}

type ConfirmDeviceMetadataUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuditContext *AuditContext `protobuf:"bytes,1,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (x *ConfirmDeviceMetadataUpdateResponse) Reset() {
	*x = ConfirmDeviceMetadataUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmDeviceMetadataUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmDeviceMetadataUpdateResponse) ProtoMessage() {}

func (x *ConfirmDeviceMetadataUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmDeviceMetadataUpdateResponse.ProtoReflect.Descriptor instead.
func (*ConfirmDeviceMetadataUpdateResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{30}
}

func (x *ConfirmDeviceMetadataUpdateResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

type CancelPendingCommandsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId          *ResourceId      `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	CorrelationIdFilter []string         `protobuf:"bytes,2,rep,name=correlation_id_filter,json=correlationIdFilter,proto3" json:"correlation_id_filter,omitempty"` // empty array means all.
	CommandMetadata     *CommandMetadata `protobuf:"bytes,100,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (x *CancelPendingCommandsRequest) Reset() {
	*x = CancelPendingCommandsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelPendingCommandsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPendingCommandsRequest) ProtoMessage() {}

func (x *CancelPendingCommandsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPendingCommandsRequest.ProtoReflect.Descriptor instead.
func (*CancelPendingCommandsRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{31}
}

func (x *CancelPendingCommandsRequest) GetResourceId() *ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *CancelPendingCommandsRequest) GetCorrelationIdFilter() []string {
	if x != nil {
		return x.CorrelationIdFilter
	}
	return nil
}

func (x *CancelPendingCommandsRequest) GetCommandMetadata() *CommandMetadata {
	if x != nil {
		return x.CommandMetadata
	}
	return nil
}

type CancelPendingCommandsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationIds []string      `protobuf:"bytes,1,rep,name=correlation_ids,json=correlationIds,proto3" json:"correlation_ids,omitempty"` // list of cancelled correlation id
	AuditContext   *AuditContext `protobuf:"bytes,100,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (x *CancelPendingCommandsResponse) Reset() {
	*x = CancelPendingCommandsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelPendingCommandsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPendingCommandsResponse) ProtoMessage() {}

func (x *CancelPendingCommandsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPendingCommandsResponse.ProtoReflect.Descriptor instead.
func (*CancelPendingCommandsResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{32}
}

func (x *CancelPendingCommandsResponse) GetCorrelationIds() []string {
	if x != nil {
		return x.CorrelationIds
	}
	return nil
}

func (x *CancelPendingCommandsResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

type CancelPendingMetadataUpdatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId            string           `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	CorrelationIdFilter []string         `protobuf:"bytes,2,rep,name=correlation_id_filter,json=correlationIdFilter,proto3" json:"correlation_id_filter,omitempty"` // empty array means all.
	CommandMetadata     *CommandMetadata `protobuf:"bytes,100,opt,name=command_metadata,json=commandMetadata,proto3" json:"command_metadata,omitempty"`
}

func (x *CancelPendingMetadataUpdatesRequest) Reset() {
	*x = CancelPendingMetadataUpdatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelPendingMetadataUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPendingMetadataUpdatesRequest) ProtoMessage() {}

func (x *CancelPendingMetadataUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPendingMetadataUpdatesRequest.ProtoReflect.Descriptor instead.
func (*CancelPendingMetadataUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{33}
}

func (x *CancelPendingMetadataUpdatesRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *CancelPendingMetadataUpdatesRequest) GetCorrelationIdFilter() []string {
	if x != nil {
		return x.CorrelationIdFilter
	}
	return nil
}

func (x *CancelPendingMetadataUpdatesRequest) GetCommandMetadata() *CommandMetadata {
	if x != nil {
		return x.CommandMetadata
	}
	return nil
}

type CancelPendingMetadataUpdatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationIds []string      `protobuf:"bytes,1,rep,name=correlation_ids,json=correlationIds,proto3" json:"correlation_ids,omitempty"` // list of cancelled correlation id
	AuditContext   *AuditContext `protobuf:"bytes,100,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (x *CancelPendingMetadataUpdatesResponse) Reset() {
	*x = CancelPendingMetadataUpdatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelPendingMetadataUpdatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPendingMetadataUpdatesResponse) ProtoMessage() {}

func (x *CancelPendingMetadataUpdatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPendingMetadataUpdatesResponse.ProtoReflect.Descriptor instead.
func (*CancelPendingMetadataUpdatesResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{34}
}

func (x *CancelPendingMetadataUpdatesResponse) GetCorrelationIds() []string {
	if x != nil {
		return x.CorrelationIds
	}
	return nil
}

func (x *CancelPendingMetadataUpdatesResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

type DeleteDevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceIds []string `protobuf:"bytes,1,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
}

func (x *DeleteDevicesRequest) Reset() {
	*x = DeleteDevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDevicesRequest) ProtoMessage() {}

func (x *DeleteDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDevicesRequest.ProtoReflect.Descriptor instead.
func (*DeleteDevicesRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteDevicesRequest) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

type DeleteDevicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceIds    []string      `protobuf:"bytes,1,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
	AuditContext *AuditContext `protobuf:"bytes,100,opt,name=audit_context,json=auditContext,proto3" json:"audit_context,omitempty"`
}

func (x *DeleteDevicesResponse) Reset() {
	*x = DeleteDevicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDevicesResponse) ProtoMessage() {}

func (x *DeleteDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDevicesResponse.ProtoReflect.Descriptor instead.
func (*DeleteDevicesResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteDevicesResponse) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

func (x *DeleteDevicesResponse) GetAuditContext() *AuditContext {
	if x != nil {
		return x.AuditContext
	}
	return nil
}

type ServiceHeartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId  string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`       // generated unique id during start the service
	TimeToLive int64  `protobuf:"varint,2,opt,name=time_to_live,json=timeToLive,proto3" json:"time_to_live,omitempty"` // validity in nanoseconds. minimal value is 1000000000 (1s).
	Timestamp  int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                       // unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano)
}

func (x *ServiceHeartbeat) Reset() {
	*x = ServiceHeartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceHeartbeat) ProtoMessage() {}

func (x *ServiceHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceHeartbeat.ProtoReflect.Descriptor instead.
func (*ServiceHeartbeat) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{37}
}

func (x *ServiceHeartbeat) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ServiceHeartbeat) GetTimeToLive() int64 {
	if x != nil {
		return x.TimeToLive
	}
	return 0
}

func (x *ServiceHeartbeat) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type UpdateServiceMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Update:
	//
	//	*UpdateServiceMetadataRequest_Heartbeat
	Update isUpdateServiceMetadataRequest_Update `protobuf_oneof:"update"`
}

func (x *UpdateServiceMetadataRequest) Reset() {
	*x = UpdateServiceMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServiceMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceMetadataRequest) ProtoMessage() {}

func (x *UpdateServiceMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateServiceMetadataRequest) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{38}
}

func (m *UpdateServiceMetadataRequest) GetUpdate() isUpdateServiceMetadataRequest_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *UpdateServiceMetadataRequest) GetHeartbeat() *ServiceHeartbeat {
	if x, ok := x.GetUpdate().(*UpdateServiceMetadataRequest_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

type isUpdateServiceMetadataRequest_Update interface {
	isUpdateServiceMetadataRequest_Update()
}

type UpdateServiceMetadataRequest_Heartbeat struct {
	// Include or modify services within the valid services heartbeat list and transfer expired services from the valid list to the expired list.
	Heartbeat *ServiceHeartbeat `protobuf:"bytes,1,opt,name=heartbeat,proto3,oneof"`
}

func (*UpdateServiceMetadataRequest_Heartbeat) isUpdateServiceMetadataRequest_Update() {}

type UpdateServiceMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeartbeatValidUntil int64 `protobuf:"varint,1,opt,name=heartbeat_valid_until,json=heartbeatValidUntil,proto3" json:"heartbeat_valid_until,omitempty"` // unix timestamp in nanoseconds (https://golang.org/pkg/time/#Time.UnixNano) when service is considered as expired. 0 means forever.
}

func (x *UpdateServiceMetadataResponse) Reset() {
	*x = UpdateServiceMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_aggregate_pb_commands_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServiceMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceMetadataResponse) ProtoMessage() {}

func (x *UpdateServiceMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_aggregate_pb_commands_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceMetadataResponse.ProtoReflect.Descriptor instead.
func (*UpdateServiceMetadataResponse) Descriptor() ([]byte, []int) {
	return file_resource_aggregate_pb_commands_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateServiceMetadataResponse) GetHeartbeatValidUntil() int64 {
	if x != nil {
		return x.HeartbeatValidUntil
	}
	return 0
}

var File_resource_aggregate_pb_commands_proto protoreflect.FileDescriptor

var file_resource_aggregate_pb_commands_proto_rawDesc = []byte{
	0x0a, 0x24, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x1a, 0x25, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x2f, 0x70, 0x62, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xca, 0x01, 0x0a, 0x1b, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x50, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xd5, 0x01, 0x0a, 0x1c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x13, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x12, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0c,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xc7, 0x01, 0x0a,
	0x1d, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x68, 0x72, 0x65, 0x66, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x68,
	0x72, 0x65, 0x66, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x50, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x1e, 0x55, 0x6e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x75, 0x6e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x48, 0x72, 0x65, 0x66, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0c,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xb6, 0x02, 0x0a,
	0x1c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a,
	0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x37, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x10, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x65, 0x74, 0x61, 0x67, 0x22, 0x68, 0x0a, 0x1d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22,
	0x6d, 0x0a, 0x21, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x22, 0x6d,
	0x0a, 0x22, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xdd, 0x02,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f,
	0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x82, 0x01,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x47, 0x0a, 0x0d, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x22, 0xc9, 0x02, 0x0a, 0x1c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x10,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x68,
	0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xba, 0x02, 0x0a, 0x17, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2d,
	0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x20, 0x0a,
	0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x76, 0x65, 0x12,
	0x50, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x65, 0x74, 0x61, 0x67, 0x22, 0x84, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e,
	0x74, 0x69, 0x6c, 0x12, 0x47, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0c,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xdf, 0x02, 0x0a,
	0x1e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x41, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x37, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x74,
	0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x22, 0x6a,
	0x0a, 0x1f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xf5, 0x01, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x76, 0x65,
	0x12, 0x50, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x82, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x47,
	0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xc9, 0x02, 0x0a, 0x1c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x50, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x68, 0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xae, 0x02,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f,
	0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x50, 0x0a, 0x10,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x82,
	0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x47, 0x0a, 0x0d, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x22, 0xc9, 0x02, 0x0a, 0x1c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x50, 0x0a,
	0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0f,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x68, 0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x8b, 0x03, 0x0a, 0x0a, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x45, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x21, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46,
	0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c, 0x49, 0x4e,
	0x45, 0x10, 0x01, 0x22, 0x52, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x43, 0x4f, 0x41, 0x50, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4f, 0x41, 0x50, 0x53, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x41, 0x50, 0x5f, 0x54, 0x43, 0x50, 0x10, 0x03, 0x12,
	0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x41, 0x50, 0x53, 0x5f, 0x54, 0x43, 0x50, 0x10, 0x04, 0x12, 0x07,
	0x0a, 0x03, 0x43, 0x32, 0x43, 0x10, 0x05, 0x22, 0xe7, 0x02, 0x0a, 0x13, 0x54, 0x77, 0x69, 0x6e,
	0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x45, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72,
	0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x79, 0x6e, 0x63,
	0x69, 0x6e, 0x67, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x53, 0x79, 0x6e,
	0x63, 0x41, 0x74, 0x12, 0x50, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x18, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x73,
	0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x53, 0x79,
	0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x22,
	0x40, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x55, 0x54, 0x5f,
	0x4f, 0x46, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53,
	0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x59, 0x4e, 0x43, 0x49,
	0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10,
	0x03, 0x22, 0xee, 0x03, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x14, 0x74, 0x77, 0x69,
	0x6e, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x77, 0x69, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x13, 0x74, 0x77, 0x69, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72,
	0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0c, 0x74, 0x77, 0x69,
	0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x0b, 0x74, 0x77, 0x69, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3e,
	0x0a, 0x1a, 0x74, 0x77, 0x69, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e,
	0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x18, 0x74, 0x77, 0x69, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x53,
	0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x76, 0x65,
	0x12, 0x50, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x04, 0x08, 0x04,
	0x10, 0x05, 0x22, 0xab, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74,
	0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55,
	0x6e, 0x74, 0x69, 0x6c, 0x12, 0x47, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x77, 0x69, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x74, 0x77, 0x69, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x22, 0xe6, 0x02, 0x0a, 0x22, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x23, 0x0a, 0x0c, 0x74, 0x77, 0x69, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x77, 0x69, 0x6e, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x74, 0x77, 0x69, 0x6e, 0x5f, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x18, 0x74, 0x77,
	0x69, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0x6e, 0x0a, 0x23, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xe7, 0x01, 0x0a, 0x1c, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a,
	0x15, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f,
	0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x50, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x91, 0x01, 0x0a, 0x1d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x47,
	0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x23, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x72,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x50, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x98, 0x01, 0x0a, 0x24, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x73, 0x12, 0x47, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x35, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x73, 0x22, 0x7f, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x47, 0x0a, 0x0d,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x71, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x70, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x42, 0x08, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x53, 0x0a, 0x1d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x68,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75,
	0x6e, 0x74, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x68, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x42,
	0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6c,
	0x67, 0x64, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x68, 0x75, 0x62, 0x2f, 0x76, 0x32, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_resource_aggregate_pb_commands_proto_rawDescOnce sync.Once
	file_resource_aggregate_pb_commands_proto_rawDescData = file_resource_aggregate_pb_commands_proto_rawDesc
)

func file_resource_aggregate_pb_commands_proto_rawDescGZIP() []byte {
	file_resource_aggregate_pb_commands_proto_rawDescOnce.Do(func() {
		file_resource_aggregate_pb_commands_proto_rawDescData = protoimpl.X.CompressGZIP(file_resource_aggregate_pb_commands_proto_rawDescData)
	})
	return file_resource_aggregate_pb_commands_proto_rawDescData
}

var file_resource_aggregate_pb_commands_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_resource_aggregate_pb_commands_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_resource_aggregate_pb_commands_proto_goTypes = []interface{}{
	(Connection_Status)(0),                       // 0: resourceaggregate.pb.Connection.Status
	(Connection_Protocol)(0),                     // 1: resourceaggregate.pb.Connection.Protocol
	(TwinSynchronization_State)(0),               // 2: resourceaggregate.pb.TwinSynchronization.State
	(*CommandMetadata)(nil),                      // 3: resourceaggregate.pb.CommandMetadata
	(*PublishResourceLinksRequest)(nil),          // 4: resourceaggregate.pb.PublishResourceLinksRequest
	(*PublishResourceLinksResponse)(nil),         // 5: resourceaggregate.pb.PublishResourceLinksResponse
	(*UnpublishResourceLinksRequest)(nil),        // 6: resourceaggregate.pb.UnpublishResourceLinksRequest
	(*UnpublishResourceLinksResponse)(nil),       // 7: resourceaggregate.pb.UnpublishResourceLinksResponse
	(*NotifyResourceChangedRequest)(nil),         // 8: resourceaggregate.pb.NotifyResourceChangedRequest
	(*NotifyResourceChangedResponse)(nil),        // 9: resourceaggregate.pb.NotifyResourceChangedResponse
	(*BatchNotifyResourceChangedRequest)(nil),    // 10: resourceaggregate.pb.BatchNotifyResourceChangedRequest
	(*BatchNotifyResourceChangedResponse)(nil),   // 11: resourceaggregate.pb.BatchNotifyResourceChangedResponse
	(*UpdateResourceRequest)(nil),                // 12: resourceaggregate.pb.UpdateResourceRequest
	(*UpdateResourceResponse)(nil),               // 13: resourceaggregate.pb.UpdateResourceResponse
	(*ConfirmResourceUpdateRequest)(nil),         // 14: resourceaggregate.pb.ConfirmResourceUpdateRequest
	(*ConfirmResourceUpdateResponse)(nil),        // 15: resourceaggregate.pb.ConfirmResourceUpdateResponse
	(*RetrieveResourceRequest)(nil),              // 16: resourceaggregate.pb.RetrieveResourceRequest
	(*RetrieveResourceResponse)(nil),             // 17: resourceaggregate.pb.RetrieveResourceResponse
	(*ConfirmResourceRetrieveRequest)(nil),       // 18: resourceaggregate.pb.ConfirmResourceRetrieveRequest
	(*ConfirmResourceRetrieveResponse)(nil),      // 19: resourceaggregate.pb.ConfirmResourceRetrieveResponse
	(*DeleteResourceRequest)(nil),                // 20: resourceaggregate.pb.DeleteResourceRequest
	(*DeleteResourceResponse)(nil),               // 21: resourceaggregate.pb.DeleteResourceResponse
	(*ConfirmResourceDeleteRequest)(nil),         // 22: resourceaggregate.pb.ConfirmResourceDeleteRequest
	(*ConfirmResourceDeleteResponse)(nil),        // 23: resourceaggregate.pb.ConfirmResourceDeleteResponse
	(*CreateResourceRequest)(nil),                // 24: resourceaggregate.pb.CreateResourceRequest
	(*CreateResourceResponse)(nil),               // 25: resourceaggregate.pb.CreateResourceResponse
	(*ConfirmResourceCreateRequest)(nil),         // 26: resourceaggregate.pb.ConfirmResourceCreateRequest
	(*ConfirmResourceCreateResponse)(nil),        // 27: resourceaggregate.pb.ConfirmResourceCreateResponse
	(*Connection)(nil),                           // 28: resourceaggregate.pb.Connection
	(*TwinSynchronization)(nil),                  // 29: resourceaggregate.pb.TwinSynchronization
	(*UpdateDeviceMetadataRequest)(nil),          // 30: resourceaggregate.pb.UpdateDeviceMetadataRequest
	(*UpdateDeviceMetadataResponse)(nil),         // 31: resourceaggregate.pb.UpdateDeviceMetadataResponse
	(*ConfirmDeviceMetadataUpdateRequest)(nil),   // 32: resourceaggregate.pb.ConfirmDeviceMetadataUpdateRequest
	(*ConfirmDeviceMetadataUpdateResponse)(nil),  // 33: resourceaggregate.pb.ConfirmDeviceMetadataUpdateResponse
	(*CancelPendingCommandsRequest)(nil),         // 34: resourceaggregate.pb.CancelPendingCommandsRequest
	(*CancelPendingCommandsResponse)(nil),        // 35: resourceaggregate.pb.CancelPendingCommandsResponse
	(*CancelPendingMetadataUpdatesRequest)(nil),  // 36: resourceaggregate.pb.CancelPendingMetadataUpdatesRequest
	(*CancelPendingMetadataUpdatesResponse)(nil), // 37: resourceaggregate.pb.CancelPendingMetadataUpdatesResponse
	(*DeleteDevicesRequest)(nil),                 // 38: resourceaggregate.pb.DeleteDevicesRequest
	(*DeleteDevicesResponse)(nil),                // 39: resourceaggregate.pb.DeleteDevicesResponse
	(*ServiceHeartbeat)(nil),                     // 40: resourceaggregate.pb.ServiceHeartbeat
	(*UpdateServiceMetadataRequest)(nil),         // 41: resourceaggregate.pb.UpdateServiceMetadataRequest
	(*UpdateServiceMetadataResponse)(nil),        // 42: resourceaggregate.pb.UpdateServiceMetadataResponse
	(*Resource)(nil),                             // 43: resourceaggregate.pb.Resource
	(*AuditContext)(nil),                         // 44: resourceaggregate.pb.AuditContext
	(*ResourceId)(nil),                           // 45: resourceaggregate.pb.ResourceId
	(*Content)(nil),                              // 46: resourceaggregate.pb.Content
	(Status)(0),                                  // 47: resourceaggregate.pb.Status
}
var file_resource_aggregate_pb_commands_proto_depIdxs = []int32{
	43, // 0: resourceaggregate.pb.PublishResourceLinksRequest.resources:type_name -> resourceaggregate.pb.Resource
	3,  // 1: resourceaggregate.pb.PublishResourceLinksRequest.command_metadata:type_name -> resourceaggregate.pb.CommandMetadata
	43, // 2: resourceaggregate.pb.PublishResourceLinksResponse.published_resources:type_name -> resourceaggregate.pb.Resource
	44, // 3: resourceaggregate.pb.PublishResourceLinksResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	3,  // 4: resourceaggregate.pb.UnpublishResourceLinksRequest.command_metadata:type_name -> resourceaggregate.pb.CommandMetadata
	44, // 5: resourceaggregate.pb.UnpublishResourceLinksResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	45, // 6: resourceaggregate.pb.NotifyResourceChangedRequest.resource_id:type_name -> resourceaggregate.pb.ResourceId
	46, // 7: resourceaggregate.pb.NotifyResourceChangedRequest.content:type_name -> resourceaggregate.pb.Content
	3,  // 8: resourceaggregate.pb.NotifyResourceChangedRequest.command_metadata:type_name -> resourceaggregate.pb.CommandMetadata
	47, // 9: resourceaggregate.pb.NotifyResourceChangedRequest.status:type_name -> resourceaggregate.pb.Status
	44, // 10: resourceaggregate.pb.NotifyResourceChangedResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	8,  // 11: resourceaggregate.pb.BatchNotifyResourceChangedRequest.batch:type_name -> resourceaggregate.pb.NotifyResourceChangedRequest
	44, // 12: resourceaggregate.pb.BatchNotifyResourceChangedResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	45, // 13: resourceaggregate.pb.UpdateResourceRequest.resource_id:type_name -> resourceaggregate.pb.ResourceId
	46, // 14: resourceaggregate.pb.UpdateResourceRequest.content:type_name -> resourceaggregate.pb.Content
	3,  // 15: resourceaggregate.pb.UpdateResourceRequest.command_metadata:type_name -> resourceaggregate.pb.CommandMetadata
	44, // 16: resourceaggregate.pb.UpdateResourceResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	45, // 17: resourceaggregate.pb.ConfirmResourceUpdateRequest.resource_id:type_name -> resourceaggregate.pb.ResourceId
	47, // 18: resourceaggregate.pb.ConfirmResourceUpdateRequest.status:type_name -> resourceaggregate.pb.Status
	46, // 19: resourceaggregate.pb.ConfirmResourceUpdateRequest.content:type_name -> resourceaggregate.pb.Content
	3,  // 20: resourceaggregate.pb.ConfirmResourceUpdateRequest.command_metadata:type_name -> resourceaggregate.pb.CommandMetadata
	44, // 21: resourceaggregate.pb.ConfirmResourceUpdateResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	45, // 22: resourceaggregate.pb.RetrieveResourceRequest.resource_id:type_name -> resourceaggregate.pb.ResourceId
	3,  // 23: resourceaggregate.pb.RetrieveResourceRequest.command_metadata:type_name -> resourceaggregate.pb.CommandMetadata
	44, // 24: resourceaggregate.pb.RetrieveResourceResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	45, // 25: resourceaggregate.pb.ConfirmResourceRetrieveRequest.resource_id:type_name -> resourceaggregate.pb.ResourceId
	47, // 26: resourceaggregate.pb.ConfirmResourceRetrieveRequest.status:type_name -> resourceaggregate.pb.Status
	46, // 27: resourceaggregate.pb.ConfirmResourceRetrieveRequest.content:type_name -> resourceaggregate.pb.Content
	3,  // 28: resourceaggregate.pb.ConfirmResourceRetrieveRequest.command_metadata:type_name -> resourceaggregate.pb.CommandMetadata
	44, // 29: resourceaggregate.pb.ConfirmResourceRetrieveResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	45, // 30: resourceaggregate.pb.DeleteResourceRequest.resource_id:type_name -> resourceaggregate.pb.ResourceId
	3,  // 31: resourceaggregate.pb.DeleteResourceRequest.command_metadata:type_name -> resourceaggregate.pb.CommandMetadata
	44, // 32: resourceaggregate.pb.DeleteResourceResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	45, // 33: resourceaggregate.pb.ConfirmResourceDeleteRequest.resource_id:type_name -> resourceaggregate.pb.ResourceId
	47, // 34: resourceaggregate.pb.ConfirmResourceDeleteRequest.status:type_name -> resourceaggregate.pb.Status
	46, // 35: resourceaggregate.pb.ConfirmResourceDeleteRequest.content:type_name -> resourceaggregate.pb.Content
	3,  // 36: resourceaggregate.pb.ConfirmResourceDeleteRequest.command_metadata:type_name -> resourceaggregate.pb.CommandMetadata
	44, // 37: resourceaggregate.pb.ConfirmResourceDeleteResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	45, // 38: resourceaggregate.pb.CreateResourceRequest.resource_id:type_name -> resourceaggregate.pb.ResourceId
	46, // 39: resourceaggregate.pb.CreateResourceRequest.content:type_name -> resourceaggregate.pb.Content
	3,  // 40: resourceaggregate.pb.CreateResourceRequest.command_metadata:type_name -> resourceaggregate.pb.CommandMetadata
	44, // 41: resourceaggregate.pb.CreateResourceResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	45, // 42: resourceaggregate.pb.ConfirmResourceCreateRequest.resource_id:type_name -> resourceaggregate.pb.ResourceId
	47, // 43: resourceaggregate.pb.ConfirmResourceCreateRequest.status:type_name -> resourceaggregate.pb.Status
	46, // 44: resourceaggregate.pb.ConfirmResourceCreateRequest.content:type_name -> resourceaggregate.pb.Content
	3,  // 45: resourceaggregate.pb.ConfirmResourceCreateRequest.command_metadata:type_name -> resourceaggregate.pb.CommandMetadata
	44, // 46: resourceaggregate.pb.ConfirmResourceCreateResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	0,  // 47: resourceaggregate.pb.Connection.status:type_name -> resourceaggregate.pb.Connection.Status
	1,  // 48: resourceaggregate.pb.Connection.protocol:type_name -> resourceaggregate.pb.Connection.Protocol
	2,  // 49: resourceaggregate.pb.TwinSynchronization.state:type_name -> resourceaggregate.pb.TwinSynchronization.State
	3,  // 50: resourceaggregate.pb.TwinSynchronization.command_metadata:type_name -> resourceaggregate.pb.CommandMetadata
	28, // 51: resourceaggregate.pb.UpdateDeviceMetadataRequest.connection:type_name -> resourceaggregate.pb.Connection
	29, // 52: resourceaggregate.pb.UpdateDeviceMetadataRequest.twin_synchronization:type_name -> resourceaggregate.pb.TwinSynchronization
	3,  // 53: resourceaggregate.pb.UpdateDeviceMetadataRequest.command_metadata:type_name -> resourceaggregate.pb.CommandMetadata
	44, // 54: resourceaggregate.pb.UpdateDeviceMetadataResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	47, // 55: resourceaggregate.pb.ConfirmDeviceMetadataUpdateRequest.status:type_name -> resourceaggregate.pb.Status
	3,  // 56: resourceaggregate.pb.ConfirmDeviceMetadataUpdateRequest.command_metadata:type_name -> resourceaggregate.pb.CommandMetadata
	44, // 57: resourceaggregate.pb.ConfirmDeviceMetadataUpdateResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	45, // 58: resourceaggregate.pb.CancelPendingCommandsRequest.resource_id:type_name -> resourceaggregate.pb.ResourceId
	3,  // 59: resourceaggregate.pb.CancelPendingCommandsRequest.command_metadata:type_name -> resourceaggregate.pb.CommandMetadata
	44, // 60: resourceaggregate.pb.CancelPendingCommandsResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	3,  // 61: resourceaggregate.pb.CancelPendingMetadataUpdatesRequest.command_metadata:type_name -> resourceaggregate.pb.CommandMetadata
	44, // 62: resourceaggregate.pb.CancelPendingMetadataUpdatesResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	44, // 63: resourceaggregate.pb.DeleteDevicesResponse.audit_context:type_name -> resourceaggregate.pb.AuditContext
	40, // 64: resourceaggregate.pb.UpdateServiceMetadataRequest.heartbeat:type_name -> resourceaggregate.pb.ServiceHeartbeat
	65, // [65:65] is the sub-list for method output_type
	65, // [65:65] is the sub-list for method input_type
	65, // [65:65] is the sub-list for extension type_name
	65, // [65:65] is the sub-list for extension extendee
	0,  // [0:65] is the sub-list for field type_name
}

func init() { file_resource_aggregate_pb_commands_proto_init() }
func file_resource_aggregate_pb_commands_proto_init() {
	if File_resource_aggregate_pb_commands_proto != nil {
		return
	}
	file_resource_aggregate_pb_resources_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_resource_aggregate_pb_commands_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishResourceLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishResourceLinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpublishResourceLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpublishResourceLinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyResourceChangedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyResourceChangedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchNotifyResourceChangedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchNotifyResourceChangedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmResourceUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmResourceUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmResourceRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmResourceRetrieveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmResourceDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmResourceDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmResourceCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmResourceCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwinSynchronization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmDeviceMetadataUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmDeviceMetadataUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelPendingCommandsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelPendingCommandsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelPendingMetadataUpdatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelPendingMetadataUpdatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDevicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceHeartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServiceMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_aggregate_pb_commands_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServiceMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_resource_aggregate_pb_commands_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*UpdateDeviceMetadataRequest_Connection)(nil),
		(*UpdateDeviceMetadataRequest_TwinSynchronization)(nil),
		(*UpdateDeviceMetadataRequest_TwinEnabled)(nil),
		(*UpdateDeviceMetadataRequest_TwinForceSynchronization)(nil),
	}
	file_resource_aggregate_pb_commands_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*ConfirmDeviceMetadataUpdateRequest_TwinEnabled)(nil),
		(*ConfirmDeviceMetadataUpdateRequest_TwinForceSynchronization)(nil),
	}
	file_resource_aggregate_pb_commands_proto_msgTypes[38].OneofWrappers = []interface{}{
		(*UpdateServiceMetadataRequest_Heartbeat)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resource_aggregate_pb_commands_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resource_aggregate_pb_commands_proto_goTypes,
		DependencyIndexes: file_resource_aggregate_pb_commands_proto_depIdxs,
		EnumInfos:         file_resource_aggregate_pb_commands_proto_enumTypes,
		MessageInfos:      file_resource_aggregate_pb_commands_proto_msgTypes,
	}.Build()
	File_resource_aggregate_pb_commands_proto = out.File
	file_resource_aggregate_pb_commands_proto_rawDesc = nil
	file_resource_aggregate_pb_commands_proto_goTypes = nil
	file_resource_aggregate_pb_commands_proto_depIdxs = nil
}
