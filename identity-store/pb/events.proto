syntax = "proto3";

package identitystore.pb;

option go_package = "github.com/plgd-dev/hub/v2/identity-store/events;events";

// provides who register/unregister the device
message AuditContext {
    string user_id = 1;
}

message EventMetadata {
    string hub_id = 1; // the hub which sent the event
}

// devices was registered to owner.
message DevicesRegistered {
    string owner = 1; // new owner of devices.
    repeated string device_ids = 2; // list of device ids added to owner.
    int64 timestamp = 3; // unix timestamp in nanoseconds of creation event.
    AuditContext audit_context = 4; // provides who register/unregister the device
    EventMetadata event_metadata = 5; // provides metadata of event

    // Open telemetry data propagated to asynchronous events
    map<string,string> open_telemetry_carrier = 100;
}

// devices was deregistered from owner.
message DevicesUnregistered {
    string owner = 1; // owner, which lose devices.
    repeated string device_ids = 2; // list of device ids deleted from owner.
    int64 timestamp = 3; // unix timestamp in nanoseconds of creation event.
    AuditContext audit_context = 4; // provides who register/unregister the device
    EventMetadata event_metadata = 5; // provides metadata of event
    
    // Open telemetry data propagated to asynchronous events
    map<string,string> open_telemetry_carrier = 100;
}

// nats: owners.{owner}.>
message Event {
    oneof type {
        // nats: owners.{owner}.registered
        DevicesRegistered devices_registered = 1;
        // nats: owners.{owner}.unregistered
        DevicesUnregistered devices_unregistered = 2;
    };
}

