{{- if .Values.certificateauthority.enabled }}
{{- $cert := "/certs" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "plgd-hub.certificateauthority.configName" . }}
  namespace: {{ .Release.Namespace }}
data:
  {{ .Values.certificateauthority.config.fileName }}: |
    {{- with .Values.certificateauthority }}
    log:
      level: {{ .log.level }}
      dumpBody: {{ .log.dumpBody }}
      encoding: {{ .log.encoding }}
      stacktrace:
        enabled: {{ .log.stacktrace.enabled }}
        level: {{ .log.stacktrace.level }}
      encoderConfig:
        timeEncoder: {{ .log.encoderConfig.timeEncoder }}
    apis:
      grpc:
        address: {{  .apis.grpc.address | default (printf "0.0.0.0:%v" .port) | quote }}
        sendMsgSize: {{ int64 .apis.grpc.sendMsgSize | default 4194304 }}
        recvMsgSize: {{ int64 .apis.grpc.recvMsgSize | default 4194304 }}
        enforcementPolicy:
          minTime: {{ .apis.grpc.enforcementPolicy.minTime }}
          permitWithoutStream: {{ .apis.grpc.enforcementPolicy.permitWithoutStream }}
        keepAlive:
          # 0s - means infinity
          maxConnectionIdle: {{ .apis.grpc.keepAlive.maxConnectionIdle }}
          # 0s - means infinity
          maxConnectionAge: {{ .apis.grpc.keepAlive.maxConnectionIdle }}
          # 0s - means infinity
          maxConnectionAgeGrace: {{ .apis.grpc.keepAlive.maxConnectionAgeGrace }}
          time: {{ .apis.grpc.keepAlive.maxConnectionIdle }}
          timeout: {{ .apis.grpc.keepAlive.maxConnectionIdle }}
        tls:
          {{- $tls := .apis.grpc.tls }}
          {{- include "plgd-hub.certificateConfig" (list $ $tls $cert ) | indent 8 }}
          clientCertificateRequired: {{ .apis.grpc.tls.clientCertificateRequired }}
        authorization:
          {{- $authorization := .apis.grpc.authorization }}
          {{- include "plgd-hub.authorizationConfig" (list $ $authorization "certificateauthority" ) | indent 8 }}
          http:
            maxIdleConns: {{ .apis.grpc.authorization.http.maxIdleConns }}
            maxConnsPerHost: {{ .apis.grpc.authorization.http.maxIdleConnsPerHost }}
            maxIdleConnsPerHost: {{ .apis.grpc.authorization.http.maxIdleConnsPerHost }}
            idleConnTimeout: {{ .apis.grpc.authorization.http.idleConnTimeout }}
            timeout: {{ .apis.grpc.authorization.http.timeout }}
            tls:
              {{- $grpcTls := .apis.grpc.authorization.http.tls }}
              {{- include "plgd-hub.authorizationCaCertificateConfig" (list $ $grpcTls $cert ) | indent 12 }}
              useSystemCAPool: {{ .apis.grpc.authorization.http.tls.useSystemCAPool }}
      http:
        address: {{  .apis.http.address | default (printf "0.0.0.0:%v" .httpPort) | quote }}
        readTimeout: {{ .apis.http.readTimeout }}
        readHeaderTimeout: {{ .apis.http.readHeaderTimeout }}
        writeTimeout: {{ .apis.http.writeTimeout }}
        idleTimeout: {{ .apis.http.idleTimeout }}
    clients:
      storage:
        cleanUpRecords: {{ .clients.storage.cleanUpRecords | quote }}
        mongoDB:
          uri: {{- printf " " }}{{- include "plgd-hub.mongoDBUri" (list $ .clients.storage.mongoDB.uri )  | quote }}
          database: {{ .clients.storage.mongoDB.database }}
          maxPoolSize: {{ .clients.storage.mongoDB.maxPoolSize }}
          maxConnIdleTime: {{ .clients.storage.mongoDB.maxConnIdleTime }}
          tls:
            {{- $mongoDbTls := .clients.storage.mongoDB.tls }}
            {{- include "plgd-hub.certificateConfig" (list $ $mongoDbTls $cert ) | indent 10 }}
            useSystemCAPool: {{ .clients.storage.mongoDB.tls.useSystemCAPool }}
          bulkWrite:
            timeout: {{ .clients.storage.mongoDB.bulkWrite.timeout  | quote }}
            throttleTime: {{ .clients.storage.mongoDB.bulkWrite.throttleTime  | quote }}
            documentLimit: {{ .clients.storage.mongoDB.bulkWrite.documentLimit  }}
      {{- include "plgd-hub.openTelemetryExporterConfig" (list $ $cert ) | nindent 6 }}
    signer:
      certFile: {{ .signer.certFile | default ( printf "%s/%s" $.Values.certificateauthority.ca.volume.mountPath $.Values.certificateauthority.ca.cert ) | quote }}
      keyFile: {{ .signer.keyFile | default ( printf "%s/%s" $.Values.certificateauthority.ca.volume.mountPath $.Values.certificateauthority.ca.key ) | quote }}
      validFrom: {{ .signer.validFrom | quote }}
      expiresIn: {{ .signer.expiresIn | quote }}
      hubID: {{ required "certificateauthority.signer.hubId or coapgateway.hubId or global.hubId is required" ( .signer.hubId | default ( $.Values.coapgateway.hubId | default $.Values.global.hubId)) | quote }}
  {{- end }}
{{- end }}
