{{- if .Values.resourcedirectory.enabled }}
{{- $resourceDirectoryCertPath := "/certs" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "plgd-hub.resourcedirectory.configName" . }}
  namespace: {{ .Release.Namespace }}
data:
  {{ .Values.resourcedirectory.config.fileName }}: |
    {{- with .Values.resourcedirectory }}
    hubID: {{ required "resourcedirectory.hubId or global.hubId is required" ( .hubId | default $.Values.global.hubId) | quote }}
    log:
      level: {{ .log.level }}
      dumpBody: {{ .log.dumpBody }}
      encoding: {{ .log.encoding }}
      stacktrace:
        enabled: {{ .log.stacktrace.enabled }}
        level: {{ .log.stacktrace.level }}
      encoderConfig:
        timeEncoder: {{ .log.encoderConfig.timeEncoder }}
    apis:
      grpc:
        address: {{  .apis.grpc.address | default (printf "0.0.0.0:%v" .port) | quote }}
        sendMsgSize: {{ int64 .apis.grpc.sendMsgSize | default 4194304 }}
        recvMsgSize: {{ int64 .apis.grpc.recvMsgSize | default 4194304 }}
        ownerCacheExpiration: {{ .apis.grpc.ownerCacheExpiration | quote }}
        enforcementPolicy:
          minTime: {{ .apis.grpc.enforcementPolicy.minTime | quote }}
          permitWithoutStream: {{ .apis.grpc.enforcementPolicy.permitWithoutStream }}
        keepAlive:
          maxConnectionIdle: {{ .apis.grpc.keepAlive.maxConnectionIdle }}
          maxConnectionAge: {{ .apis.grpc.keepAlive.maxConnectionAge }}
          maxConnectionAgeGrace: {{ .apis.grpc.keepAlive.maxConnectionAgeGrace }}
          time: {{ .apis.grpc.keepAlive.time }}
          timeout: {{ .apis.grpc.keepAlive.timeout }}
        tls:
          {{- $tls := .apis.grpc.tls }}
          {{- include "plgd-hub.internalCertificateConfig" (list $ $tls $resourceDirectoryCertPath ) | indent 8 }}
          clientCertificateRequired: {{ .apis.grpc.tls.clientCertificateRequired }}
        authorization:
          {{- $authorization := .apis.grpc.authorization }}
          {{- include "plgd-hub.authorizationConfig" (list $ $authorization "resourcedirectory.apis.grpc.authorization" $resourceDirectoryCertPath ) | indent 8 }}
    clients:
      eventBus:
        goPoolSize: {{ .clients.eventBus.goPoolSize }}
        nats:
          url: {{ printf " " }}{{- include "plgd-hub.natsUri" (list $ .clients.eventBus.nats.url) | quote }}
          pendingLimits:
            msgLimit: {{ printf "%v" .clients.eventBus.nats.pendingLimits.msgLimit }}
            bytesLimit: {{ printf "%v" .clients.eventBus.nats.pendingLimits.bytesLimit }}
          tls:
            {{- $natsTls := .clients.eventBus.nats.tls }}
            {{- include "plgd-hub.internalCertificateConfig" (list $ $natsTls $resourceDirectoryCertPath ) | indent 10 }}
            useSystemCAPool: {{ .clients.eventBus.nats.tls.useSystemCAPool }}
          {{- if or .clients.eventBus.nats.leadResourceType $.Values.global.nats.leadResourceType }}
          {{- $leadResourceType := .clients.eventBus.nats.leadResourceType | default $.Values.global.nats.leadResourceType }}
          leadResourceType:
            enabled: {{ $leadResourceType.enabled }}
          {{- end }}
      eventStore:
        cacheExpiration: {{ .clients.eventStore.cacheExpiration }}
        use: {{ include "plgd-hub.useDatabase" (list $ . .clients.eventStore.use)  | quote }}
        mongoDB:
          uri:{{ printf " " }}{{- include "plgd-hub.mongoDBUri" (list $ .clients.eventStore.mongoDB.uri)  | quote }}
          database: {{ .clients.eventStore.mongoDB.database }}
          batchSize: {{ .clients.eventStore.mongoDB.batchSize }}
          maxPoolSize: {{ .clients.eventStore.mongoDB.maxPoolSize }}
          maxConnIdleTime: {{ .clients.eventStore.mongoDB.maxConnIdleTime }}
          tls:
            {{- $mongoTls := .clients.eventStore.mongoDB.tls }}
            {{- include "plgd-hub.internalCertificateConfig" (list $ $mongoTls $resourceDirectoryCertPath ) | indent 10 }}
            useSystemCAPool: {{ .clients.eventStore.mongoDB.tls.useSystemCAPool }}
        cqlDB:
          hosts:
          {{- include "plgd-hub.cqlDBHosts" (list $ .clients.eventStore.cqlDB.hosts ) | indent 8 }}
          port: {{ .clients.eventStore.cqlDB.port | default 9142 }}
          table: {{ .clients.eventStore.cqlDB.table | quote }}
          numConnections: {{ .clients.eventStore.cqlDB.numConnections }}
          connectTimeout: {{ .clients.eventStore.cqlDB.connectTimeout }}
          useHostnameResolution: {{ .clients.eventStore.cqlDB.useHostnameResolution }}
          reconnectionPolicy:
            constant:
              interval: {{ .clients.eventStore.cqlDB.reconnectionPolicy.constant.interval }}
              maxRetries: {{ .clients.eventStore.cqlDB.reconnectionPolicy.constant.maxRetries }}
          keyspace:
            name: {{ .clients.eventStore.cqlDB.keyspace.name }}
            create: {{ .clients.eventStore.cqlDB.keyspace.create }}
            replication:
              {{- toYaml .clients.eventStore.cqlDB.keyspace.replication | nindent 14 }}
          tls:
            {{- $cqlDbTls := .clients.eventStore.cqlDB.tls }}
            {{- include "plgd-hub.internalCertificateConfig" (list $ $cqlDbTls $resourceDirectoryCertPath ) | indent 10 }}
            useSystemCAPool: {{ .clients.eventStore.cqlDB.tls.useSystemCAPool }}
      identityStore:
        pullFrequency: {{ .clients.identityStore.pullFrequency }}
        cacheExpiration: {{ .clients.identityStore.cacheExpiration }}
        ownerClaim: {{ .clients.identityStore.ownerClaim | default $.Values.global.ownerClaim | quote }}
        grpc:
          {{- $authorizationServer := .clients.identityStore.grpc.address }}
          address:{{ printf " " }}{{- include "plgd-hub.identityStoreAddress" (list $ $authorizationServer ) | quote }}
          sendMsgSize: {{ int64 .clients.identityStore.grpc.sendMsgSize | default 4194304 }}
          recvMsgSize: {{ int64 .clients.identityStore.grpc.recvMsgSize | default 4194304 }}
          keepAlive:
            time: {{ .clients.identityStore.grpc.keepAlive.timeout }}
            timeout: {{ .clients.identityStore.grpc.keepAlive.timeout }}
            permitWithoutStream: {{ .clients.identityStore.grpc.keepAlive.permitWithoutStream }}
          tls:
            {{- $authClientTls := .clients.identityStore.grpc.tls }}
            {{- include "plgd-hub.internalCertificateConfig" (list $ $authClientTls $resourceDirectoryCertPath ) | indent 10 }}
            useSystemCAPool: {{ .clients.identityStore.grpc.tls.useSystemCAPool }}
      {{- include "plgd-hub.openTelemetryExporterConfig" (list $ $resourceDirectoryCertPath) | nindent 6 }}
    publicConfiguration:
      caPool: {{ .publicConfiguration.caPool | default "/certs/ca.crt" | quote }}
      {{- if not $.Values.mockoauthserver.enabled }}
      authority: {{ required "resourcedirectory.publicConfiguration.authority or global.authority is required" ( .publicConfiguration.authority | default $.Values.global.authority ) | quote }}
      {{- else }}
      authority: {{ include "plgd-hub.mockoauthserver.uri" $ | quote }}
      {{- end }}
      ownerClaim: {{ .publicConfiguration.ownerClaim  | default $.Values.global.ownerClaim | quote }}
      {{- if .publicConfiguration.deviceIdClaim  | default $.Values.global.deviceIdClaim }}
      deviceIDClaim: {{ .publicConfiguration.deviceIdClaim  | default $.Values.global.deviceIdClaim | quote }}
      {{- end }}
      hubID: {{ required "resourcedirectory.publicConfiguration.hubId or coapgateway.hubId or global.hubId is required" ( .publicConfiguration.hubId | default ( $.Values.coapgateway.hubId | default $.Values.global.hubId)) | quote }}
      coapGateway: {{ .publicConfiguration.coapGateway | default (printf "coaps+tcp://%s:%v" $.Values.global.domain $.Values.coapgateway.port ) | quote }}
      defaultCommandTimeToLive: {{ .publicConfiguration.defaultCommandTimeToLive | default $.Values.global.defaultCommandTimeToLive | quote }}
      certificateAuthority: {{ .publicConfiguration.certificateAuthority | default (printf "https://%s" (include "plgd-hub.certificateauthority.domain" $ )) | quote }}
  {{- end }}
{{- end }}
