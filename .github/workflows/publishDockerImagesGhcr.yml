# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Create and publish a docker images to github

on:
  workflow_run:
    workflows:
      - "Test"
    branches:
      - main
    types:
      - completed
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      target:
        description: "Choose target to build"
        required: true
        type: choice
        default: "all"
        options:
          - all
          - resource-aggregate
          - resource-directory
          - coap-gateway
          - coap-gateway-go1-18
          - cloud2cloud-connector
          - cloud2cloud-gateway
          - certificate-authority
          - grpc-gateway
          - http-gateway
          - identity-store
          - mock-oauth-server
          - bundle
          - test-cloud-server
          - cert-tool
      push:
        description: "Push to container registry"
        required: false
        type: boolean
        default: false
env:
  REGISTRY: ghcr.io
  VNEXT_BRANCH: main

jobs:
  build-and-publish-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: resource-aggregate
            directory: resource-aggregate
            file: tools/docker/Dockerfile
          - name: resource-directory
            directory: resource-directory
            file: tools/docker/Dockerfile
          - name: coap-gateway
            directory: coap-gateway
            file: tools/docker/Dockerfile
          - name: cloud2cloud-connector
            directory: cloud2cloud-connector
            file: tools/docker/Dockerfile
          - name: cloud2cloud-gateway
            directory: cloud2cloud-gateway
            file: tools/docker/Dockerfile
          - name: certificate-authority
            directory: certificate-authority
            file: tools/docker/Dockerfile
          - name: grpc-gateway
            directory: grpc-gateway
            file: tools/docker/Dockerfile
          - name: http-gateway
            directory: http-gateway
            file: http-gateway/Dockerfile
          - name: identity-store
            directory: identity-store
            file: tools/docker/Dockerfile
          - name: mock-oauth-server
            directory: test/oauth-server
            file: tools/docker/Dockerfile
          - name: bundle
            directory: bundle
            file: bundle/Dockerfile
          - name: test-cloud-server
            directory: test/cloud-server
            file: test/cloud-server/Dockerfile
          - name: cert-tool
            directory: tools/cert-tool
            file: tools/cert-tool/Dockerfile
          # coap-gateway builded by Golang 1.19.4 has an issue with TLS handshake.
          # This issue is reproducible with real devices that connect to AWS.
          # This seems to be caused by the device's old mbedtls library:
          # https://github.com/Mbed-TLS/mbedtls/tree/d81c11b8ab61fd5b2da8133aa73c5fe33a0633eb
          - name: coap-gateway-go1-18
            directory: coap-gateway
            file: tools/docker/Dockerfile.go1.18
    if: $${{ github.event_name != 'workflow_dispatch' || inputs.target == 'all' || inputs.target == matrix.name }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: CPU Info
        run: |
          cat /proc/cpuinfo
          echo "Number of cores: $(nproc)"
          echo "Number of threads: $(nproc --all)"
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set vars.branch
        id: vars
        run: BRANCH=${GITHUB_REF#refs/*/} && echo ${BRANCH} && echo "branch=${BRANCH}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for docker image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.name }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=raw,enable=${{ startsWith(steps.vars.outputs.branch, env.VNEXT_BRANCH) }},value=vnext
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,enable=${{ startsWith(steps.vars.outputs.branch, env.VNEXT_BRANCH) }},prefix=vnext-,format=short

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            DIRECTORY=${{ matrix.directory }}
            NAME=${{ matrix.name }}
          file: ${{ matrix.file }}
          push: ${{ github.event_name != 'workflow_dispatch' || inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
