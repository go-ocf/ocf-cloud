name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - v2
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ci:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Setup kernel for multicast messages, increase read buffer to 8MB
        run: sudo sysctl -w net.core.rmem_max=8388608

      - name: Run a test
        if: "!contains(github.event.head_commit.message, '[doc]')"
        run: make test
        
      - name: Publish the coverage
        if: "!contains(github.event.head_commit.message, '[doc]')"
        run: bash <(curl -s https://codecov.io/bash)

      - name: Set latest tag
        if: "!contains(github.event.head_commit.message, '[doc]')"
        run: echo "RELEASE_VERSION=`echo ${GITHUB_REF#refs/*/} | sed -e 's/v2/v2next/'`" >> $GITHUB_ENV
      
      - name: Publish docker images
        if: "!contains(github.event.head_commit.message, '[doc]')"
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin && make push LATEST_TAG=${{ env.RELEASE_VERSION }}
    
  docs:
    runs-on: ubuntu-20.04
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta

      - name: Install
        run: yarn install
        
      - name: Build
        run: yarn docs:build
      
      - name: Set latest tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
     
      - name: Deploy
        if: ${{ env.RELEASE_VERSION == 'v2' }}
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: dist # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch

