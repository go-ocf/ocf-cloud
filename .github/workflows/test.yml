# This is a basic workflow to help you get started with Actions

name: Test

# Controls when the action will run. Triggers the workflow push is only on main branch and PR on any branch.
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # test with check race with coverage and sonarcloud
          - name: test
            cmd: test
            checkRace: "true"
            coapGateway:
              log:
                level: "debug"
                dumpBody: "true"

          # test without check race
          - name: test/norace
            cmd: test
            coapGateway:
              log:
                level: "debug"
                dumpBody: "true"

          # test without check race and with ECDSA-SHA256 signature and P384 elliptic curve certificates
          - name: test/norace-384
            cmd: test
            args: CERT_TOOL_SIGN_ALG=ECDSA-SHA384 CERT_TOOL_ELLIPTIC_CURVE=P384

          # test without check race with logs from all services
          - name: test/norace/logs
            cmd: test
            coapGateway:
              log:
                level: "debug"
                dumpBody: "true"
            grpcGateway:
              log:
                level: "debug"
                dumpBody: "true"
            resourceAggregate:
              log:
                level: "debug"
                dumpBody: "true"
            identityStore:
              log:
                level: "debug"
                dumpBody: "true"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: CPU Info
        run: |
          cat /proc/cpuinfo
          echo "Number of cores: $(nproc)"
          echo "Number of threads: $(nproc --all)"
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Run a test
        run: |
          make ${{ matrix.cmd }} TEST_CHECK_RACE=${{ matrix.checkRace }} \
          TEST_COAP_GATEWAY_LOG_LEVEL=${{ matrix.coapGateway.log.level }} TEST_COAP_GATEWAY_LOG_DUMP_BODY=${{ matrix.coapGateway.log.dumpBody }} \
          TEST_RESOURCE_AGGREGATE_LOG_LEVEL=${{ matrix.resourceAggregate.log.level }} TEST_RESOURCE_AGGREGATE_LOG_DUMP_BODY=${{ matrix.resourceAggregate.log.dumpBody }} \
          TEST_GRPC_GATEWAY_LOG_LEVEL=${{ matrix.grpcGateway.log.level }} TEST_GRPC_GATEWAY_LOG_DUMP_BODY=${{ matrix.grpcGateway.log.dumpBody }} \
          TEST_IDENTITY_STORE_LOG_LEVEL=${{ matrix.identityStore.log.level }} TEST_IDENTITY_STORE_LOG_DUMP_BODY=${{ matrix.identityStore.log.dumpBody }} \
          ${{ matrix.args }}

      - name: Prepare upload files
        run: |
          mkdir -p ./outputs
          cp -r .tmp/coverage ./outputs/
          cp -r .tmp/report ./outputs/

      - name: Upload coverage and report files
        uses: actions/upload-artifact@v3
        with:
          name: ${{ hashFiles('./outputs') || 'none' }}
          path: ./outputs
          retention-days: 1
          if-no-files-found: warn

  coverage-sonar-cloud-scan:
    needs: test
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./outputs

      - name: Prepare coverage and report files
        run: |
          mkdir -p .tmp/coverage
          mkdir -p .tmp/report
          find ./outputs -name "*.coverage.txt" -exec sh -c 'cp $1 .tmp/coverage/$(echo $1 | sed "s/[\/.]/-/g" ).coverage.txt' _ {}  \;
          find ./outputs -name "*.report.json" -exec sh -c 'cp $1 .tmp/report/$(echo $1 | sed "s/[\/.]/-/g" ).report.json' _ {}  \;

      - name: Publish the coverage for main branch
        if: ${{ github.ref == 'refs/heads/main' }}
        run: bash <(curl -s https://codecov.io/bash)

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
