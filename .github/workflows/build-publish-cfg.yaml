# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Publish Docker Image

on:
  workflow_call:
    inputs:
      name:
        description: Name of the container
        type: string
        required: true
      directory:
        description: Directory of service
        type: string
        required: true
      file:
        description: Dockerfile to build
        type: string
        required: true
      template-file:
        description: Template dockefile to resolve
        type: string
        required: false
      www-name:
        description: Name of the www artifact
        type: string
        required: false
      www-build-dir:
        description: Directory destination to download the www artifact
        type: string
        required: false


env:
  REGISTRY: ghcr.io

jobs:
  build-and-publish-with-cfg:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: CPU Info
        run: |
          cat /proc/cpuinfo
          echo "Number of cores: $(nproc)"
          echo "Number of threads: $(nproc --all)"
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate WWW Inputs
        run: |
          if [[ -n "${{ inputs.www-name }}" && -z "${{ inputs.www-build-dir }}" ]]; then
            echo "inputs.www-build-dir is missing."
            exit 1
          fi
          if [[ -z "${{ inputs.www-name }}" && -n "${{ inputs.www-build-dir }}" ]]; then
            echo "inputs.www-name is missing."
            exit 1
          fi
          echo "Both inputs are either empty or set. Validation successful."

      - uses: actions/download-artifact@v3
        if: ${{ inputs.www-name && inputs.www-build-dir }}
        with:
          name: ${{ inputs.www-name }}
          path: ${{ inputs.www-build-dir }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set vars.branch
        id: vars
        run: BRANCH=${GITHUB_REF#refs/*/} && echo ${BRANCH} && echo "branch=${BRANCH}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for docker image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ inputs.name }}
          tags: |
            type=raw,enable={{is_default_branch}},value=vnext
            type=sha,enable={{is_default_branch}},prefix=vnext-,format=short
            type=ref,event=pr,prefix=vnext-pr,suffix=-{{sha}}
            type=ref,event=pr,prefix=vnext-pr
            type=ref,enable={{is_default_branch}},event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      
      - name: Resolve template file
        if: ${{ inputs.template-file }}
        run: |
          mkdir -p $(dirname ${{ inputs.file }})
          awk '{gsub("@NAME@","${{ inputs.name }}")} {gsub("@DIRECTORY@","${{ inputs.directory }}")} {print}' ${{ inputs.template-file }} > ${{ inputs.file }}

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            DIRECTORY=${{ inputs.directory }}
            NAME=${{ inputs.name }}
          file: ${{ inputs.file }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}