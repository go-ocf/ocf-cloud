// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: snapshot-service/pb/ruleActionLink.proto

package pb

import (
	commands "github.com/plgd-dev/hub/v2/resource-aggregate/commands"
	events "github.com/plgd-dev/hub/v2/resource-aggregate/events"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RuleActionParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Action:
	//
	//	*RuleActionParameters_Origin_
	//	*RuleActionParameters_ResourceId
	Action isRuleActionParameters_Action `protobuf_oneof:"action"`
}

func (x *RuleActionParameters) Reset() {
	*x = RuleActionParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_service_pb_ruleActionLink_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleActionParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleActionParameters) ProtoMessage() {}

func (x *RuleActionParameters) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_service_pb_ruleActionLink_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleActionParameters.ProtoReflect.Descriptor instead.
func (*RuleActionParameters) Descriptor() ([]byte, []int) {
	return file_snapshot_service_pb_ruleActionLink_proto_rawDescGZIP(), []int{0}
}

func (x *RuleActionParameters) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *RuleActionParameters) GetAction() isRuleActionParameters_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *RuleActionParameters) GetOrigin() *RuleActionParameters_Origin {
	if x, ok := x.GetAction().(*RuleActionParameters_Origin_); ok {
		return x.Origin
	}
	return nil
}

func (x *RuleActionParameters) GetResourceId() *commands.ResourceId {
	if x, ok := x.GetAction().(*RuleActionParameters_ResourceId); ok {
		return x.ResourceId
	}
	return nil
}

type isRuleActionParameters_Action interface {
	isRuleActionParameters_Action()
}

type RuleActionParameters_Origin_ struct {
	Origin *RuleActionParameters_Origin `protobuf:"bytes,2,opt,name=origin,proto3,oneof"` // use the origin resource
}

type RuleActionParameters_ResourceId struct {
	ResourceId *commands.ResourceId `protobuf:"bytes,3,opt,name=resource_id,json=resourceId,proto3,oneof"` // use the given resource
}

func (*RuleActionParameters_Origin_) isRuleActionParameters_Action() {}

func (*RuleActionParameters_ResourceId) isRuleActionParameters_Action() {}

type RuleActionLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Enabled bool   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	RuleId  string `protobuf:"bytes,4,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Owner   string `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	// Types that are assignable to Frequency:
	//
	//	*RuleActionLink_OncePerDevice
	//	*RuleActionLink_OncePerResource
	//	*RuleActionLink_IntervalPerDevice
	//	*RuleActionLink_IntervalPerResource
	//	*RuleActionLink_Always
	Frequency isRuleActionLink_Frequency `protobuf_oneof:"frequency"`
	Scenes    []*RuleActionParameters    `protobuf:"bytes,32,rep,name=scenes,proto3" json:"scenes,omitempty"` // scenes to invoke
	Rules     []*RuleActionParameters    `protobuf:"bytes,33,rep,name=rules,proto3" json:"rules,omitempty"`   // rules to invoke
}

func (x *RuleActionLink) Reset() {
	*x = RuleActionLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_service_pb_ruleActionLink_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleActionLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleActionLink) ProtoMessage() {}

func (x *RuleActionLink) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_service_pb_ruleActionLink_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleActionLink.ProtoReflect.Descriptor instead.
func (*RuleActionLink) Descriptor() ([]byte, []int) {
	return file_snapshot_service_pb_ruleActionLink_proto_rawDescGZIP(), []int{1}
}

func (x *RuleActionLink) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RuleActionLink) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuleActionLink) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *RuleActionLink) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *RuleActionLink) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (m *RuleActionLink) GetFrequency() isRuleActionLink_Frequency {
	if m != nil {
		return m.Frequency
	}
	return nil
}

func (x *RuleActionLink) GetOncePerDevice() bool {
	if x, ok := x.GetFrequency().(*RuleActionLink_OncePerDevice); ok {
		return x.OncePerDevice
	}
	return false
}

func (x *RuleActionLink) GetOncePerResource() bool {
	if x, ok := x.GetFrequency().(*RuleActionLink_OncePerResource); ok {
		return x.OncePerResource
	}
	return false
}

func (x *RuleActionLink) GetIntervalPerDevice() int64 {
	if x, ok := x.GetFrequency().(*RuleActionLink_IntervalPerDevice); ok {
		return x.IntervalPerDevice
	}
	return 0
}

func (x *RuleActionLink) GetIntervalPerResource() int64 {
	if x, ok := x.GetFrequency().(*RuleActionLink_IntervalPerResource); ok {
		return x.IntervalPerResource
	}
	return 0
}

func (x *RuleActionLink) GetAlways() bool {
	if x, ok := x.GetFrequency().(*RuleActionLink_Always); ok {
		return x.Always
	}
	return false
}

func (x *RuleActionLink) GetScenes() []*RuleActionParameters {
	if x != nil {
		return x.Scenes
	}
	return nil
}

func (x *RuleActionLink) GetRules() []*RuleActionParameters {
	if x != nil {
		return x.Rules
	}
	return nil
}

type isRuleActionLink_Frequency interface {
	isRuleActionLink_Frequency()
}

type RuleActionLink_OncePerDevice struct {
	OncePerDevice bool `protobuf:"varint,16,opt,name=once_per_device,json=oncePerDevice,proto3,oneof"` // the rule association is applied once per device
}

type RuleActionLink_OncePerResource struct {
	OncePerResource bool `protobuf:"varint,17,opt,name=once_per_resource,json=oncePerResource,proto3,oneof"` // the rule will be invoked once per resource
}

type RuleActionLink_IntervalPerDevice struct {
	IntervalPerDevice int64 `protobuf:"varint,18,opt,name=interval_per_device,json=intervalPerDevice,proto3,oneof"` // in nanoseconds
}

type RuleActionLink_IntervalPerResource struct {
	IntervalPerResource int64 `protobuf:"varint,19,opt,name=interval_per_resource,json=intervalPerResource,proto3,oneof"` // in nanoseconds
}

type RuleActionLink_Always struct {
	Always bool `protobuf:"varint,20,opt,name=always,proto3,oneof"`
}

func (*RuleActionLink_OncePerDevice) isRuleActionLink_Frequency() {}

func (*RuleActionLink_OncePerResource) isRuleActionLink_Frequency() {}

func (*RuleActionLink_IntervalPerDevice) isRuleActionLink_Frequency() {}

func (*RuleActionLink_IntervalPerResource) isRuleActionLink_Frequency() {}

func (*RuleActionLink_Always) isRuleActionLink_Frequency() {}

type AppliedRuleActionLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                // the id of the rule link
	OriginInvoker    *commands.ResourceId      `protobuf:"bytes,2,opt,name=origin_invoker,json=originInvoker,proto3" json:"origin_invoker,omitempty"`     // for once_per_device or once_per_resource
	TimestampStart   int64                     `protobuf:"varint,3,opt,name=timestamp_start,json=timestampStart,proto3" json:"timestamp_start,omitempty"` // when the rule association was applied
	TimestampEnd     int64                     `protobuf:"varint,4,opt,name=timestamp_end,json=timestampEnd,proto3" json:"timestamp_end,omitempty"`       // when the rule association was removed
	ResourcesUpdated []*events.ResourceUpdated `protobuf:"bytes,16,rep,name=resources_updated,json=resourcesUpdated,proto3" json:"resources_updated,omitempty"`
}

func (x *AppliedRuleActionLink) Reset() {
	*x = AppliedRuleActionLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_service_pb_ruleActionLink_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppliedRuleActionLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppliedRuleActionLink) ProtoMessage() {}

func (x *AppliedRuleActionLink) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_service_pb_ruleActionLink_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppliedRuleActionLink.ProtoReflect.Descriptor instead.
func (*AppliedRuleActionLink) Descriptor() ([]byte, []int) {
	return file_snapshot_service_pb_ruleActionLink_proto_rawDescGZIP(), []int{2}
}

func (x *AppliedRuleActionLink) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppliedRuleActionLink) GetOriginInvoker() *commands.ResourceId {
	if x != nil {
		return x.OriginInvoker
	}
	return nil
}

func (x *AppliedRuleActionLink) GetTimestampStart() int64 {
	if x != nil {
		return x.TimestampStart
	}
	return 0
}

func (x *AppliedRuleActionLink) GetTimestampEnd() int64 {
	if x != nil {
		return x.TimestampEnd
	}
	return 0
}

func (x *AppliedRuleActionLink) GetResourcesUpdated() []*events.ResourceUpdated {
	if x != nil {
		return x.ResourcesUpdated
	}
	return nil
}

type RuleActionParameters_Origin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewHref string `protobuf:"bytes,1,opt,name=new_href,json=newHref,proto3" json:"new_href,omitempty"` // replace the origin href with the given href
}

func (x *RuleActionParameters_Origin) Reset() {
	*x = RuleActionParameters_Origin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_service_pb_ruleActionLink_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleActionParameters_Origin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleActionParameters_Origin) ProtoMessage() {}

func (x *RuleActionParameters_Origin) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_service_pb_ruleActionLink_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleActionParameters_Origin.ProtoReflect.Descriptor instead.
func (*RuleActionParameters_Origin) Descriptor() ([]byte, []int) {
	return file_snapshot_service_pb_ruleActionLink_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RuleActionParameters_Origin) GetNewHref() string {
	if x != nil {
		return x.NewHref
	}
	return ""
}

var File_snapshot_service_pb_ruleActionLink_proto protoreflect.FileDescriptor

var file_snapshot_service_pb_ruleActionLink_proto_rawDesc = []byte{
	0x0a, 0x28, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x62, 0x1a, 0x25,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x01, 0x0a, 0x14, 0x52, 0x75,
	0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x49, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x43, 0x0a,
	0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x1a, 0x23, 0x0a, 0x06, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x6e, 0x65, 0x77, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x65, 0x77, 0x48, 0x72, 0x65, 0x66, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xe6, 0x03, 0x0a, 0x0e, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0d, 0x6f, 0x6e,
	0x63, 0x65, 0x50, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6f,
	0x6e, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x6e, 0x63, 0x65, 0x50, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x50, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x13, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x06, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x06, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x12, 0x40, 0x0a, 0x06, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x73, 0x18, 0x20, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x06, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x12, 0x3e, 0x0a,
	0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x21, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x0b, 0x0a,
	0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x92, 0x02, 0x0a, 0x15, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x69,
	0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x0d,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x27, 0x0a,
	0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x45, 0x6e, 0x64, 0x12, 0x52, 0x0a, 0x11, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x10, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6c,
	0x67, 0x64, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x68, 0x75, 0x62, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70,
	0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_snapshot_service_pb_ruleActionLink_proto_rawDescOnce sync.Once
	file_snapshot_service_pb_ruleActionLink_proto_rawDescData = file_snapshot_service_pb_ruleActionLink_proto_rawDesc
)

func file_snapshot_service_pb_ruleActionLink_proto_rawDescGZIP() []byte {
	file_snapshot_service_pb_ruleActionLink_proto_rawDescOnce.Do(func() {
		file_snapshot_service_pb_ruleActionLink_proto_rawDescData = protoimpl.X.CompressGZIP(file_snapshot_service_pb_ruleActionLink_proto_rawDescData)
	})
	return file_snapshot_service_pb_ruleActionLink_proto_rawDescData
}

var file_snapshot_service_pb_ruleActionLink_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_snapshot_service_pb_ruleActionLink_proto_goTypes = []interface{}{
	(*RuleActionParameters)(nil),        // 0: snapshotservice.pb.RuleActionParameters
	(*RuleActionLink)(nil),              // 1: snapshotservice.pb.RuleActionLink
	(*AppliedRuleActionLink)(nil),       // 2: snapshotservice.pb.AppliedRuleActionLink
	(*RuleActionParameters_Origin)(nil), // 3: snapshotservice.pb.RuleActionParameters.Origin
	(*commands.ResourceId)(nil),         // 4: resourceaggregate.pb.ResourceId
	(*events.ResourceUpdated)(nil),      // 5: resourceaggregate.pb.ResourceUpdated
}
var file_snapshot_service_pb_ruleActionLink_proto_depIdxs = []int32{
	3, // 0: snapshotservice.pb.RuleActionParameters.origin:type_name -> snapshotservice.pb.RuleActionParameters.Origin
	4, // 1: snapshotservice.pb.RuleActionParameters.resource_id:type_name -> resourceaggregate.pb.ResourceId
	0, // 2: snapshotservice.pb.RuleActionLink.scenes:type_name -> snapshotservice.pb.RuleActionParameters
	0, // 3: snapshotservice.pb.RuleActionLink.rules:type_name -> snapshotservice.pb.RuleActionParameters
	4, // 4: snapshotservice.pb.AppliedRuleActionLink.origin_invoker:type_name -> resourceaggregate.pb.ResourceId
	5, // 5: snapshotservice.pb.AppliedRuleActionLink.resources_updated:type_name -> resourceaggregate.pb.ResourceUpdated
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_snapshot_service_pb_ruleActionLink_proto_init() }
func file_snapshot_service_pb_ruleActionLink_proto_init() {
	if File_snapshot_service_pb_ruleActionLink_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_snapshot_service_pb_ruleActionLink_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleActionParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snapshot_service_pb_ruleActionLink_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleActionLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snapshot_service_pb_ruleActionLink_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppliedRuleActionLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snapshot_service_pb_ruleActionLink_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleActionParameters_Origin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_snapshot_service_pb_ruleActionLink_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*RuleActionParameters_Origin_)(nil),
		(*RuleActionParameters_ResourceId)(nil),
	}
	file_snapshot_service_pb_ruleActionLink_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*RuleActionLink_OncePerDevice)(nil),
		(*RuleActionLink_OncePerResource)(nil),
		(*RuleActionLink_IntervalPerDevice)(nil),
		(*RuleActionLink_IntervalPerResource)(nil),
		(*RuleActionLink_Always)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snapshot_service_pb_ruleActionLink_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_snapshot_service_pb_ruleActionLink_proto_goTypes,
		DependencyIndexes: file_snapshot_service_pb_ruleActionLink_proto_depIdxs,
		MessageInfos:      file_snapshot_service_pb_ruleActionLink_proto_msgTypes,
	}.Build()
	File_snapshot_service_pb_ruleActionLink_proto = out.File
	file_snapshot_service_pb_ruleActionLink_proto_rawDesc = nil
	file_snapshot_service_pb_ruleActionLink_proto_goTypes = nil
	file_snapshot_service_pb_ruleActionLink_proto_depIdxs = nil
}
