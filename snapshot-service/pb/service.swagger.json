{
  "swagger": "2.0",
  "info": {
    "title": "PLGD Rule Engine API",
    "description": "API for configuring rule engine in PLGD",
    "version": "1.0",
    "contact": {
      "name": "plgd.dev",
      "url": "https://github.com/plgd-dev/hub",
      "email": "info@plgd.dev"
    },
    "license": {
      "name": "Apache License 2.0",
      "url": "https://github.com/plgd-dev/hub/blob/v2/LICENSE"
    }
  },
  "tags": [
    {
      "name": "RuleEngine"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "application/protojson"
  ],
  "produces": [
    "application/json",
    "application/protojson"
  ],
  "paths": {
    "/api/v1/Rules": {
      "delete": {
        "operationId": "RuleEngine_DeleteRules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteRulesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "idFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Rules"
        ]
      }
    },
    "/api/v1/Scenes": {
      "delete": {
        "operationId": "RuleEngine_DeleteScenes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteScenesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "idFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Scenes"
        ]
      }
    },
    "/api/v1/applied-rules-action-links": {
      "get": {
        "operationId": "RuleEngine_GetAppliedRuleActionLinks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbAppliedRuleActionLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "idFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ruleIdFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "deviceIdFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Rules"
        ]
      },
      "delete": {
        "operationId": "RuleEngine_DeleteAppliedRuleActionLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteAppliedRuleActionLinkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "idFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Rules"
        ]
      }
    },
    "/api/v1/rules": {
      "get": {
        "operationId": "RuleEngine_GetRules",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/pbRule"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of pbRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "idFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Rules"
        ]
      },
      "post": {
        "operationId": "RuleEngine_CreateRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateRuleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbRule"
            }
          }
        ],
        "tags": [
          "Rules"
        ]
      }
    },
    "/api/v1/rules-action-links": {
      "get": {
        "operationId": "RuleEngine_GetRuleActionLinks",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/pbRuleActionLink"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of pbRuleActionLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "idFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Rules"
        ]
      },
      "delete": {
        "operationId": "RuleEngine_DeleteRuleActionLinks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteRuleActionLinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "idFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Rules"
        ]
      },
      "post": {
        "operationId": "RuleEngine_CreateRuleActionLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateRuleActionLinkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbRuleActionLink"
            }
          }
        ],
        "tags": [
          "Rules"
        ]
      }
    },
    "/api/v1/rules-action-links/{id}": {
      "post": {
        "operationId": "RuleEngine_InvokeRuleActionLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbInvokeRuleActionLinkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "resourceId": {
                  "$ref": "#/definitions/pbResourceId",
                  "title": "for once_per_device or once_per_resource"
                },
                "force": {
                  "type": "boolean",
                  "title": "override the frequency"
                }
              }
            }
          }
        ],
        "tags": [
          "Rules"
        ]
      },
      "put": {
        "operationId": "RuleEngine_UpdateRuleActionLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateRuleActionLinkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "ruleId": {
                  "type": "string"
                },
                "owner": {
                  "type": "string"
                },
                "oncePerDevice": {
                  "type": "boolean",
                  "title": "the rule association is applied once per device"
                },
                "oncePerResource": {
                  "type": "boolean",
                  "title": "the rule will be invoked once per resource"
                },
                "intervalPerDevice": {
                  "type": "string",
                  "format": "int64",
                  "title": "in nanoseconds"
                },
                "intervalPerResource": {
                  "type": "string",
                  "format": "int64",
                  "title": "in nanoseconds"
                },
                "always": {
                  "type": "boolean"
                },
                "scenes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/pbRuleActionParameters"
                  },
                  "title": "scenes to invoke"
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/pbRuleActionParameters"
                  },
                  "title": "rules to invoke"
                }
              }
            }
          }
        ],
        "tags": [
          "Rules"
        ]
      }
    },
    "/api/v1/rules/{id}": {
      "post": {
        "operationId": "RuleEngine_InvokeRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbInvokeRuleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "resourceId": {
                  "$ref": "#/definitions/pbResourceId",
                  "title": "origin resource that starts the execution"
                },
                "content": {
                  "$ref": "#/definitions/pbContent",
                  "title": "use content instead of load it for resource_id"
                }
              }
            }
          }
        ],
        "tags": [
          "Rules"
        ]
      },
      "put": {
        "operationId": "RuleEngine_UpdateRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateRuleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "yqEngine": {
                  "$ref": "#/definitions/pbYQEngine"
                },
                "enabled": {
                  "type": "boolean",
                  "title": "RuleExpression expression = 4;"
                },
                "owner": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Rules"
        ]
      }
    },
    "/api/v1/scenes": {
      "get": {
        "operationId": "RuleEngine_GetScenes",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/pbScene"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of pbScene"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "idFilter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Scenes"
        ]
      },
      "post": {
        "operationId": "RuleEngine_CreateScene",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateSceneResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbScene"
            }
          }
        ],
        "tags": [
          "Scenes"
        ]
      }
    },
    "/api/v1/scenes/{id}": {
      "put": {
        "operationId": "RuleEngine_UpdateScene",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateSceneResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "resources": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/pbResourceSnapshot"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Scenes"
        ]
      }
    }
  },
  "definitions": {
    "ResourceSnapshotApplyToDevices": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "boolean",
          "title": "device that is originally started the scene"
        },
        "deviceIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "identifies devices"
        },
        "deviceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "device type just for filtering device when device_ids and current device is not set"
        }
      }
    },
    "ResourceSnapshotApplyToResources": {
      "type": "object",
      "properties": {
        "hrefs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "identifies resources at the device."
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "and operator among types -\u003e type defines a list of properties in content"
        }
      }
    },
    "RuleActionParametersOrigin": {
      "type": "object",
      "properties": {
        "newHref": {
          "type": "string",
          "title": "replace the origin href with the given href"
        }
      }
    },
    "YQEngineInput": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "resourceId": {
          "$ref": "#/definitions/pbResourceId"
        },
        "value": {}
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "pbAppliedRuleActionLink": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "the id of the rule link"
        },
        "originInvoker": {
          "$ref": "#/definitions/pbResourceId",
          "title": "for once_per_device or once_per_resource"
        },
        "timestampStart": {
          "type": "string",
          "format": "int64",
          "title": "when the rule association was applied"
        },
        "timestampEnd": {
          "type": "string",
          "format": "int64",
          "title": "when the rule association was removed"
        },
        "resourcesUpdated": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbResourceUpdated"
          }
        }
      }
    },
    "pbAuditContext": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        }
      }
    },
    "pbContent": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        },
        "contentType": {
          "type": "string"
        },
        "coapContentFormat": {
          "type": "integer",
          "format": "int32",
          "title": "-1 means content-format was not provided"
        }
      }
    },
    "pbCreateRuleActionLinkResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "pbCreateRuleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "pbCreateSceneResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "pbDeleteAppliedRuleActionLinkResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "pbDeleteRuleActionLinksResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "pbDeleteRulesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "pbDeleteScenesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "pbEventMetadata": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "uint64"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        },
        "connectionId": {
          "type": "string"
        },
        "sequence": {
          "type": "string",
          "format": "uint64",
          "title": "sequence number within the same connection_id; the ResourceChanged event uses the value to skip old events, other event types might not fill the value"
        },
        "hubId": {
          "type": "string",
          "title": "the hub which sent the event"
        }
      }
    },
    "pbGenerateContent": {
      "type": "object",
      "properties": {
        "yqEngine": {
          "$ref": "#/definitions/pbYQEngine"
        },
        "contentType": {
          "type": "string"
        }
      }
    },
    "pbInvokeRuleActionLinkResponse": {
      "type": "object"
    },
    "pbInvokeRuleResponse": {
      "type": "object"
    },
    "pbResourceId": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "href": {
          "type": "string"
        }
      }
    },
    "pbResourceSnapshot": {
      "type": "object",
      "properties": {
        "deviceFilter": {
          "$ref": "#/definitions/ResourceSnapshotApplyToDevices"
        },
        "resourceFilter": {
          "$ref": "#/definitions/ResourceSnapshotApplyToResources"
        },
        "defined": {
          "$ref": "#/definitions/pbContent"
        },
        "generated": {
          "$ref": "#/definitions/pbGenerateContent"
        },
        "resourceInterface": {
          "type": "string",
          "title": "optional update interface"
        },
        "timeToLive": {
          "type": "string",
          "format": "int64",
          "title": "optional update command time to live"
        }
      }
    },
    "pbResourceUpdated": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/pbResourceId"
        },
        "status": {
          "$ref": "#/definitions/resourceaggregatepbStatus"
        },
        "content": {
          "$ref": "#/definitions/pbContent"
        },
        "auditContext": {
          "$ref": "#/definitions/pbAuditContext"
        },
        "eventMetadata": {
          "$ref": "#/definitions/pbEventMetadata"
        },
        "openTelemetryCarrier": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Open telemetry data propagated to asynchronous events"
        }
      }
    },
    "pbRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "yqEngine": {
          "$ref": "#/definitions/pbYQEngine"
        },
        "enabled": {
          "type": "boolean",
          "title": "RuleExpression expression = 4;"
        },
        "owner": {
          "type": "string"
        }
      }
    },
    "pbRuleActionLink": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "ruleId": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "oncePerDevice": {
          "type": "boolean",
          "title": "the rule association is applied once per device"
        },
        "oncePerResource": {
          "type": "boolean",
          "title": "the rule will be invoked once per resource"
        },
        "intervalPerDevice": {
          "type": "string",
          "format": "int64",
          "title": "in nanoseconds"
        },
        "intervalPerResource": {
          "type": "string",
          "format": "int64",
          "title": "in nanoseconds"
        },
        "always": {
          "type": "boolean"
        },
        "scenes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbRuleActionParameters"
          },
          "title": "scenes to invoke"
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbRuleActionParameters"
          },
          "title": "rules to invoke"
        }
      }
    },
    "pbRuleActionParameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "origin": {
          "$ref": "#/definitions/RuleActionParametersOrigin",
          "title": "use the origin resource"
        },
        "resourceId": {
          "$ref": "#/definitions/pbResourceId",
          "title": "use the given resource"
        }
      }
    },
    "pbScene": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbResourceSnapshot"
          }
        }
      }
    },
    "pbUpdateRuleActionLinkResponse": {
      "type": "object"
    },
    "pbUpdateRuleResponse": {
      "type": "object"
    },
    "pbUpdateSceneResponse": {
      "type": "object"
    },
    "pbYQEngine": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/YQEngineInput"
          },
          "title": "content of resources will encoded on yq via $name"
        },
        "yqExpression": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "resourceaggregatepbStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "OK",
        "BAD_REQUEST",
        "UNAUTHORIZED",
        "FORBIDDEN",
        "NOT_FOUND",
        "UNAVAILABLE",
        "NOT_IMPLEMENTED",
        "ACCEPTED",
        "ERROR",
        "METHOD_NOT_ALLOWED",
        "CREATED",
        "CANCELED",
        "NOT_MODIFIED"
      ],
      "default": "UNKNOWN",
      "description": " - CANCELED: Canceled indicates the operation was canceled (typically by the user).\n - NOT_MODIFIED: Valid indicates the content hasn't changed. (provided etag in GET request is same as the resource etag)."
    }
  }
}
